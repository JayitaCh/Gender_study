Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:23:40.125183
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -16.985913
     reciprocal of condition number         : 9.25902e-07
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1235.36
Rho-squared vs equal shares                  :  0.2335 
Adj.Rho-squared vs equal shares              :  0.2267 
Rho-squared vs observed shares               :  0.1221 
Adj.Rho-squared vs observed shares           :  0.1157 
AIC                                         :  2492.72 
BIC                                         :  2550.92 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:1.03 
     pre-estimation                         :  00:00:0.63 
     estimation                             :  00:00:0.09 
     post-estimation                        :  00:00:0.32 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.022760    0.131659      0.1729    0.167102        0.1362
asc_others   -1.012638    0.223232     -4.5363    0.234759       -4.3135
bTInc        -0.005591  4.2066e-04    -13.2904  5.6962e-04       -9.8149
bCost         0.022607    0.005893      3.8360    0.007297        3.0983
bCro          0.621240    0.073611      8.4394    0.069714        8.9113
bWaitEnv1     0.100281    0.100212      1.0007    0.101505        0.9879
bWaitEnv2     0.212151    0.094877      2.2361    0.104966        2.0211
bStop1        0.208639    0.060684      3.4381    0.065282        3.1960
bStop2        0.076927    0.049320      1.5597    0.043690        1.7608
bSafety1      0.397038    0.101362      3.9170    0.100167        3.9638
bSafety2      0.284522    0.118618      2.3986    0.109230        2.6048


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.017334   -0.004990   1.248e-05 -6.2764e-04   3.569e-05  5.3937e-04
asc_others   -0.004990    0.049832   4.837e-05  6.4901e-04    0.002990    0.005613
bTInc        1.248e-05   4.837e-05   1.770e-07  -2.755e-07  -1.899e-06  -4.599e-06
bCost      -6.2764e-04  6.4901e-04  -2.755e-07   3.473e-05   3.253e-05   6.956e-05
bCro         3.569e-05    0.002990  -1.899e-06   3.253e-05    0.005419 -3.0110e-04
bWaitEnv1   5.3937e-04    0.005613  -4.599e-06   6.956e-05 -3.0110e-04    0.010042
bWaitEnv2   7.0965e-04    0.003813   1.020e-06 -1.0712e-04 -9.1989e-04    0.003133
bStop1     -3.8456e-04    0.003684   2.524e-06   4.703e-05 -1.7621e-04  7.9428e-04
bStop2       -0.001080    0.003494   2.039e-06   5.303e-05 -3.0262e-04  5.2897e-04
bSafety1    4.6766e-04    0.009068   4.142e-07   4.413e-05  2.9919e-04  3.5401e-04
bSafety2     -0.005052    0.012190  -1.774e-06  2.4003e-04 -2.0971e-04    0.001767
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   7.0965e-04 -3.8456e-04   -0.001080  4.6766e-04   -0.005052
asc_others    0.003813    0.003684    0.003494    0.009068    0.012190
bTInc        1.020e-06   2.524e-06   2.039e-06   4.142e-07  -1.774e-06
bCost      -1.0712e-04   4.703e-05   5.303e-05   4.413e-05  2.4003e-04
bCro       -9.1989e-04 -1.7621e-04 -3.0262e-04  2.9919e-04 -2.0971e-04
bWaitEnv1     0.003133  7.9428e-04  5.2897e-04  3.5401e-04    0.001767
bWaitEnv2     0.009002  -6.693e-05  4.0680e-04    0.003030    0.002844
bStop1      -6.693e-05    0.003683    0.001919 -3.6281e-04  6.6788e-04
bStop2      4.0680e-04    0.001919    0.002432  1.9328e-04    0.001349
bSafety1      0.003030 -3.6281e-04  1.9328e-04    0.010274    0.006547
bSafety2      0.002844  6.6788e-04    0.001349    0.006547    0.014070

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.027923   -0.005437   1.985e-05   -0.001034    0.001750  5.5304e-04
asc_others   -0.005437    0.055112   6.851e-05  8.0273e-04    0.002157    0.006913
bTInc        1.985e-05   6.851e-05   3.245e-07  -2.890e-07   2.168e-06   2.380e-07
bCost        -0.001034  8.0273e-04  -2.890e-07   5.324e-05  -1.825e-05   9.926e-05
bCro          0.001750    0.002157   2.168e-06  -1.825e-05    0.004860 -9.9218e-04
bWaitEnv1   5.5304e-04    0.006913   2.380e-07   9.926e-05 -9.9218e-04    0.010303
bWaitEnv2     0.003331    0.005138  -1.060e-06 -1.5935e-04   -0.001067    0.004521
bStop1       -0.001599    0.005018   4.125e-06  1.0553e-04 -3.6402e-04  9.1398e-04
bStop2       -0.001844    0.004292   3.059e-06   8.691e-05 -3.2817e-04  7.2852e-04
bSafety1      0.001610    0.009313  -7.363e-06   8.535e-05 -4.0375e-04  9.6386e-04
bSafety2     -0.008727    0.012818  -4.949e-06  4.5400e-04   -0.001419    0.001762
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.003331   -0.001599   -0.001844    0.001610   -0.008727
asc_others    0.005138    0.005018    0.004292    0.009313    0.012818
bTInc       -1.060e-06   4.125e-06   3.059e-06  -7.363e-06  -4.949e-06
bCost      -1.5935e-04  1.0553e-04   8.691e-05   8.535e-05  4.5400e-04
bCro         -0.001067 -3.6402e-04 -3.2817e-04 -4.0375e-04   -0.001419
bWaitEnv1     0.004521  9.1398e-04  7.2852e-04  9.6386e-04    0.001762
bWaitEnv2     0.011018 -4.7603e-04  2.6882e-04    0.003595    0.002638
bStop1     -4.7603e-04    0.004262    0.001838  -3.040e-05    0.001613
bStop2      2.6882e-04    0.001838    0.001909  4.4099e-04    0.001827
bSafety1      0.003595  -3.040e-05  4.4099e-04    0.010033    0.004938
bSafety2      0.002638    0.001613    0.001827    0.004938    0.011931

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000     -0.1698    0.225406    -0.80891    0.003683     0.04088
asc_others   -0.169788      1.0000    0.515142     0.49333    0.181934     0.25089
bTInc         0.225406      0.5151    1.000000    -0.11114   -0.061335    -0.10910
bCost        -0.808910      0.4933   -0.111138     1.00000    0.074992     0.11778
bCro          0.003683      0.1819   -0.061335     0.07499    1.000000    -0.04082
bWaitEnv1     0.040881      0.2509   -0.109099     0.11778   -0.040817     1.00000
bWaitEnv2     0.056811      0.1801    0.025554    -0.19158   -0.131713     0.32956
bStop1       -0.048132      0.2720    0.098890     0.13151   -0.039446     0.13061
bStop2       -0.166292      0.3174    0.098273     0.18246   -0.083353     0.10702
bSafety1      0.035043      0.4008    0.009714     0.07388    0.040098     0.03485
bSafety2     -0.323468      0.4604   -0.035561     0.34337   -0.024017     0.14863
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.05681    -0.04813    -0.16629    0.035043    -0.32347
asc_others     0.18005     0.27198     0.31735    0.400751     0.46036
bTInc          0.02555     0.09889     0.09827    0.009714    -0.03556
bCost         -0.19158     0.13151     0.18246    0.073878     0.34337
bCro          -0.13171    -0.03945    -0.08335    0.040098    -0.02402
bWaitEnv1      0.32956     0.13061     0.10702    0.034851     0.14863
bWaitEnv2      1.00000    -0.01162     0.08694    0.315073     0.25272
bStop1        -0.01162     1.00000     0.64105   -0.058984     0.09278
bStop2         0.08694     0.64105     1.00000    0.038662     0.23064
bSafety1       0.31507    -0.05898     0.03866    1.000000     0.54448
bSafety2       0.25272     0.09278     0.23064    0.544479     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     -0.1386    0.208510    -0.84842     0.15019    0.032605
asc_others    -0.13860      1.0000    0.512341     0.46863     0.13180    0.290096
bTInc          0.20851      0.5123    1.000000    -0.06954     0.05459    0.004116
bCost         -0.84842      0.4686   -0.069539     1.00000    -0.03587    0.134015
bCro           0.15019      0.1318    0.054592    -0.03587     1.00000   -0.140213
bWaitEnv1      0.03261      0.2901    0.004116     0.13401    -0.14021    1.000000
bWaitEnv2      0.18991      0.2085   -0.017726    -0.20806    -0.14575    0.424329
bStop1        -0.14654      0.3274    0.110933     0.22155    -0.07999    0.137929
bStop2        -0.25258      0.4185    0.122936     0.27263    -0.10775    0.164275
bSafety1       0.09616      0.3961   -0.129052     0.11678    -0.05782    0.094799
bSafety2      -0.47815      0.4999   -0.079537     0.56963    -0.18631    0.158914
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.18991   -0.146539    -0.25258    0.096163    -0.47815
asc_others     0.20851    0.327445     0.41850    0.396051     0.49985
bTInc         -0.01773    0.110933     0.12294   -0.129052    -0.07954
bCost         -0.20806    0.221554     0.27263    0.116780     0.56963
bCro          -0.14575   -0.079987    -0.10775   -0.057819    -0.18631
bWaitEnv1      0.42433    0.137929     0.16428    0.094799     0.15891
bWaitEnv2      1.00000   -0.069469     0.05862    0.341912     0.23010
bStop1        -0.06947    1.000000     0.64453   -0.004648     0.22617
bStop2         0.05862    0.644526     1.00000    0.100770     0.38290
bSafety1       0.34191   -0.004648     0.10077    1.000000     0.45130
bSafety2       0.23010    0.226174     0.38290    0.451296     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 769          0.03832328
 437          0.07936396
 227          0.11811682
 341          0.13527411
 288          0.13682135
  77          0.14575721
 469          0.14645568
 581          0.15046428
 780          0.15336514
 657          0.16127475
 134          0.16629742
 802          0.16974628
  83          0.17345325
 878          0.17460806
 935          0.17900930
 537          0.17912319
 717          0.18319418
 351          0.18484821
 988          0.18489048
 601          0.19690461

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.022760    0.022760
asc_others       0.000   -1.012638   -1.012638
bTInc            0.000   -0.005591   -0.005591
bCost            0.000    0.022607    0.022607
bCro             0.000    0.621240    0.621240
bWaitEnv1        0.000    0.100281    0.100281
bWaitEnv2        0.000    0.212151    0.212151
bStop1           0.000    0.208639    0.208639
bStop2           0.000    0.076927    0.076927
bSafety1         0.000    0.397038    0.397038
bSafety2         0.000    0.284522    0.284522

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.022760010
asc_others 1.012638306
bTInc      0.005590768
bCost      0.022606631
bCro       0.621240075
bWaitEnv1  0.100280789
bWaitEnv2  0.212150610
bStop1     0.208639273
bStop2     0.076927007
bSafety1   0.397037922
bSafety2   0.284521901


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(relInc**0.5)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop2/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop2/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
