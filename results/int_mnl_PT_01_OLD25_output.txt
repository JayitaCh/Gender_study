Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:27:21.164721
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -16.910404
     reciprocal of condition number         : 8.80998e-07
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1223.48
Rho-squared vs equal shares                  :  0.2409 
Adj.Rho-squared vs equal shares              :  0.234 
Rho-squared vs observed shares               :  0.1306 
Adj.Rho-squared vs observed shares           :  0.1242 
AIC                                         :  2468.95 
BIC                                         :  2527.15 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.81 
     pre-estimation                         :  00:00:0.38 
     estimation                             :  00:00:0.08 
     post-estimation                        :  00:00:0.35 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.272406    0.099109      2.7485    0.114194        2.3855
asc_others   -1.357021    0.225926     -6.0065    0.244486       -5.5505
bTInc        -0.005420  4.4066e-04    -12.2987  5.9962e-04       -9.0383
bCost         0.028522    0.009436      3.0226    0.009913        2.8772
bCro          0.632143    0.074423      8.4940    0.070172        9.0085
bWaitEnv1     0.038827    0.098656      0.3936    0.097426        0.3985
bWaitEnv2     0.156293    0.097793      1.5982    0.106176        1.4720
bStop1        0.209677    0.108281      1.9364    0.111520        1.8802
bStop2       -0.199816    0.092974     -2.1492    0.092712       -2.1552
bSafety1      0.366447    0.100623      3.6418    0.096052        3.8151
bSafety2      0.168907    0.115465      1.4628    0.097478        1.7328


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.009823  3.9671e-04   2.135e-07 -5.7930e-04  4.2654e-04    0.001421
asc_others  3.9671e-04    0.051042   6.585e-05  9.5088e-04    0.002315    0.004548
bTInc        2.135e-07   6.585e-05   1.942e-07   1.191e-06  -4.805e-07  -4.708e-06
bCost      -5.7930e-04  9.5088e-04   1.191e-06   8.904e-05   2.937e-05   2.081e-05
bCro        4.2654e-04    0.002315  -4.805e-07   2.937e-05    0.005539 -4.9537e-04
bWaitEnv1     0.001421    0.004548  -4.708e-06   2.081e-05 -4.9537e-04    0.009733
bWaitEnv2   2.5337e-04    0.003376  -3.950e-06 -2.4972e-04 -8.9275e-04    0.003296
bStop1      -7.589e-05    0.006646  -2.504e-06   9.371e-05 -9.4596e-04    0.001358
bStop2       -0.001136    0.005698  -1.367e-06   2.992e-05   -0.001268    0.001012
bSafety1      0.001208    0.008221   8.260e-07  -9.005e-07  2.7133e-04  4.2181e-04
bSafety2     -0.002489    0.011146   1.854e-06  2.5922e-04 -4.0107e-04    0.001621
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   2.5337e-04  -7.589e-05   -0.001136    0.001208   -0.002489
asc_others    0.003376    0.006646    0.005698    0.008221    0.011146
bTInc       -3.950e-06  -2.504e-06  -1.367e-06   8.260e-07   1.854e-06
bCost      -2.4972e-04   9.371e-05   2.992e-05  -9.005e-07  2.5922e-04
bCro       -8.9275e-04 -9.4596e-04   -0.001268  2.7133e-04 -4.0107e-04
bWaitEnv1     0.003296    0.001358    0.001012  4.2181e-04    0.001621
bWaitEnv2     0.009563 -1.3781e-04    0.001294    0.003340    0.003148
bStop1     -1.3781e-04    0.011725    0.006351 -7.2634e-04    0.001762
bStop2        0.001294    0.006351    0.008644  1.5274e-04    0.002442
bSafety1      0.003340 -7.2634e-04  1.5274e-04    0.010125    0.006157
bSafety2      0.003148    0.001762    0.002442    0.006157    0.013332

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.013040    0.002005  -5.441e-06 -6.8749e-04    0.001318    0.002685
asc_others    0.002005    0.059773   9.633e-05    0.001176    0.002975    0.003143
bTInc       -5.441e-06   9.633e-05   3.595e-07   2.538e-06   4.015e-06  -4.245e-06
bCost      -6.8749e-04    0.001176   2.538e-06   9.827e-05   4.327e-05 -1.0562e-04
bCro          0.001318    0.002975   4.015e-06   4.327e-05    0.004924 -9.2892e-04
bWaitEnv1     0.002685    0.003143  -4.245e-06 -1.0562e-04 -9.2892e-04    0.009492
bWaitEnv2     0.003247    0.002308  -1.022e-05 -4.0954e-04 -8.0578e-04    0.004763
bStop1      8.5041e-04    0.006520  -5.298e-06   4.488e-05   -0.001707    0.001580
bStop2       -0.001404    0.005608  -1.176e-06  -8.919e-07   -0.001344    0.001214
bSafety1      0.004066    0.005551  -9.159e-06 -1.1629e-04 -1.1813e-04  6.1231e-04
bSafety2     -0.002172    0.009293  -4.389e-07  2.5223e-04   -0.001461  7.3932e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.003247  8.5041e-04   -0.001404    0.004066   -0.002172
asc_others    0.002308    0.006520    0.005608    0.005551    0.009293
bTInc       -1.022e-05  -5.298e-06  -1.176e-06  -9.159e-06  -4.389e-07
bCost      -4.0954e-04   4.488e-05  -8.919e-07 -1.1629e-04  2.5223e-04
bCro       -8.0578e-04   -0.001707   -0.001344 -1.1813e-04   -0.001461
bWaitEnv1     0.004763    0.001580    0.001214  6.1231e-04  7.3932e-04
bWaitEnv2     0.011273 -2.7822e-04  2.1132e-04    0.003664    0.002767
bStop1     -2.7822e-04    0.012437    0.006875 -7.1434e-04    0.003834
bStop2      2.1132e-04    0.006875    0.008596 -7.1262e-04    0.003573
bSafety1      0.003664 -7.1434e-04 -7.1262e-04    0.009226    0.003249
bSafety2      0.002767    0.003834    0.003573    0.003249    0.009502

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000     0.01772    0.004887    -0.61944     0.05783     0.14531
asc_others    0.017717     1.00000    0.661458     0.44603     0.13767     0.20405
bTInc         0.004887     0.66146    1.000000     0.28633    -0.01465    -0.10830
bCost        -0.619439     0.44603    0.286331     1.00000     0.04182     0.02236
bCro          0.057829     0.13767   -0.014653     0.04182     1.00000    -0.06747
bWaitEnv1     0.145307     0.20405   -0.108296     0.02236    -0.06747     1.00000
bWaitEnv2     0.026142     0.15280   -0.091654    -0.27062    -0.12266     0.34160
bStop1       -0.007071     0.27168   -0.052486     0.09171    -0.11739     0.12712
bStop2       -0.123331     0.27129   -0.033377     0.03410    -0.18321     0.11035
bSafety1      0.121112     0.36165    0.018629 -9.4846e-04     0.03623     0.04249
bSafety2     -0.217466     0.42727    0.036439     0.23792    -0.04667     0.14234
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.02614   -0.007071    -0.12333     0.12111    -0.21747
asc_others     0.15280    0.271676     0.27129     0.36165     0.42727
bTInc         -0.09165   -0.052486    -0.03338     0.01863     0.03644
bCost         -0.27062    0.091711     0.03410 -9.4846e-04     0.23792
bCro          -0.12266   -0.117386    -0.18321     0.03623    -0.04667
bWaitEnv1      0.34160    0.127123     0.11035     0.04249     0.14234
bWaitEnv2      1.00000   -0.013014     0.14231     0.33944     0.27876
bStop1        -0.01301    1.000000     0.63090    -0.06666     0.14094
bStop2         0.14231    0.630901     1.00000     0.01633     0.22745
bSafety1       0.33944   -0.066664     0.01633     1.00000     0.52997
bSafety2       0.27876    0.140940     0.22745     0.52997     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.07181   -0.079458    -0.60732     0.16448     0.24132
asc_others     0.07181     1.00000    0.657109     0.48516     0.17339     0.13195
bTInc         -0.07946     0.65711    1.000000     0.42706     0.09543    -0.07266
bCost         -0.60732     0.48516    0.427060     1.00000     0.06221    -0.10936
bCro           0.16448     0.17339    0.095431     0.06221     1.00000    -0.13588
bWaitEnv1      0.24132     0.13195   -0.072665    -0.10936    -0.13588     1.00000
bWaitEnv2      0.26780     0.08891   -0.160482    -0.38911    -0.10815     0.46041
bStop1         0.06678     0.23915   -0.079231     0.04060    -0.21817     0.14545
bStop2        -0.13266     0.24742   -0.021146 -9.7044e-04    -0.20653     0.13443
bSafety1       0.37067     0.23638   -0.159026    -0.12214    -0.01753     0.06543
bSafety2      -0.19509     0.38993   -0.007510     0.26103    -0.21352     0.07785
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.26780     0.06678    -0.13266     0.37067   -0.195086
asc_others     0.08891     0.23915     0.24742     0.23638    0.389933
bTInc         -0.16048    -0.07923    -0.02115    -0.15903   -0.007510
bCost         -0.38911     0.04060 -9.7044e-04    -0.12214    0.261028
bCro          -0.10815    -0.21817    -0.20653    -0.01753   -0.213524
bWaitEnv1      0.46041     0.14545     0.13443     0.06543    0.077849
bWaitEnv2      1.00000    -0.02350     0.02147     0.35930    0.267344
bStop1        -0.02350     1.00000     0.66494    -0.06669    0.352650
bStop2         0.02147     0.66494     1.00000    -0.08002    0.395381
bSafety1       0.35930    -0.06669    -0.08002     1.00000    0.346972
bSafety2       0.26734     0.35265     0.39538     0.34697    1.000000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 769          0.04597018
 227          0.04867498
 288          0.10589359
 469          0.13654266
 136          0.13725160
 341          0.13914428
 717          0.14004536
 537          0.14155447
 780          0.14345572
 657          0.15653749
 468          0.16130221
  46          0.17032501
 787          0.17543769
 460          0.18027706
 197          0.18394186
 581          0.18567965
 988          0.18671819
 134          0.18700517
 486          0.19168566
 986          0.19270785

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.272406    0.272406
asc_others       0.000   -1.357021   -1.357021
bTInc            0.000   -0.005420   -0.005420
bCost            0.000    0.028522    0.028522
bCro             0.000    0.632143    0.632143
bWaitEnv1        0.000    0.038827    0.038827
bWaitEnv2        0.000    0.156293    0.156293
bStop1           0.000    0.209677    0.209677
bStop2           0.000   -0.199816   -0.199816
bSafety1         0.000    0.366447    0.366447
bSafety2         0.000    0.168907    0.168907

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.272406195
asc_others 1.357021073
bTInc      0.005419549
bCost      0.028521592
bCro       0.632142567
bWaitEnv1  0.038826883
bWaitEnv2  0.156293281
bStop1     0.209677142
bStop2     0.199815974
bSafety1   0.366446820
bSafety2   0.168906723


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
