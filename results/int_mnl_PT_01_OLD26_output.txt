Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:27:45.338577
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -19.112039
     reciprocal of condition number         : 1.04146e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1216.14
Rho-squared vs equal shares                  :  0.2454 
Adj.Rho-squared vs equal shares              :  0.2386 
Rho-squared vs observed shares               :  0.1358 
Adj.Rho-squared vs observed shares           :  0.1294 
AIC                                         :  2454.27 
BIC                                         :  2512.48 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.77 
     pre-estimation                         :  00:00:0.39 
     estimation                             :  00:00:0.09 
     post-estimation                        :  00:00:0.29 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.417053    0.090182      4.6246    0.102282        4.0775
asc_others   -1.822611    0.208106     -8.7581    0.224558       -8.1164
bTInc        -0.006352  4.4446e-04    -14.2907  5.8068e-04      -10.9383
bCost         0.001320    0.003965      0.3329    0.004254        0.3103
bCro          0.638421    0.074210      8.6029    0.070099        9.1074
bWaitEnv1     0.059095    0.099056      0.5966    0.098557        0.5996
bWaitEnv2     0.222776    0.094571      2.3556    0.099587        2.2370
bStop1        0.196763    0.108950      1.8060    0.112467        1.7495
bStop2       -0.210353    0.092777     -2.2673    0.093229       -2.2563
bSafety1      0.354196    0.100109      3.5381    0.095291        3.7170
bSafety2      0.093966    0.112713      0.8337    0.093294        1.0072


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.008133    0.005871   6.941e-06 -1.8001e-04  6.0544e-04    0.001578
asc_others    0.005871    0.043308   5.988e-05   8.429e-05    0.002011    0.004320
bTInc        6.941e-06   5.988e-05   1.975e-07   1.474e-07  -1.013e-06  -5.399e-06
bCost      -1.8001e-04   8.429e-05   1.474e-07   1.572e-05   2.415e-06   3.455e-06
bCro        6.0544e-04    0.002011  -1.013e-06   2.415e-06    0.005507 -4.1773e-04
bWaitEnv1     0.001578    0.004320  -5.399e-06   3.455e-06 -4.1773e-04    0.009812
bWaitEnv2  -7.8087e-04    0.005746  -5.451e-07  -5.082e-05 -8.1176e-04    0.003269
bStop1      4.6384e-04    0.005847  -3.823e-06   1.016e-05 -9.1337e-04    0.001610
bStop2     -9.7891e-04    0.005389  -1.698e-06   4.145e-06   -0.001229    0.001094
bSafety1      0.001209    0.008192   1.643e-06  -1.754e-06  3.0096e-04  2.9977e-04
bSafety2     -0.001465    0.008507  -9.451e-07   5.781e-05 -5.2091e-04    0.001384
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -7.8087e-04  4.6384e-04 -9.7891e-04    0.001209   -0.001465
asc_others    0.005746    0.005847    0.005389    0.008192    0.008507
bTInc       -5.451e-07  -3.823e-06  -1.698e-06   1.643e-06  -9.451e-07
bCost       -5.082e-05   1.016e-05   4.145e-06  -1.754e-06   5.781e-05
bCro       -8.1176e-04 -9.1337e-04   -0.001229  3.0096e-04 -5.2091e-04
bWaitEnv1     0.003269    0.001610    0.001094  2.9977e-04    0.001384
bWaitEnv2     0.008944   4.689e-05    0.001333    0.003284    0.003588
bStop1       4.689e-05    0.011870    0.006414 -8.6160e-04    0.001518
bStop2        0.001333    0.006414    0.008608  -1.154e-05    0.002318
bSafety1      0.003284 -8.6160e-04  -1.154e-05    0.010022    0.006037
bSafety2      0.003588    0.001518    0.002318    0.006037    0.012704

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.010462    0.007752   4.934e-06 -2.0321e-04    0.001115    0.002503
asc_others    0.007752    0.050427   8.040e-05  2.3008e-04    0.002418    0.005011
bTInc        4.934e-06   8.040e-05   3.372e-07   6.126e-07   2.268e-06  -1.802e-06
bCost      -2.0321e-04  2.3008e-04   6.126e-07   1.809e-05   4.586e-05  -2.002e-05
bCro          0.001115    0.002418   2.268e-06   4.586e-05    0.004914 -7.1016e-04
bWaitEnv1     0.002503    0.005011  -1.802e-06  -2.002e-05 -7.1016e-04    0.009713
bWaitEnv2     0.001317    0.006178  -1.767e-06  -7.665e-05 -8.1256e-04    0.004503
bStop1        0.001666    0.006308  -6.277e-06  -5.736e-05   -0.001613    0.001986
bStop2       -0.001239    0.006173   8.132e-07  -1.466e-05   -0.001329    0.001288
bSafety1      0.004222    0.006365  -5.960e-06  -6.676e-05   2.687e-05  4.4024e-04
bSafety2   -8.6014e-04    0.007007  -4.163e-06   3.856e-05   -0.001345  5.4071e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001317    0.001666   -0.001239    0.004222 -8.6014e-04
asc_others    0.006178    0.006308    0.006173    0.006365    0.007007
bTInc       -1.767e-06  -6.277e-06   8.132e-07  -5.960e-06  -4.163e-06
bCost       -7.665e-05  -5.736e-05  -1.466e-05  -6.676e-05   3.856e-05
bCro       -8.1256e-04   -0.001613   -0.001329   2.687e-05   -0.001345
bWaitEnv1     0.004503    0.001986    0.001288  4.4024e-04  5.4071e-04
bWaitEnv2     0.009918   7.660e-05  3.2801e-04    0.003278    0.003466
bStop1       7.660e-05    0.012649    0.007179 -9.5402e-04    0.003367
bStop2      3.2801e-04    0.007179    0.008692   -0.001065    0.003427
bSafety1      0.003278 -9.5402e-04   -0.001065    0.009080    0.003052
bSafety2      0.003466    0.003367    0.003427    0.003052    0.008704

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.3128     0.17317   -0.503430    0.090467    0.176601
asc_others     0.31281      1.0000     0.64735    0.102158    0.130192    0.209583
bTInc          0.17317      0.6474     1.00000    0.083633   -0.030698   -0.122623
bCost         -0.50343      0.1022     0.08363    1.000000    0.008207    0.008798
bCro           0.09047      0.1302    -0.03070    0.008207    1.000000   -0.056826
bWaitEnv1      0.17660      0.2096    -0.12262    0.008798   -0.056826    1.000000
bWaitEnv2     -0.09156      0.2920    -0.01297   -0.135541   -0.115666    0.348920
bStop1         0.04721      0.2579    -0.07896    0.023524   -0.112969    0.149194
bStop2        -0.11700      0.2791    -0.04119    0.011269   -0.178540    0.119053
bSafety1       0.13388      0.3932     0.03692   -0.004419    0.040511    0.030229
bSafety2      -0.14416      0.3627    -0.01887    0.129357   -0.062277    0.123971
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.091559    0.047208   -0.116999    0.133881    -0.14416
asc_others    0.291977    0.257860    0.279135    0.393210     0.36266
bTInc        -0.012969   -0.078955   -0.041189    0.036923    -0.01887
bCost        -0.135541    0.023524    0.011269   -0.004419     0.12936
bCro         -0.115666   -0.112969   -0.178540    0.040511    -0.06228
bWaitEnv1     0.348920    0.149194    0.119053    0.030229     0.12397
bWaitEnv2     1.000000    0.004551    0.151927    0.346825     0.33657
bStop1        0.004551    1.000000    0.634497   -0.078996     0.12361
bStop2        0.151927    0.634497    1.000000   -0.001242     0.22169
bSafety1      0.346825   -0.078996   -0.001242    1.000000     0.53504
bSafety2      0.336567    0.123607    0.221685    0.535041     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.3375     0.08308    -0.46704    0.155541     0.24834
asc_others     0.33749      1.0000     0.61660     0.24087    0.153611     0.22643
bTInc          0.08308      0.6166     1.00000     0.24801    0.055723    -0.03149
bCost         -0.46704      0.2409     0.24801     1.00000    0.153780    -0.04775
bCro           0.15554      0.1536     0.05572     0.15378    1.000000    -0.10279
bWaitEnv1      0.24834      0.2264    -0.03149    -0.04775   -0.102791     1.00000
bWaitEnv2      0.12934      0.2763    -0.03056    -0.18094   -0.116396     0.45876
bStop1         0.14481      0.2498    -0.09612    -0.11990   -0.204584     0.17916
bStop2        -0.12992      0.2949     0.01502    -0.03697   -0.203290     0.14020
bSafety1       0.43313      0.2975    -0.10771    -0.16471    0.004022     0.04688
bSafety2      -0.09014      0.3345    -0.07685     0.09718   -0.205611     0.05881
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.129340    0.144807    -0.12992    0.433134    -0.09014
asc_others    0.276278    0.249751     0.29486    0.297459     0.33449
bTInc        -0.030563   -0.096122     0.01502   -0.107711    -0.07685
bCost        -0.180936   -0.119900    -0.03697   -0.164707     0.09718
bCro         -0.116396   -0.204584    -0.20329    0.004022    -0.20561
bWaitEnv1     0.458762    0.179158     0.14020    0.046876     0.05881
bWaitEnv2     1.000000    0.006839     0.03533    0.345433     0.37302
bStop1        0.006839    1.000000     0.68467   -0.089019     0.32091
bStop2        0.035329    0.684674     1.00000   -0.119852     0.39397
bSafety1      0.345433   -0.089019    -0.11985    1.000000     0.34326
bSafety2      0.373023    0.320905     0.39397    0.343258     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 227          0.04350269
 769          0.04771955
 288          0.09455752
 717          0.10486307
 136          0.10954004
 341          0.12560743
 780          0.13700002
 437          0.13971513
 657          0.14725384
 986          0.15098124
 134          0.15485033
 460          0.15539445
 170          0.15657206
 537          0.15871126
 200          0.16946715
 469          0.16968848
 468          0.17534794
 122          0.17826059
 351          0.17936067
 787          0.18159981

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.417053    0.417053
asc_others       0.000   -1.822611   -1.822611
bTInc            0.000   -0.006352   -0.006352
bCost            0.000    0.001320    0.001320
bCro             0.000    0.638421    0.638421
bWaitEnv1        0.000    0.059095    0.059095
bWaitEnv2        0.000    0.222776    0.222776
bStop1           0.000    0.196763    0.196763
bStop2           0.000   -0.210353   -0.210353
bSafety1         0.000    0.354196    0.354196
bSafety2         0.000    0.093966    0.093966

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.417053261
asc_others 1.822611011
bTInc      0.006351627
bCost      0.001319892
bCro       0.638421398
bWaitEnv1  0.059095148
bWaitEnv2  0.222775539
bStop1     0.196763169
bStop2     0.210353446
bSafety1   0.354196468
bSafety2   0.093965652


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
