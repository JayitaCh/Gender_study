Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:24:27.214239
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -18.11593
     reciprocal of condition number         : 9.96255e-07
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1226.63
Rho-squared vs equal shares                  :  0.2389 
Adj.Rho-squared vs equal shares              :  0.2321 
Rho-squared vs observed shares               :  0.1283 
Adj.Rho-squared vs observed shares           :  0.1219 
AIC                                         :  2475.26 
BIC                                         :  2533.46 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:1.02 
     pre-estimation                         :  00:00:0.59 
     estimation                             :  00:00:0.09 
     post-estimation                        :  00:00:0.34 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.080528    0.130195      0.6185    0.166036        0.4850
asc_others   -1.329783    0.216296     -6.1480    0.215019       -6.1845
bTInc        -0.005907  4.4657e-04    -13.2272  5.8062e-04      -10.1736
bCost         0.021338    0.005841      3.6534    0.007234        2.9496
bCro          0.668315    0.074907      8.9220    0.068505        9.7556
bWaitEnv1     0.060494    0.099053      0.6107    0.095637        0.6325
bWaitEnv2     0.154109    0.096311      1.6001    0.099692        1.5459
bStop1        0.086140    0.086244      0.9988    0.091495        0.9415
bStop2       -0.250631    0.075733     -3.3094    0.077218       -3.2458
bSafety1      0.394217    0.100033      3.9409    0.094767        4.1599
bSafety2      0.210400    0.117380      1.7925    0.105672        1.9911


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.016951   -0.004002   1.428e-05 -6.0852e-04 -1.1036e-04  4.5264e-04
asc_others   -0.004002    0.046784   4.285e-05  5.6809e-04    0.002962    0.005194
bTInc        1.428e-05   4.285e-05   1.994e-07  -3.305e-07  -6.066e-07  -6.507e-06
bCost      -6.0852e-04  5.6809e-04  -3.305e-07   3.411e-05   4.297e-05   6.063e-05
bCro       -1.1036e-04    0.002962  -6.066e-07   4.297e-05    0.005611 -3.3738e-04
bWaitEnv1   4.5264e-04    0.005194  -6.507e-06   6.063e-05 -3.3738e-04    0.009812
bWaitEnv2   8.4905e-04    0.003882   1.610e-07 -1.2286e-04 -9.1623e-04    0.003118
bStop1     -4.5043e-04    0.003006  -1.116e-05   1.760e-05 -7.3967e-04  9.3228e-04
bStop2     -8.8784e-04    0.002753  -6.883e-06  -1.614e-05 -9.9837e-04  6.7851e-04
bSafety1    9.6314e-04    0.008650   1.192e-06   1.955e-05  3.1176e-04  5.2105e-04
bSafety2     -0.004429    0.011220  -5.428e-06  1.9990e-04 -1.5772e-04    0.001922
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   8.4905e-04 -4.5043e-04 -8.8784e-04  9.6314e-04   -0.004429
asc_others    0.003882    0.003006    0.002753    0.008650    0.011220
bTInc        1.610e-07  -1.116e-05  -6.883e-06   1.192e-06  -5.428e-06
bCost      -1.2286e-04   1.760e-05  -1.614e-05   1.955e-05  1.9990e-04
bCro       -9.1623e-04 -7.3967e-04 -9.9837e-04  3.1176e-04 -1.5772e-04
bWaitEnv1     0.003118  9.3228e-04  6.7851e-04  5.2105e-04    0.001922
bWaitEnv2     0.009276  -1.104e-06    0.001053    0.003161    0.003006
bStop1      -1.104e-06    0.007438    0.004020 -4.3130e-04    0.001405
bStop2        0.001053    0.004020    0.005735   1.434e-05    0.001621
bSafety1      0.003161 -4.3130e-04   1.434e-05    0.010007    0.006185
bSafety2      0.003006    0.001405    0.001621    0.006185    0.013778

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.027568   -0.003016   2.015e-05 -9.9904e-04    0.001900    0.001001
asc_others   -0.003016    0.046233   5.495e-05  6.5719e-04    0.002403    0.004641
bTInc        2.015e-05   5.495e-05   3.371e-07  -3.632e-07   4.454e-06  -3.209e-06
bCost      -9.9904e-04  6.5719e-04  -3.632e-07   5.234e-05  -2.187e-05   5.893e-05
bCro          0.001900    0.002403   4.454e-06  -2.187e-05    0.004693 -7.1743e-04
bWaitEnv1     0.001001    0.004641  -3.209e-06   5.893e-05 -7.1743e-04    0.009146
bWaitEnv2     0.003972    0.003632  -2.340e-06 -1.7839e-04 -3.8721e-04    0.004119
bStop1       -0.001053    0.003627  -1.583e-05   8.850e-05   -0.001389    0.001134
bStop2       -0.001816    0.002254  -7.334e-06   2.781e-07 -9.5575e-04  4.8508e-04
bSafety1      0.003513    0.006757  -6.323e-06   2.810e-06   3.365e-05  4.8891e-04
bSafety2     -0.007378    0.009135  -1.586e-05  3.5351e-04   -0.001538    0.001050
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.003972   -0.001053   -0.001816    0.003513   -0.007378
asc_others    0.003632    0.003627    0.002254    0.006757    0.009135
bTInc       -2.340e-06  -1.583e-05  -7.334e-06  -6.323e-06  -1.586e-05
bCost      -1.7839e-04   8.850e-05   2.781e-07   2.810e-06  3.5351e-04
bCro       -3.8721e-04   -0.001389 -9.5575e-04   3.365e-05   -0.001538
bWaitEnv1     0.004119    0.001134  4.8508e-04  4.8891e-04    0.001050
bWaitEnv2     0.009938 -7.7105e-04 -6.3919e-04    0.003026    0.002112
bStop1     -7.7105e-04    0.008371    0.004489 -5.2556e-04    0.003646
bStop2     -6.3919e-04    0.004489    0.005963   -0.001190    0.002694
bSafety1      0.003026 -5.2556e-04   -0.001190    0.008981    0.003225
bSafety2      0.002112    0.003646    0.002694    0.003225    0.011167

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     -0.1421    0.245586    -0.80025    -0.01132     0.03510
asc_others    -0.14212      1.0000    0.443567     0.44969     0.18284     0.24242
bTInc          0.24559      0.4436    1.000000    -0.12670    -0.01813    -0.14710
bCost         -0.80025      0.4497   -0.126704     1.00000     0.09822     0.10481
bCro          -0.01132      0.1828   -0.018133     0.09822     1.00000    -0.04547
bWaitEnv1      0.03510      0.2424   -0.147099     0.10481    -0.04547     1.00000
bWaitEnv2      0.06771      0.1863    0.003744    -0.21842    -0.12700     0.32685
bStop1        -0.04011      0.1612   -0.289837     0.03494    -0.11450     0.10913
bStop2        -0.09004      0.1681   -0.203523    -0.03650    -0.17599     0.09045
bSafety1       0.07395      0.3998    0.026684     0.03347     0.04161     0.05259
bSafety2      -0.28983      0.4419   -0.103559     0.29158    -0.01794     0.16528
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.067712    -0.04011   -0.090044    0.073952    -0.28983
asc_others    0.186343     0.16117    0.168073    0.399768     0.44191
bTInc         0.003744    -0.28984   -0.203523    0.026684    -0.10356
bCost        -0.218416     0.03494   -0.036499    0.033469     0.29158
bCro         -0.127001    -0.11450   -0.175989    0.041606    -0.01794
bWaitEnv1     0.326846     0.10913    0.090449    0.052585     0.16528
bWaitEnv2     1.000000 -1.3288e-04    0.144350    0.328081     0.26593
bStop1     -1.3288e-04     1.00000    0.615443   -0.049993     0.13883
bStop2        0.144350     0.61544    1.000000    0.001893     0.18231
bSafety1      0.328081    -0.04999    0.001893    1.000000     0.52673
bSafety2      0.265927     0.13883    0.182306    0.526728     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000    -0.08447     0.20904   -0.831731    0.167058     0.06305
asc_others    -0.08447     1.00000     0.44016    0.422487    0.163169     0.22568
bTInc          0.20904     0.44016     1.00000   -0.086465    0.111972    -0.05780
bCost         -0.83173     0.42249    -0.08646    1.000000   -0.044131     0.08518
bCro           0.16706     0.16317     0.11197   -0.044131    1.000000    -0.10950
bWaitEnv1      0.06305     0.22568    -0.05780    0.085177   -0.109504     1.00000
bWaitEnv2      0.23998     0.16944    -0.04042   -0.247356   -0.056697     0.43203
bStop1        -0.06931     0.18438    -0.29797    0.133707   -0.221533     0.12958
bStop2        -0.14165     0.13578    -0.16358  4.9780e-04   -0.180676     0.06569
bSafety1       0.22328     0.33161    -0.11492    0.004099    0.005184     0.05394
bSafety2      -0.42051     0.40204    -0.25844    0.462430   -0.212475     0.10391
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.23998    -0.06931    -0.14165    0.223276     -0.4205
asc_others     0.16944     0.18438     0.13578    0.331615      0.4020
bTInc         -0.04042    -0.29797    -0.16358   -0.114919     -0.2584
bCost         -0.24736     0.13371  4.9780e-04    0.004099      0.4624
bCro          -0.05670    -0.22153    -0.18068    0.005184     -0.2125
bWaitEnv1      0.43203     0.12958     0.06569    0.053944      0.1039
bWaitEnv2      1.00000    -0.08453    -0.08303    0.320268      0.2005
bStop1        -0.08453     1.00000     0.63536   -0.060613      0.3771
bStop2        -0.08303     0.63536     1.00000   -0.162683      0.3301
bSafety1       0.32027    -0.06061    -0.16268    1.000000      0.3221
bSafety2       0.20050     0.37710     0.33013    0.322063      1.0000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 769          0.04450886
 227          0.05332519
 437          0.10981480
 288          0.12100572
 717          0.12833147
 460          0.12937527
 136          0.13019050
 341          0.13146404
 986          0.13300475
 559          0.13823241
 537          0.14614611
 468          0.15201294
 878          0.15459001
 221          0.15683933
  83          0.16408136
 787          0.16987567
 780          0.16991385
 486          0.17212584
 159          0.17484777
 469          0.17603799

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.080528    0.080528
asc_others       0.000   -1.329783   -1.329783
bTInc            0.000   -0.005907   -0.005907
bCost            0.000    0.021338    0.021338
bCro             0.000    0.668315    0.668315
bWaitEnv1        0.000    0.060494    0.060494
bWaitEnv2        0.000    0.154109    0.154109
bStop1           0.000    0.086140    0.086140
bStop2           0.000   -0.250631   -0.250631
bSafety1         0.000    0.394217    0.394217
bSafety2         0.000    0.210400    0.210400

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.080528453
asc_others 1.329783236
bTInc      0.005906928
bCost      0.021338155
bCro       0.668314649
bWaitEnv1  0.060494357
bWaitEnv2  0.154109314
bStop1     0.086140482
bStop2     0.250631281
bSafety1   0.394216597
bSafety2   0.210400210


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(relInc**0.5)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*relInc*(saccstop_bus==1) + bStop2*relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*relInc*(saccstop_metro ==1) + bStop2*relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
