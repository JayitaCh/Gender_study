Model run by geojch using Apollo 0.3.5 on R 4.4.2 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_31Mar2025
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-04-19 11:26:43.262563
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -14.288685
     reciprocal of condition number         : 1.94829e-05
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1193.79
Rho-squared vs equal shares                  :  0.2912 
Adj.Rho-squared vs equal shares              :  0.2846 
Rho-squared vs observed shares               :  0.0503 
Adj.Rho-squared vs observed shares           :  0.0432 
AIC                                         :  2409.58 
BIC                                         :  2468.27 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.99 
     pre-estimation                         :  00:00:0.34 
     estimation                             :  00:00:0.32 
     post-estimation                        :  00:00:0.33 
Iterations                                  :  11  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.32365    0.099689       3.247    0.096078         3.369
asc_others    -2.70385    0.255071     -10.600    0.291545        -9.274
bTInc         -0.01565    0.002384      -6.566    0.002432        -6.437
bCost         -0.05346    0.014983      -3.568    0.013112        -4.077
bCro           0.15850    0.060999       2.598    0.065152         2.433
bWaitEnv1      0.21606    0.090094       2.398    0.094814         2.279
bWaitEnv2      0.39471    0.089285       4.421    0.096504         4.090
bStop1         0.51077    0.101451       5.035    0.101003         5.057
bStop2         0.31491    0.087572       3.596    0.091428         3.444
bSafety1       0.41228    0.090647       4.548    0.089534         4.605
bSafety2       0.35140    0.103835       3.384    0.093788         3.747


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro     0.009938    0.010803  1.2257e-04 -8.6996e-04 -9.5996e-04
asc_others    0.010803    0.065061  4.3497e-04  1.7322e-04   -0.002332
bTInc       1.2257e-04  4.3497e-04   5.684e-06  -3.197e-06  -4.089e-05
bCost      -8.6996e-04  1.7322e-04  -3.197e-06  2.2449e-04   4.316e-05
bCro       -9.5996e-04   -0.002332  -4.089e-05   4.316e-05    0.003721
bWaitEnv1   3.5434e-04    0.002060  -4.279e-05   9.244e-05 -6.0464e-04
bWaitEnv2  -4.0106e-04    0.005679   5.217e-06 -2.0636e-04 -4.7984e-04
bStop1     -4.2783e-04    0.003438  -4.042e-05   8.693e-05 -7.9308e-04
bStop2       -0.001175    0.003557  -3.263e-05   7.530e-05 -6.3911e-04
bSafety1      0.001430    0.007416   1.471e-05  -5.288e-05  -1.749e-05
bSafety2     -0.002095    0.005946  -2.778e-05  2.6085e-04 -3.1293e-04
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro   3.5434e-04 -4.0106e-04 -4.2783e-04   -0.001175    0.001430
asc_others    0.002060    0.005679    0.003438    0.003557    0.007416
bTInc       -4.279e-05   5.217e-06  -4.042e-05  -3.263e-05   1.471e-05
bCost        9.244e-05 -2.0636e-04   8.693e-05   7.530e-05  -5.288e-05
bCro       -6.0464e-04 -4.7984e-04 -7.9308e-04 -6.3911e-04  -1.749e-05
bWaitEnv1     0.008117    0.002981    0.002023    0.001271  4.0295e-04
bWaitEnv2     0.002981    0.007972  3.4564e-04    0.001422    0.002704
bStop1        0.002023  3.4564e-04    0.010292    0.006118 -6.8134e-04
bStop2        0.001271    0.001422    0.006118    0.007669   2.103e-05
bSafety1    4.0295e-04    0.002704 -6.8134e-04   2.103e-05    0.008217
bSafety2      0.001748    0.003202    0.001884    0.002297    0.004911
              bSafety2
asc_metro    -0.002095
asc_others    0.005946
bTInc       -2.778e-05
bCost       2.6085e-04
bCro       -3.1293e-04
bWaitEnv1     0.001748
bWaitEnv2     0.003202
bStop1        0.001884
bStop2        0.002297
bSafety1      0.004911
bSafety2      0.010782

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro     0.009231    0.013745   9.627e-05 -5.7504e-04 -7.8595e-04
asc_others    0.013745    0.084999  5.1074e-04  6.7744e-04   -0.007585
bTInc        9.627e-05  5.1074e-04   5.915e-06   4.590e-06  -5.049e-05
bCost      -5.7504e-04  6.7744e-04   4.590e-06  1.7192e-04  -2.451e-05
bCro       -7.8595e-04   -0.007585  -5.049e-05  -2.451e-05    0.004245
bWaitEnv1     0.001961    0.006946  -2.800e-05  -3.017e-06   -0.001112
bWaitEnv2     0.001290    0.010166   2.262e-05 -1.9827e-04   -0.001477
bStop1        0.001683    0.005759  -3.670e-05 -2.6015e-04   -0.001422
bStop2      6.0807e-04    0.009097  -1.137e-05 -1.0293e-04   -0.002052
bSafety1      0.003371    0.010258   2.565e-05 -1.5377e-04   -0.001336
bSafety2   -3.2636e-04    0.006836  -3.653e-06   2.477e-05   -0.001910
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro     0.001961    0.001290    0.001683  6.0807e-04    0.003371
asc_others    0.006946    0.010166    0.005759    0.009097    0.010258
bTInc       -2.800e-05   2.262e-05  -3.670e-05  -1.137e-05   2.565e-05
bCost       -3.017e-06 -1.9827e-04 -2.6015e-04 -1.0293e-04 -1.5377e-04
bCro         -0.001112   -0.001477   -0.001422   -0.002052   -0.001336
bWaitEnv1     0.008990    0.004724    0.002777    0.002364    0.002188
bWaitEnv2     0.004724    0.009313    0.001624    0.002716    0.003535
bStop1        0.002777    0.001624    0.010202    0.006912  3.8697e-04
bStop2        0.002364    0.002716    0.006912    0.008359    0.001366
bSafety1      0.002188    0.003535  3.8697e-04    0.001366    0.008016
bSafety2      0.002848    0.004942    0.002295    0.003182    0.003776
              bSafety2
asc_metro  -3.2636e-04
asc_others    0.006836
bTInc       -3.653e-06
bCost        2.477e-05
bCro         -0.001910
bWaitEnv1     0.002848
bWaitEnv2     0.004942
bStop1        0.002295
bStop2        0.003182
bSafety1      0.003776
bSafety2      0.008796

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro      1.00000     0.42485     0.51571    -0.58244   -0.157862
asc_others     0.42485     1.00000     0.71528     0.04533   -0.149904
bTInc          0.51571     0.71528     1.00000    -0.08950   -0.281203
bCost         -0.58244     0.04533    -0.08950     1.00000    0.047219
bCro          -0.15786    -0.14990    -0.28120     0.04722    1.000000
bWaitEnv1      0.03945     0.08965    -0.19924     0.06848   -0.110022
bWaitEnv2     -0.04506     0.24938     0.02451    -0.15426   -0.088103
bStop1        -0.04230     0.13284    -0.16711     0.05719   -0.128155
bStop2        -0.13454     0.15923    -0.15627     0.05739   -0.119642
bSafety1       0.15828     0.32074     0.06807    -0.03893   -0.003164
bSafety2      -0.20239     0.22452    -0.11222     0.16767   -0.049406
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro      0.03945    -0.04506    -0.04230   -0.134542    0.158279
asc_others     0.08965     0.24938     0.13284    0.159231    0.320736
bTInc         -0.19924     0.02451    -0.16711   -0.156271    0.068070
bCost          0.06848    -0.15426     0.05719    0.057392   -0.038933
bCro          -0.11002    -0.08810    -0.12815   -0.119642   -0.003164
bWaitEnv1      1.00000     0.37064     0.22133    0.161146    0.049340
bWaitEnv2      0.37064     1.00000     0.03816    0.181828    0.334100
bStop1         0.22133     0.03816     1.00000    0.688675   -0.074089
bStop2         0.16115     0.18183     0.68868    1.000000    0.002650
bSafety1       0.04934     0.33410    -0.07409    0.002650    1.000000
bSafety2       0.18685     0.34534     0.17881    0.252645    0.521736
              bSafety2
asc_metro     -0.20239
asc_others     0.22452
bTInc         -0.11222
bCost          0.16767
bCro          -0.04941
bWaitEnv1      0.18685
bWaitEnv2      0.34534
bStop1         0.17881
bStop2         0.25264
bSafety1       0.52174
bSafety2       1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro      1.00000      0.4907     0.41202   -0.456470    -0.12556
asc_others     0.49070      1.0000     0.72031    0.177216    -0.39930
bTInc          0.41202      0.7203     1.00000    0.143942    -0.31865
bCost         -0.45647      0.1772     0.14394    1.000000    -0.02869
bCro          -0.12556     -0.3993    -0.31865   -0.028689     1.00000
bWaitEnv1      0.21527      0.2513    -0.12142   -0.002427    -0.18004
bWaitEnv2      0.13912      0.3613     0.09640   -0.156695    -0.23491
bStop1         0.17344      0.1956    -0.14939   -0.196442    -0.21611
bStop2         0.06922      0.3413    -0.05112   -0.085864    -0.34444
bSafety1       0.39186      0.3930     0.11779   -0.130984    -0.22900
bSafety2      -0.03622      0.2500    -0.01601    0.020144    -0.31261
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro     0.215266     0.13912     0.17344     0.06922     0.39186
asc_others    0.251270     0.36134     0.19559     0.34128     0.39298
bTInc        -0.121421     0.09640    -0.14939    -0.05112     0.11779
bCost        -0.002427    -0.15669    -0.19644    -0.08586    -0.13098
bCro         -0.180038    -0.23491    -0.21611    -0.34444    -0.22900
bWaitEnv1     1.000000     0.51623     0.28995     0.27274     0.25774
bWaitEnv2     0.516233     1.00000     0.16665     0.30780     0.40917
bStop1        0.289951     0.16665     1.00000     0.74855     0.04279
bStop2        0.272743     0.30780     0.74855     1.00000     0.16688
bSafety1      0.257738     0.40917     0.04279     0.16688     1.00000
bSafety2      0.320228     0.54604     0.24231     0.37109     0.44970
              bSafety2
asc_metro     -0.03622
asc_others     0.25000
bTInc         -0.01601
bCost          0.02014
bCro          -0.31261
bWaitEnv1      0.32023
bWaitEnv2      0.54604
bStop1         0.24231
bStop2         0.37109
bSafety1       0.44970
bSafety2       1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.02871687
 164          0.06427996
 256          0.11821463
 502          0.12423084
 322          0.12716923
  15          0.12798876
 868          0.13354278
 580          0.15635533
 177          0.15967011
 725          0.16577640
 979          0.16643533
 224          0.16838775
 620          0.16877683
 539          0.17053447
 920          0.17081587
 501          0.17109188
 886          0.17126012
 359          0.17168701
 449          0.17341223
 888          0.17500822

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.32365     0.32365
asc_others       0.000    -2.70385    -2.70385
bTInc            0.000    -0.01565    -0.01565
bCost            0.000    -0.05346    -0.05346
bCro             0.000     0.15850     0.15850
bWaitEnv1        0.000     0.21606     0.21606
bWaitEnv2        0.000     0.39471     0.39471
bStop1           0.000     0.51077     0.51077
bStop2           0.000     0.31491     0.31491
bSafety1         0.000     0.41228     0.41228
bSafety2         0.000     0.35140     0.35140

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_31Mar2025"                                                                                                                    
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.32365431
asc_others 2.70384782
bTInc      0.01565471
bCost      0.05345648
bCro       0.15849606
bWaitEnv1  0.21606073
bWaitEnv2  0.39470912
bStop1     0.51077040
bStop2     0.31490922
bSafety1   0.41227986
bSafety2   0.35140305


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*relInc*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*relInc*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ## Final formulation
  V = list(
    bus = asc_bus + bTInc*relInc*t_bus + bCost*(0.1/relInc)*tc_bus+bCro*(relInc**2)*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*relInc*t_metro + bCost*(0.1/relInc)*tc_metro+ bCro*(relInc**2)*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+
  #     mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
