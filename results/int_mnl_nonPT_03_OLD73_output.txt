Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_nonPT_03
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-14 18:35:39.998428
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -23.386946
     reciprocal of condition number         : 8.87709e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1233.85
Rho-squared vs equal shares                  :  0.2344 
Adj.Rho-squared vs equal shares              :  0.2276 
Rho-squared vs observed shares               :  0.1232 
Adj.Rho-squared vs observed shares           :  0.1168 
AIC                                         :  2489.69 
BIC                                         :  2547.89 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.91 
     pre-estimation                         :  00:00:0.47 
     estimation                             :  00:00:0.12 
     post-estimation                        :  00:00:0.32 
Iterations                                  :  11  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.85182     0.07546     11.2880    0.092551        9.2039
asc_others    -0.92421     0.18599     -4.9691    0.211962       -4.3603
bTInc         -0.01142  9.7015e-04    -11.7755    0.001413       -8.0846
bCost         -0.02647     0.01134     -2.3346    0.014059       -1.8828
bCro           0.60131     0.07453      8.0683    0.069890        8.6036
bWaitEnv1     -0.07794     0.05487     -1.4205    0.050551       -1.5418
bWaitEnv2      0.11804     0.05254      2.2465    0.057304        2.0599
bStop1         0.14955     0.10867      1.3763    0.112097        1.3341
bStop2        -0.27535     0.09264     -2.9721    0.096480       -2.8540
bSafety1       0.42044     0.09767      4.3047    0.093733        4.4856
bSafety2      -0.01486     0.10712     -0.1388    0.088668       -0.1676


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.005695    0.004108  -6.163e-07  -9.075e-05  7.1482e-04  8.2631e-04
asc_others    0.004108    0.034593   9.832e-05    0.001044    0.002765    0.002703
bTInc       -6.163e-07   9.832e-05   9.412e-07   3.779e-06  -2.371e-06   1.092e-05
bCost       -9.075e-05    0.001044   3.779e-06  1.2855e-04  -1.206e-05  -9.697e-06
bCro        7.1482e-04    0.002765  -2.371e-06  -1.206e-05    0.005554  -2.239e-05
bWaitEnv1   8.2631e-04    0.002703   1.092e-05  -9.697e-06  -2.239e-05    0.003010
bWaitEnv2  -8.2810e-04    0.002190  -1.693e-06  2.3583e-04 -3.3884e-04  6.8577e-04
bStop1      7.0443e-04    0.006308  -3.106e-06  -4.315e-05 -8.2456e-04  6.1744e-04
bStop2     -8.5091e-04    0.005543   1.230e-06   4.480e-05   -0.001001  3.5182e-04
bSafety1      0.001624    0.006727  -4.828e-06  1.1669e-04  4.9124e-04  1.8396e-04
bSafety2   -4.3566e-04    0.007751   2.866e-06  1.1312e-04 -2.1074e-04  5.1160e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -8.2810e-04  7.0443e-04 -8.5091e-04    0.001624 -4.3566e-04
asc_others    0.002190    0.006308    0.005543    0.006727    0.007751
bTInc       -1.693e-06  -3.106e-06   1.230e-06  -4.828e-06   2.866e-06
bCost       2.3583e-04  -4.315e-05   4.480e-05  1.1669e-04  1.1312e-04
bCro       -3.3884e-04 -8.2456e-04   -0.001001  4.9124e-04 -2.1074e-04
bWaitEnv1   6.8577e-04  6.1744e-04  3.5182e-04  1.8396e-04  5.1160e-04
bWaitEnv2     0.002761  -9.235e-05  3.7788e-04    0.001312    0.001306
bStop1      -9.235e-05    0.011808    0.006389 -8.0989e-04    0.001422
bStop2      3.7788e-04    0.006389    0.008583 -3.0676e-04    0.001960
bSafety1      0.001312 -8.0989e-04 -3.0676e-04    0.009540    0.005338
bSafety2      0.001306    0.001422    0.001960    0.005338    0.011474

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.008566    0.007056  -3.841e-06 -1.5365e-04    0.001311    0.001062
asc_others    0.007056    0.044928  1.6527e-04    0.001447    0.001632    0.003645
bTInc       -3.841e-06  1.6527e-04   1.997e-06   8.043e-06  -5.150e-06   2.600e-05
bCost      -1.5365e-04    0.001447   8.043e-06  1.9765e-04  -6.673e-05   6.341e-05
bCro          0.001311    0.001632  -5.150e-06  -6.673e-05    0.004885 -2.3110e-04
bWaitEnv1     0.001062    0.003645   2.600e-05   6.341e-05 -2.3110e-04    0.002555
bWaitEnv2  -6.8767e-04    0.002124  -8.569e-06  3.4653e-04  1.6589e-04  3.2155e-04
bStop1        0.001621    0.009133  -3.302e-06  1.3056e-04   -0.001387  8.0065e-04
bStop2       -0.001519    0.008574   2.006e-05  1.6016e-04   -0.001004  7.0904e-04
bSafety1      0.004095    0.006571  -2.394e-05  1.7604e-04  3.1219e-04  2.4736e-04
bSafety2   -1.1556e-04    0.007548   4.557e-07  2.2932e-04 -9.4633e-04  1.2315e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -6.8767e-04    0.001621   -0.001519    0.004095 -1.1556e-04
asc_others    0.002124    0.009133    0.008574    0.006571    0.007548
bTInc       -8.569e-06  -3.302e-06   2.006e-05  -2.394e-05   4.557e-07
bCost       3.4653e-04  1.3056e-04  1.6016e-04  1.7604e-04  2.2932e-04
bCro        1.6589e-04   -0.001387   -0.001004  3.1219e-04 -9.4633e-04
bWaitEnv1   3.2155e-04  8.0065e-04  7.0904e-04  2.4736e-04  1.2315e-04
bWaitEnv2     0.003284   5.770e-05   2.704e-05    0.001208    0.001577
bStop1       5.770e-05    0.012566    0.007240 -2.0843e-04    0.003652
bStop2       2.704e-05    0.007240    0.009308 -8.2337e-04    0.003604
bSafety1      0.001208 -2.0843e-04 -8.2337e-04    0.008786    0.002768
bSafety2      0.001577    0.003652    0.003604    0.002768    0.007862

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000      0.2927   -0.008418    -0.10607    0.127102    0.199571
asc_others    0.292673      1.0000    0.544900     0.49526    0.199446    0.264912
bTInc        -0.008418      0.5449    1.000000     0.34354   -0.032799    0.205058
bCost        -0.106071      0.4953    0.343537     1.00000   -0.014275   -0.015589
bCro          0.127102      0.1994   -0.032799    -0.01427    1.000000   -0.005477
bWaitEnv1     0.199571      0.2649    0.205058    -0.01559   -0.005477    1.000000
bWaitEnv2    -0.208849      0.2241   -0.033210     0.39588   -0.086530    0.237874
bStop1        0.085905      0.3121   -0.029463    -0.03502   -0.101817    0.103559
bStop2       -0.121712      0.3217    0.013682     0.04265   -0.145045    0.069212
bSafety1      0.220366      0.3703   -0.050955     0.10537    0.067486    0.034327
bSafety2     -0.053895      0.3890    0.027575     0.09314   -0.026398    0.087047
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     -0.20885     0.08590    -0.12171     0.22037    -0.05389
asc_others     0.22411     0.31212     0.32169     0.37032     0.38904
bTInc         -0.03321    -0.02946     0.01368    -0.05095     0.02758
bCost          0.39588    -0.03502     0.04265     0.10537     0.09314
bCro          -0.08653    -0.10182    -0.14505     0.06749    -0.02640
bWaitEnv1      0.23787     0.10356     0.06921     0.03433     0.08705
bWaitEnv2      1.00000    -0.01617     0.07763     0.25564     0.23197
bStop1        -0.01617     1.00000     0.63462    -0.07631     0.12214
bStop2         0.07763     0.63462     1.00000    -0.03390     0.19753
bSafety1       0.25564    -0.07631    -0.03390     1.00000     0.51016
bSafety2       0.23197     0.12214     0.19753     0.51016     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.3597   -0.029370    -0.11808     0.20272     0.22701
asc_others     0.35970      1.0000    0.551780     0.48554     0.11015     0.34016
bTInc         -0.02937      0.5518    1.000000     0.40486    -0.05215     0.36396
bCost         -0.11808      0.4855    0.404865     1.00000    -0.06791     0.08923
bCro           0.20272      0.1102   -0.052146    -0.06791     1.00000    -0.06541
bWaitEnv1      0.22701      0.3402    0.363962     0.08923    -0.06541     1.00000
bWaitEnv2     -0.12966      0.1748   -0.105829     0.43015     0.04142     0.11101
bStop1         0.15625      0.3844   -0.020845     0.08285    -0.17699     0.14129
bStop2        -0.17015      0.4193    0.147177     0.11807    -0.14883     0.14538
bSafety1       0.47202      0.3307   -0.180757     0.13359     0.04766     0.05220
bSafety2      -0.01408      0.4016    0.003637     0.18396    -0.15271     0.02748
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.129664    0.156247   -0.170152     0.47202   -0.014082
asc_others    0.174839    0.384379    0.419289     0.33074    0.401595
bTInc        -0.105829   -0.020845    0.147177    -0.18076    0.003637
bCost         0.430147    0.082847    0.118075     0.13359    0.183958
bCro          0.041420   -0.176994   -0.148833     0.04766   -0.152707
bWaitEnv1     0.111005    0.141293    0.145381     0.05220    0.027475
bWaitEnv2     1.000000    0.008983    0.004892     0.22484    0.310313
bStop1        0.008983    1.000000    0.669475    -0.01984    0.367383
bStop2        0.004892    0.669475    1.000000    -0.09105    0.421246
bSafety1      0.224842   -0.019837   -0.091047     1.00000    0.333103
bSafety2      0.310313    0.367383    0.421246     0.33310    1.000000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 802          0.04529316
 288          0.06385458
 227          0.06820538
 769          0.07175379
 341          0.07953137
 460          0.11744040
 986          0.12439107
 559          0.12858928
 468          0.13462160
 717          0.15586558
 787          0.16125261
 657          0.17678912
 136          0.17806259
 134          0.17848453
 537          0.18237098
 469          0.18289953
 486          0.18592249
 878          0.19025505
 207          0.20997142
 601          0.21099136

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.85182     0.85182
asc_others       0.000    -0.92421    -0.92421
bTInc            0.000    -0.01142    -0.01142
bCost            0.000    -0.02647    -0.02647
bCro             0.000     0.60131     0.60131
bWaitEnv1        0.000    -0.07794    -0.07794
bWaitEnv2        0.000     0.11804     0.11804
bStop1           0.000     0.14955     0.14955
bStop2           0.000    -0.27535    -0.27535
bSafety1         0.000     0.42044     0.42044
bSafety2         0.000    -0.01486    -0.01486

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_nonPT_03"                                                                                                                        
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.85182368
asc_others 0.92421473
bTInc      0.01142398
bCost      0.02646983
bCro       0.60130633
bWaitEnv1  0.07793986
bWaitEnv2  0.11803917
bStop1     0.14955042
bStop2     0.27535264
bSafety1   0.42044469
bSafety2   0.01486374


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
      bWaitEnv1*(1/relInc)*(swaitenv_bus ==1) + bWaitEnv2*(1/relInc)*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(1/relInc)*(swaitenv_metro ==1) + bWaitEnv2*(1/relInc)*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
