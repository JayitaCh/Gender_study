Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:08:45.338494
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -18.150473
     reciprocal of condition number         : 9.80662e-07
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1221.81
Rho-squared vs equal shares                  :  0.2419 
Adj.Rho-squared vs equal shares              :  0.2351 
Rho-squared vs observed shares               :  0.1318 
Adj.Rho-squared vs observed shares           :  0.1254 
AIC                                         :  2465.63 
BIC                                         :  2523.83 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.76 
     pre-estimation                         :  00:00:0.37 
     estimation                             :  00:00:0.08 
     post-estimation                        :  00:00:0.31 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.205275    0.113437      1.8096    0.136320        1.5058
asc_others   -1.434233    0.218565     -6.5621    0.223356       -6.4213
bTInc        -0.006269  4.4185e-04    -14.1877  5.4368e-04      -11.5302
bCost         0.009815    0.004111      2.3876    0.004870        2.0154
bCro          0.626745    0.073654      8.5093    0.069682        8.9943
bWaitEnv1     0.091816    0.100242      0.9159    0.101464        0.9049
bWaitEnv2     0.258193    0.093900      2.7496    0.103410        2.4968
bStop1        0.171095    0.059624      2.8696    0.063307        2.7026
bStop2        0.038626    0.047175      0.8188    0.041838        0.9232
bSafety1      0.397016    0.101126      3.9260    0.100737        3.9411
bSafety2      0.212631    0.115106      1.8473    0.102652        2.0714


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.012868 -4.2061e-04   1.506e-05 -3.4121e-04  2.7014e-04  8.2292e-04
asc_others -4.2061e-04    0.047771   5.078e-05  3.6818e-04    0.002699    0.005267
bTInc        1.506e-05   5.078e-05   1.952e-07  -3.512e-07  -2.297e-06  -5.180e-06
bCost      -3.4121e-04  3.6818e-04  -3.512e-07   1.690e-05   1.712e-05   4.712e-05
bCro        2.7014e-04    0.002699  -2.297e-06   1.712e-05    0.005425 -3.1492e-04
bWaitEnv1   8.2292e-04    0.005267  -5.180e-06   4.712e-05 -3.1492e-04    0.010049
bWaitEnv2  -2.3645e-04    0.004605   6.963e-07  -4.848e-05 -8.4897e-04    0.003247
bStop1      -3.798e-05    0.003318   2.287e-06   2.656e-05 -1.8684e-04  8.1157e-04
bStop2     -7.7336e-04    0.002994   1.529e-06   3.355e-05 -3.2338e-04  5.2188e-04
bSafety1    7.6954e-04    0.008700  -2.466e-07   2.447e-05  3.2629e-04  3.1871e-04
bSafety2     -0.003246    0.010323  -3.133e-06  1.2742e-04 -3.2440e-04    0.001574
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -2.3645e-04  -3.798e-05 -7.7336e-04  7.6954e-04   -0.003246
asc_others    0.004605    0.003318    0.002994    0.008700    0.010323
bTInc        6.963e-07   2.287e-06   1.529e-06  -2.466e-07  -3.133e-06
bCost       -4.848e-05   2.656e-05   3.355e-05   2.447e-05  1.2742e-04
bCro       -8.4897e-04 -1.8684e-04 -3.2338e-04  3.2629e-04 -3.2440e-04
bWaitEnv1     0.003247  8.1157e-04  5.2188e-04  3.1871e-04    0.001574
bWaitEnv2     0.008817  -3.530e-05  4.0643e-04    0.003132    0.003216
bStop1      -3.530e-05    0.003555    0.001789 -3.5411e-04  5.7148e-04
bStop2      4.0643e-04    0.001789    0.002225  1.4397e-04    0.001159
bSafety1      0.003132 -3.5411e-04  1.4397e-04    0.010226    0.006360
bSafety2      0.003216  5.7148e-04    0.001159    0.006360    0.013249

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.018583    0.001299   1.910e-05 -5.0760e-04    0.002298    0.001042
asc_others    0.001299    0.049888   6.063e-05  4.1082e-04    0.002095    0.006174
bTInc        1.910e-05   6.063e-05   2.956e-07  -3.497e-07   3.585e-06  -9.527e-07
bCost      -5.0760e-04  4.1082e-04  -3.497e-07   2.372e-05  -3.798e-05   6.257e-05
bCro          0.002298    0.002095   3.585e-06  -3.798e-05    0.004856   -0.001061
bWaitEnv1     0.001042    0.006174  -9.527e-07   6.257e-05   -0.001061    0.010295
bWaitEnv2     0.001210    0.006281  -4.144e-06  -4.262e-05 -8.6933e-04    0.004804
bStop1       -0.001191    0.004349   2.649e-06   7.346e-05 -4.4468e-04  8.8531e-04
bStop2       -0.001476    0.003656   1.866e-06   6.021e-05 -3.7938e-04  7.0368e-04
bSafety1      0.001864    0.009406  -9.279e-06   6.952e-05 -3.1340e-04  9.1686e-04
bSafety2     -0.005001    0.009480  -8.569e-06  2.2971e-04   -0.001641    0.001335
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001210   -0.001191   -0.001476    0.001864   -0.005001
asc_others    0.006281    0.004349    0.003656    0.009406    0.009480
bTInc       -4.144e-06   2.649e-06   1.866e-06  -9.279e-06  -8.569e-06
bCost       -4.262e-05   7.346e-05   6.021e-05   6.952e-05  2.2971e-04
bCro       -8.6933e-04 -4.4468e-04 -3.7938e-04 -3.1340e-04   -0.001641
bWaitEnv1     0.004804  8.8531e-04  7.0368e-04  9.1686e-04    0.001335
bWaitEnv2     0.010694 -2.9122e-04  3.9042e-04    0.003820    0.003686
bStop1     -2.9122e-04    0.004008    0.001766  -3.528e-05    0.001405
bStop2      3.9042e-04    0.001766    0.001750  4.4391e-04    0.001578
bSafety1      0.003820  -3.528e-05  4.4391e-04    0.010148    0.004895
bSafety2      0.003686    0.001405    0.001578    0.004895    0.010537

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000    -0.01696    0.300496    -0.73172     0.03233     0.07237
asc_others   -0.016965     1.00000    0.525790     0.40979     0.16766     0.24039
bTInc         0.300496     0.52579    1.000000    -0.19337    -0.07059    -0.11696
bCost        -0.731719     0.40979   -0.193368     1.00000     0.05654     0.11435
bCro          0.032332     0.16766   -0.070587     0.05654     1.00000    -0.04265
bWaitEnv1     0.072369     0.24039   -0.116959     0.11435    -0.04265     1.00000
bWaitEnv2    -0.022199     0.22438    0.016783    -0.12559    -0.12275     0.34496
bStop1       -0.005615     0.25457    0.086799     0.10837    -0.04255     0.13578
bStop2       -0.144515     0.29042    0.073352     0.17301    -0.09307     0.11036
bSafety1      0.067083     0.39361   -0.005520     0.05888     0.04381     0.03144
bSafety2     -0.248609     0.41031   -0.061611     0.26929    -0.03826     0.13641
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.022199   -0.005615    -0.14451    0.067083    -0.24861
asc_others    0.224380    0.254572     0.29042    0.393615     0.41031
bTInc         0.016783    0.086799     0.07335   -0.005520    -0.06161
bCost        -0.125594    0.108375     0.17301    0.058876     0.26929
bCro         -0.122752   -0.042546    -0.09307    0.043807    -0.03826
bWaitEnv1     0.344957    0.135784     0.11036    0.031440     0.13641
bWaitEnv2     1.000000   -0.006306     0.09175    0.329839     0.29754
bStop1       -0.006306    1.000000     0.63605   -0.058729     0.08327
bStop2        0.091750    0.636053     1.00000    0.030179     0.21337
bSafety1      0.329839   -0.058729     0.03018    1.000000     0.54637
bSafety2      0.297541    0.083268     0.21337    0.546367     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.04266     0.25771    -0.76460     0.24195     0.07534
asc_others     0.04266     1.00000     0.49932     0.37768     0.13461     0.27241
bTInc          0.25771     0.49932     1.00000    -0.13206     0.09462    -0.01727
bCost         -0.76460     0.37768    -0.13206     1.00000    -0.11191     0.12662
bCro           0.24195     0.13461     0.09462    -0.11191     1.00000    -0.15005
bWaitEnv1      0.07534     0.27241    -0.01727     0.12662    -0.15005     1.00000
bWaitEnv2      0.08580     0.27192    -0.07371    -0.08463    -0.12064     0.45787
bStop1        -0.13802     0.30759     0.07695     0.23826    -0.10080     0.13783
bStop2        -0.25875     0.39129     0.08202     0.29550    -0.13013     0.16576
bSafety1       0.13577     0.41804    -0.16942     0.14170    -0.04465     0.08970
bSafety2      -0.35740     0.41345    -0.15354     0.45950    -0.22944     0.12814
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.08580   -0.138020    -0.25875    0.135768     -0.3574
asc_others     0.27192    0.307590     0.39129    0.418040      0.4134
bTInc         -0.07371    0.076952     0.08202   -0.169416     -0.1535
bCost         -0.08463    0.238263     0.29550    0.141702      0.4595
bCro          -0.12064   -0.100803    -0.13013   -0.044646     -0.2294
bWaitEnv1      0.45787    0.137826     0.16576    0.089702      0.1281
bWaitEnv2      1.00000   -0.044484     0.09024    0.366653      0.3473
bStop1        -0.04448    1.000000     0.66690   -0.005532      0.2162
bStop2         0.09024    0.666896     1.00000    0.105325      0.3675
bSafety1       0.36665   -0.005532     0.10533    1.000000      0.4734
bSafety2       0.34725    0.216186     0.36754    0.473354      1.0000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 769          0.05072052
 227          0.07128597
 288          0.10712592
 341          0.12552849
 780          0.12654354
 136          0.13379952
 537          0.14051512
 717          0.14161336
 712          0.16048073
 469          0.16091873
 437          0.16158150
 986          0.16277128
 221          0.16423885
 468          0.16840909
 802          0.17017092
 657          0.17309297
  46          0.17712069
 197          0.17905500
 878          0.18517607
 460          0.18725635

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.205275    0.205275
asc_others       0.000   -1.434233   -1.434233
bTInc            0.000   -0.006269   -0.006269
bCost            0.000    0.009815    0.009815
bCro             0.000    0.626745    0.626745
bWaitEnv1        0.000    0.091816    0.091816
bWaitEnv2        0.000    0.258193    0.258193
bStop1           0.000    0.171095    0.171095
bStop2           0.000    0.038626    0.038626
bSafety1         0.000    0.397016    0.397016
bSafety2         0.000    0.212631    0.212631

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.205275343
asc_others 1.434232795
bTInc      0.006268774
bCost      0.009814874
bCro       0.626745033
bWaitEnv1  0.091816198
bWaitEnv2  0.258192807
bStop1     0.171094940
bStop2     0.038626138
bSafety1   0.397015935
bSafety2   0.212630802


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(relInc)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop2/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(relInc)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop2/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
