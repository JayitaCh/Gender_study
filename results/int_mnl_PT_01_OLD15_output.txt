Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:18:49.196361
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -20.836452
     reciprocal of condition number         : 1.08672e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1235.13
Rho-squared vs equal shares                  :  0.2336 
Adj.Rho-squared vs equal shares              :  0.2268 
Rho-squared vs observed shares               :  0.1223 
Adj.Rho-squared vs observed shares           :  0.1159 
AIC                                         :  2492.26 
BIC                                         :  2550.46 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.84 
     pre-estimation                         :  00:00:0.39 
     estimation                             :  00:00:0.1 
     post-estimation                        :  00:00:0.35 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.413055    0.076620      5.3910    0.088204        4.6830
asc_others   -1.540059    0.200117     -7.6958    0.210247       -7.3250
bTInc        -0.005821  4.3148e-04    -13.4916  5.3643e-04      -10.8520
bCost         0.004524    0.004162      1.0868    0.004542        0.9961
bCro          0.615525    0.073321      8.3949    0.070243        8.7628
bWaitEnv1     0.055211    0.099152      0.5568    0.100768        0.5479
bWaitEnv2     0.294002    0.092660      3.1729    0.103375        2.8440
bStop1        0.150201    0.058631      2.5618    0.061369        2.4475
bStop2        0.036475    0.047108      0.7743    0.043350        0.8414
bSafety1      0.388888    0.100643      3.8640    0.100310        3.8769
bSafety2      0.139249    0.109752      1.2688    0.090513        1.5384


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.005871    0.006953   7.910e-06  -2.042e-06  6.3068e-04    0.001717
asc_others    0.006953    0.040047   5.555e-05  1.0120e-04    0.002347    0.004287
bTInc        7.910e-06   5.555e-05   1.862e-07  -3.150e-07  -2.002e-06  -4.254e-06
bCost       -2.042e-06  1.0120e-04  -3.150e-07   1.732e-05   7.753e-06   2.272e-05
bCro        6.3068e-04    0.002347  -2.002e-06   7.753e-06    0.005376 -4.0279e-04
bWaitEnv1     0.001717    0.004287  -4.254e-06   2.272e-05 -4.0279e-04    0.009831
bWaitEnv2    -0.001155    0.005727  -6.000e-07   2.460e-05 -8.2983e-04    0.003384
bStop1      4.4767e-04    0.002826   2.335e-06   2.587e-05 -2.0916e-04  7.5216e-04
bStop2      -8.410e-05    0.002500   1.663e-06   3.542e-05 -3.4454e-04  4.7881e-04
bSafety1      0.001287    0.008226   3.642e-07   1.050e-05  2.9175e-04  2.1533e-04
bSafety2   -6.2447e-04    0.007546  -2.432e-07   9.862e-06 -4.7607e-04    0.001088
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.001155  4.4767e-04  -8.410e-05    0.001287 -6.2447e-04
asc_others    0.005727    0.002826    0.002500    0.008226    0.007546
bTInc       -6.000e-07   2.335e-06   1.663e-06   3.642e-07  -2.432e-07
bCost        2.460e-05   2.587e-05   3.542e-05   1.050e-05   9.862e-06
bCro       -8.2983e-04 -2.0916e-04 -3.4454e-04  2.9175e-04 -4.7607e-04
bWaitEnv1     0.003384  7.5216e-04  4.7881e-04  2.1533e-04    0.001088
bWaitEnv2     0.008586   5.273e-05  5.4603e-04    0.003207    0.003482
bStop1       5.273e-05    0.003438    0.001794 -3.9451e-04  3.6883e-04
bStop2      5.4603e-04    0.001794    0.002219   9.175e-05  8.7418e-04
bSafety1      0.003207 -3.9451e-04   9.175e-05    0.010129    0.006119
bSafety2      0.003482  3.6883e-04  8.7418e-04    0.006119    0.012045

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007780    0.010813   1.277e-05  -4.179e-06    0.001605    0.002258
asc_others    0.010813    0.044204   6.475e-05   4.374e-05    0.002399    0.005271
bTInc        1.277e-05   6.475e-05   2.878e-07  -5.215e-07   2.307e-06  -4.306e-07
bCost       -4.179e-06   4.374e-05  -5.215e-07   2.063e-05  -5.654e-05   4.624e-05
bCro          0.001605    0.002399   2.307e-06  -5.654e-05    0.004934   -0.001092
bWaitEnv1     0.002258    0.005271  -4.306e-07   4.624e-05   -0.001092    0.010154
bWaitEnv2   4.0605e-04    0.007549  -3.256e-06   5.852e-05   -0.001164    0.004992
bStop1      3.7173e-04    0.003621   2.204e-06  1.1340e-04 -4.8559e-04  8.7177e-04
bStop2     -1.3429e-04    0.003037   1.303e-06   8.461e-05 -4.5855e-04  7.7778e-04
bSafety1      0.003451    0.008922  -7.390e-06   8.894e-05 -2.7599e-04  8.0851e-04
bSafety2    -5.347e-05    0.005643  -4.907e-06   6.533e-05   -0.001380  8.1332e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   4.0605e-04  3.7173e-04 -1.3429e-04    0.003451  -5.347e-05
asc_others    0.007549    0.003621    0.003037    0.008922    0.005643
bTInc       -3.256e-06   2.204e-06   1.303e-06  -7.390e-06  -4.907e-06
bCost        5.852e-05  1.1340e-04   8.461e-05   8.894e-05   6.533e-05
bCro         -0.001164 -4.8559e-04 -4.5855e-04 -2.7599e-04   -0.001380
bWaitEnv1     0.004992  8.7177e-04  7.7778e-04  8.0851e-04  8.1332e-04
bWaitEnv2     0.010686   4.479e-05  6.8450e-04    0.004184    0.004168
bStop1       4.479e-05    0.003766    0.001810  -8.989e-05  8.9560e-04
bStop2      6.8450e-04    0.001810    0.001879  4.8285e-04    0.001126
bSafety1      0.004184  -8.989e-05  4.8285e-04    0.010062    0.004356
bSafety2      0.004168  8.9560e-04    0.001126    0.004356    0.008193

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000      0.4535    0.239263   -0.006403     0.11226     0.22606
asc_others    0.453477      1.0000    0.643354    0.121494     0.15994     0.21608
bTInc         0.239263      0.6434    1.000000   -0.175384    -0.06327    -0.09944
bCost        -0.006403      0.1215   -0.175384    1.000000     0.02540     0.05506
bCro          0.112263      0.1599   -0.063272    0.025404     1.00000    -0.05540
bWaitEnv1     0.226057      0.2161   -0.099436    0.055056    -0.05540     1.00000
bWaitEnv2    -0.162657      0.3088   -0.015007    0.063789    -0.12214     0.36831
bStop1        0.099652      0.2409    0.092319    0.106011    -0.04865     0.12938
bStop2       -0.023299      0.2652    0.081812    0.180634    -0.09975     0.10251
bSafety1      0.166868      0.4084    0.008386    0.025057     0.03954     0.02158
bSafety2     -0.074261      0.3436   -0.005135    0.021588    -0.05916     0.10002
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.162657    0.099652    -0.02330    0.166868   -0.074261
asc_others    0.308828    0.240863     0.26523    0.408421    0.343582
bTInc        -0.015007    0.092319     0.08181    0.008386   -0.005135
bCost         0.063789    0.106011     0.18063    0.025057    0.021588
bCro         -0.122142   -0.048653    -0.09975    0.039536   -0.059160
bWaitEnv1     0.368310    0.129385     0.10251    0.021578    0.100018
bWaitEnv2     1.000000    0.009706     0.12509    0.343842    0.342417
bStop1        0.009706    1.000000     0.64935   -0.066856    0.057318
bStop2        0.125090    0.649353     1.00000    0.019352    0.169079
bSafety1      0.343842   -0.066856     0.01935    1.000000    0.554006
bSafety2      0.342417    0.057318     0.16908    0.554006    1.000000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000     0.58309    0.269803    -0.01043     0.25913    0.254070
asc_others    0.583090     1.00000    0.574141     0.04581     0.16247    0.248814
bTInc         0.269803     0.57414    1.000000    -0.21406     0.06124   -0.007967
bCost        -0.010432     0.04581   -0.214056     1.00000    -0.17723    0.101047
bCro          0.259130     0.16247    0.061238    -0.17723     1.00000   -0.154301
bWaitEnv1     0.254070     0.24881   -0.007967     0.10105    -0.15430    1.000000
bWaitEnv2     0.044533     0.34734   -0.058714     0.12464    -0.16026    0.479178
bStop1        0.068673     0.28065    0.066946     0.40689    -0.11265    0.140971
bStop2       -0.035122     0.33327    0.056032     0.42975    -0.15059    0.178053
bSafety1      0.390021     0.42306   -0.137345     0.19524    -0.03917    0.079987
bSafety2     -0.006698     0.29654   -0.101055     0.15894    -0.21709    0.089172
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.044533    0.068673    -0.03512     0.39002   -0.006698
asc_others    0.347342    0.280653     0.33327     0.42306    0.296541
bTInc        -0.058714    0.066946     0.05603    -0.13734   -0.101055
bCost         0.124639    0.406886     0.42975     0.19524    0.158936
bCro         -0.160265   -0.112647    -0.15059    -0.03917   -0.217089
bWaitEnv1     0.479178    0.140971     0.17805     0.07999    0.089172
bWaitEnv2     1.000000    0.007060     0.15275     0.40352    0.445507
bStop1        0.007060    1.000000     0.68031    -0.01460    0.161233
bStop2        0.152748    0.680310     1.00000     0.11104    0.286985
bSafety1      0.403522   -0.014601     0.11104     1.00000    0.479759
bSafety2      0.445507    0.161233     0.28698     0.47976    1.000000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 227          0.07080776
 769          0.09901634
 288          0.10644712
  83          0.12249026
 341          0.12417279
 537          0.12801325
 469          0.13831315
 780          0.14067307
 437          0.14156379
 136          0.14942694
 717          0.14967806
 468          0.17643804
 787          0.17691992
 134          0.18232144
 657          0.18248080
 601          0.18834970
 802          0.18936695
 486          0.19229414
 460          0.19354027
 197          0.20125610

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.413055    0.413055
asc_others       0.000   -1.540059   -1.540059
bTInc            0.000   -0.005821   -0.005821
bCost            0.000    0.004524    0.004524
bCro             0.000    0.615525    0.615525
bWaitEnv1        0.000    0.055211    0.055211
bWaitEnv2        0.000    0.294002    0.294002
bStop1           0.000    0.150201    0.150201
bStop2           0.000    0.036475    0.036475
bSafety1         0.000    0.388888    0.388888
bSafety2         0.000    0.139249    0.139249

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.413055381
asc_others 1.540058709
bTInc      0.005821343
bCost      0.004523640
bCro       0.615524603
bWaitEnv1  0.055211401
bWaitEnv2  0.294001887
bStop1     0.150200928
bStop2     0.036475480
bSafety1   0.388888270
bSafety2   0.139249098


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*log(relInc)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop2/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*log(relInc)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop2/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
