Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_nonPT_03
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-14 19:03:06.473486
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -27.195901
     reciprocal of condition number         : 1.00323e-05
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1240.5
Rho-squared vs equal shares                  :  0.2303 
Adj.Rho-squared vs equal shares              :  0.2247 
Rho-squared vs observed shares               :  0.1185 
Adj.Rho-squared vs observed shares           :  0.1135 
AIC                                         :  2498.99 
BIC                                         :  2546.61 

Estimated parameters                        : 9
Time taken (hh:mm:ss)                       :  00:00:0.99 
     pre-estimation                         :  00:00:0.64 
     estimation                             :  00:00:0.11 
     post-estimation                        :  00:00:0.24 
Iterations                                  :  11  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.78932     0.07211     10.9457    0.085843        9.1949
asc_others    -0.99763     0.17518     -5.6949    0.192050       -5.1946
bTInc         -0.01153  9.6118e-04    -11.9934    0.001340       -8.6033
bCost         -0.04847     0.01058     -4.5798    0.013220       -3.6661
bCro           0.60238     0.07322      8.2272    0.072891        8.2641
bWaitEnv1     -0.20144     0.09812     -2.0529    0.101595       -1.9827
bWaitEnv2      0.14276     0.08997      1.5868    0.101248        1.4100
bSafety1       0.43284     0.09584      4.5162    0.096219        4.4985
bSafety2       0.04712     0.10470      0.4500    0.085717        0.5497


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.005200    0.004210  -4.191e-06   7.526e-06  7.8279e-04    0.001229
asc_others    0.004210    0.030687   9.767e-05  9.8694e-04    0.003457    0.003209
bTInc       -4.191e-06   9.767e-05   9.239e-07   4.734e-06  -2.570e-06  -3.933e-06
bCost        7.526e-06  9.8694e-04   4.734e-06  1.1199e-04   2.722e-05  -2.651e-05
bCro        7.8279e-04    0.003457  -2.570e-06   2.722e-05    0.005361 -1.5837e-04
bWaitEnv1     0.001229    0.003209  -3.933e-06  -2.651e-05 -1.5837e-04    0.009628
bWaitEnv2  -9.6927e-04    0.002928  -5.307e-06  -2.458e-05 -6.7956e-04    0.002982
bSafety1      0.001850    0.006678  -5.588e-06  -6.268e-06  5.5491e-04  1.4800e-04
bSafety2   -1.5628e-04    0.006008  -6.721e-07  -1.493e-05 -1.2780e-04  7.6178e-04
             bWaitEnv2    bSafety1    bSafety2
asc_metro  -9.6927e-04    0.001850 -1.5628e-04
asc_others    0.002928    0.006678    0.006008
bTInc       -5.307e-06  -5.588e-06  -6.721e-07
bCost       -2.458e-05  -6.268e-06  -1.493e-05
bCro       -6.7956e-04  5.5491e-04 -1.2780e-04
bWaitEnv1     0.002982  1.4800e-04  7.6178e-04
bWaitEnv2     0.008094    0.001882    0.002083
bSafety1      0.001882    0.009186    0.005262
bSafety2      0.002083    0.005262    0.010963

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007369    0.006957  -7.271e-06  -8.262e-05    0.001716    0.001309
asc_others    0.006957    0.036883  1.5311e-04    0.001256    0.002968    0.003428
bTInc       -7.271e-06  1.5311e-04   1.795e-06   9.292e-06  -3.964e-06   1.095e-05
bCost       -8.262e-05    0.001256   9.292e-06  1.7477e-04  -3.102e-05   6.006e-05
bCro          0.001716    0.002968  -3.964e-06  -3.102e-05    0.005313 -5.0607e-04
bWaitEnv1     0.001309    0.003428   1.095e-05   6.006e-05 -5.0607e-04    0.010321
bWaitEnv2   1.4072e-04    0.004137  -6.796e-06   2.169e-05 -9.1738e-04    0.005054
bSafety1      0.004293    0.007393  -2.024e-05   4.675e-05  2.6663e-04  2.6644e-04
bSafety2    4.2916e-04    0.004643  -2.098e-06   2.823e-05 -7.8082e-04  4.5584e-04
             bWaitEnv2    bSafety1    bSafety2
asc_metro   1.4072e-04    0.004293  4.2916e-04
asc_others    0.004137    0.007393    0.004643
bTInc       -6.796e-06  -2.024e-05  -2.098e-06
bCost        2.169e-05   4.675e-05   2.823e-05
bCro       -9.1738e-04  2.6663e-04 -7.8082e-04
bWaitEnv1     0.005054  2.6644e-04  4.5584e-04
bWaitEnv2     0.010251    0.002683    0.003067
bSafety1      0.002683    0.009258    0.003468
bSafety2      0.003067    0.003468    0.007347

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000      0.3333   -0.060471    0.009862     0.14826     0.17376
asc_others    0.333285      1.0000    0.580062    0.532387     0.26953     0.18670
bTInc        -0.060471      0.5801    1.000000    0.465383    -0.03652    -0.04170
bCost         0.009862      0.5324    0.465383    1.000000     0.03513    -0.02553
bCro          0.148257      0.2695   -0.036520    0.035127     1.00000    -0.02204
bWaitEnv1     0.173759      0.1867   -0.041702   -0.025534    -0.02204     1.00000
bWaitEnv2    -0.149401      0.1858   -0.061372   -0.025816    -0.10316     0.33779
bSafety1      0.267718      0.3978   -0.060663   -0.006180     0.07908     0.01574
bSafety2     -0.020698      0.3276   -0.006679   -0.013472    -0.01667     0.07415
             bWaitEnv2    bSafety1    bSafety2
asc_metro     -0.14940    0.267718   -0.020698
asc_others     0.18581    0.397772    0.327579
bTInc         -0.06137   -0.060663   -0.006679
bCost         -0.02582   -0.006180   -0.013472
bCro          -0.10316    0.079077   -0.016670
bWaitEnv1      0.33779    0.015738    0.074149
bWaitEnv2      1.00000    0.218246    0.221134
bSafety1       0.21825    1.000000    0.524336
bSafety2       0.22113    0.524336    1.000000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.4220    -0.06322    -0.07280     0.27421     0.15009
asc_others     0.42201      1.0000     0.59500     0.49468     0.21205     0.17571
bTInc         -0.06322      0.5950     1.00000     0.52455    -0.04058     0.08044
bCost         -0.07280      0.4947     0.52455     1.00000    -0.03219     0.04472
bCro           0.27421      0.2120    -0.04058    -0.03219     1.00000    -0.06834
bWaitEnv1      0.15009      0.1757     0.08044     0.04472    -0.06834     1.00000
bWaitEnv2      0.01619      0.2128    -0.05010     0.01620    -0.12430     0.49137
bSafety1       0.51970      0.4001    -0.15696     0.03675     0.03802     0.02726
bSafety2       0.05832      0.2821    -0.01827     0.02491    -0.12497     0.05234
             bWaitEnv2    bSafety1    bSafety2
asc_metro      0.01619     0.51970     0.05832
asc_others     0.21278     0.40008     0.28206
bTInc         -0.05010    -0.15696    -0.01827
bCost          0.01620     0.03675     0.02491
bCro          -0.12430     0.03802    -0.12497
bWaitEnv1      0.49137     0.02726     0.05234
bWaitEnv2      1.00000     0.27539     0.35342
bSafety1       0.27539     1.00000     0.42055
bSafety2       0.35342     0.42055     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 802          0.04347552
 288          0.04911597
 769          0.09650861
 341          0.09901412
 227          0.09931746
 437          0.15186335
 986          0.16684674
 717          0.16914211
 469          0.17091335
 460          0.18765341
 200          0.19603501
 537          0.20439499
 468          0.20609666
 136          0.20891899
 170          0.21185073
 657          0.21251687
 780          0.21339183
 323          0.21352511
  46          0.21572426
 134          0.21638102

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.78932     0.78932
asc_others       0.000    -0.99763    -0.99763
bTInc            0.000    -0.01153    -0.01153
bCost            0.000    -0.04847    -0.04847
bCro             0.000     0.60238     0.60238
bWaitEnv1        0.000    -0.20144    -0.20144
bWaitEnv2        0.000     0.14276     0.14276
bSafety1         0.000     0.43284     0.43284
bSafety2         0.000     0.04712     0.04712

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_nonPT_03"                                                                                                                        
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.78932225
asc_others 0.99762521
bTInc      0.01152784
bCost      0.04846550
bCro       0.60237979
bWaitEnv1  0.20143571
bWaitEnv2  0.14276034
bSafety1   0.43283709
bSafety2   0.04711658


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
      bWaitEnv1*relAge*(PurposeWork==TRUE)*(swaitenv_bus ==1) + bWaitEnv2*relAge*(PurposeWork==TRUE)*(swaitenv_bus ==2)+
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*relAge*(PurposeWork==TRUE)*(swaitenv_metro ==1) + bWaitEnv2*relAge*(PurposeWork==TRUE)*(swaitenv_metro ==2)+
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
