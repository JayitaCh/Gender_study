Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 05:59:39.863157
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -19.68864
     reciprocal of condition number         : 1.05146e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1224.65
Rho-squared vs equal shares                  :  0.2401 
Adj.Rho-squared vs equal shares              :  0.2333 
Rho-squared vs observed shares               :  0.1297 
Adj.Rho-squared vs observed shares           :  0.1233 
AIC                                         :  2471.3 
BIC                                         :  2529.5 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.76 
     pre-estimation                         :  00:00:0.37 
     estimation                             :  00:00:0.09 
     post-estimation                        :  00:00:0.31 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.450209    0.089887      5.0086    0.103483        4.3506
asc_others   -1.695649    0.203412     -8.3360    0.219447       -7.7269
bTInc        -0.005971  4.2826e-04    -13.9417  5.5413e-04      -10.7749
bCost         0.001563    0.003994      0.3913    0.004292        0.3641
bCro          0.641660    0.074137      8.6550    0.070321        9.1248
bWaitEnv1     0.040969    0.099095      0.4134    0.099401        0.4122
bWaitEnv2     0.213796    0.094393      2.2650    0.100103        2.1358
bStop1        0.182007    0.108741      1.6738    0.112888        1.6123
bStop2       -0.224964    0.092708     -2.4266    0.093014       -2.4186
bSafety1      0.372805    0.100280      3.7176    0.096484        3.8639
bSafety2      0.083005    0.112704      0.7365    0.093650        0.8863


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.008080    0.005330   5.361e-06 -1.8213e-04  6.2103e-04    0.001607
asc_others    0.005330    0.041376   5.452e-05   9.894e-05    0.001953    0.004439
bTInc        5.361e-06   5.452e-05   1.834e-07   1.825e-07  -1.304e-06  -4.933e-06
bCost      -1.8213e-04   9.894e-05   1.825e-07   1.595e-05   2.155e-06   2.931e-06
bCro        6.2103e-04    0.001953  -1.304e-06   2.155e-06    0.005496 -4.2924e-04
bWaitEnv1     0.001607    0.004439  -4.933e-06   2.931e-06 -4.2924e-04    0.009820
bWaitEnv2  -7.7335e-04    0.005791  -5.502e-07  -4.877e-05 -8.0527e-04    0.003291
bStop1      5.3238e-04    0.005917  -3.541e-06   7.049e-06 -9.1037e-04    0.001560
bStop2     -9.2810e-04    0.005471  -1.404e-06   1.518e-06   -0.001232    0.001049
bSafety1      0.001169    0.007971   6.968e-07  -1.676e-07  2.9714e-04  2.7411e-04
bSafety2     -0.001489    0.008679  -4.415e-07   6.180e-05 -5.4371e-04    0.001353
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -7.7335e-04  5.3238e-04 -9.2810e-04    0.001169   -0.001489
asc_others    0.005791    0.005917    0.005471    0.007971    0.008679
bTInc       -5.502e-07  -3.541e-06  -1.404e-06   6.968e-07  -4.415e-07
bCost       -4.877e-05   7.049e-06   1.518e-06  -1.676e-07   6.180e-05
bCro       -8.0527e-04 -9.1037e-04   -0.001232  2.9714e-04 -5.4371e-04
bWaitEnv1     0.003291    0.001560    0.001049  2.7411e-04    0.001353
bWaitEnv2     0.008910   5.936e-05    0.001361    0.003271    0.003578
bStop1       5.936e-05    0.011825    0.006388 -8.4882e-04    0.001509
bStop2        0.001361    0.006388    0.008595   8.340e-06    0.002263
bSafety1      0.003271 -8.4882e-04   8.340e-06    0.010056    0.006040
bSafety2      0.003578    0.001509    0.002263    0.006040    0.012702

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.010709    0.007992   5.791e-06 -2.0804e-04    0.001097    0.002569
asc_others    0.007992    0.048157   7.094e-05  2.2471e-04    0.002635    0.005038
bTInc        5.791e-06   7.094e-05   3.071e-07   5.742e-07   2.213e-06  -6.702e-07
bCost      -2.0804e-04  2.2471e-04   5.742e-07   1.843e-05   4.731e-05  -2.049e-05
bCro          0.001097    0.002635   2.213e-06   4.731e-05    0.004945 -7.2595e-04
bWaitEnv1     0.002569    0.005038  -6.702e-07  -2.049e-05 -7.2595e-04    0.009880
bWaitEnv2     0.001335    0.006014  -3.294e-06  -7.776e-05 -8.0838e-04    0.004627
bStop1        0.001898    0.006788  -3.886e-06  -5.529e-05   -0.001575    0.002061
bStop2       -0.001213    0.005799   1.458e-08  -1.833e-05   -0.001287    0.001300
bSafety1      0.004136    0.006355  -8.154e-06  -6.336e-05   3.842e-05  3.8107e-04
bSafety2   -9.5968e-04    0.006968  -4.142e-06   4.874e-05   -0.001343  5.3254e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001335    0.001898   -0.001213    0.004136 -9.5968e-04
asc_others    0.006014    0.006788    0.005799    0.006355    0.006968
bTInc       -3.294e-06  -3.886e-06   1.458e-08  -8.154e-06  -4.142e-06
bCost       -7.776e-05  -5.529e-05  -1.833e-05  -6.336e-05   4.874e-05
bCro       -8.0838e-04   -0.001575   -0.001287   3.842e-05   -0.001343
bWaitEnv1     0.004627    0.002061    0.001300  3.8107e-04  5.3254e-04
bWaitEnv2     0.010021   2.275e-05  3.4697e-04    0.003367    0.003527
bStop1       2.275e-05    0.012744    0.007135 -9.6932e-04    0.003292
bStop2      3.4697e-04    0.007135    0.008652   -0.001018    0.003337
bSafety1      0.003367 -9.6932e-04   -0.001018    0.009309    0.003157
bSafety2      0.003527    0.003292    0.003337    0.003157    0.008770

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.2915    0.139265   -0.507272    0.093192    0.180418
asc_others     0.29152      1.0000    0.625880    0.121769    0.129534    0.220236
bTInc          0.13927      0.6259    1.000000    0.106711   -0.041058   -0.116233
bCost         -0.50727      0.1218    0.106711    1.000000    0.007279    0.007406
bCro           0.09319      0.1295   -0.041058    0.007279    1.000000   -0.058427
bWaitEnv1      0.18042      0.2202   -0.116233    0.007406   -0.058427    1.000000
bWaitEnv2     -0.09115      0.3016   -0.013611   -0.129361   -0.115070    0.351849
bStop1         0.05447      0.2675   -0.076030    0.016228   -0.112924    0.144730
bStop2        -0.11137      0.2901   -0.035359    0.004099   -0.179247    0.114210
bSafety1       0.12972      0.3908    0.016226 -4.1833e-04    0.039967    0.027584
bSafety2      -0.14702      0.3786   -0.009147    0.137275   -0.065072    0.121130
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.091146    0.054467   -0.111373     0.12972   -0.147020
asc_others    0.301589    0.267520    0.290128     0.39079    0.378592
bTInc        -0.013611   -0.076030   -0.035359     0.01623   -0.009147
bCost        -0.129361    0.016228    0.004099 -4.1833e-04    0.137275
bCro         -0.115070   -0.112924   -0.179247     0.03997   -0.065072
bWaitEnv1     0.351849    0.144730    0.114210     0.02758    0.121130
bWaitEnv2     1.000000    0.005783    0.155537     0.34558    0.336324
bStop1        0.005783    1.000000    0.633704    -0.07784    0.123116
bStop2        0.155537    0.633704    1.000000  8.9704e-04    0.216625
bSafety1      0.345584   -0.077840  8.9704e-04     1.00000    0.534395
bSafety2      0.336324    0.123116    0.216625     0.53440    1.000000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.3519     0.10100    -0.46835    0.150688     0.24977
asc_others     0.35194      1.0000     0.58339     0.23855    0.170729     0.23097
bTInc          0.10100      0.5834     1.00000     0.24141    0.056791    -0.01217
bCost         -0.46835      0.2386     0.24141     1.00000    0.156735    -0.04803
bCro           0.15069      0.1707     0.05679     0.15674    1.000000    -0.10386
bWaitEnv1      0.24977      0.2310    -0.01217    -0.04803   -0.103857     1.00000
bWaitEnv2      0.12890      0.2738    -0.05938    -0.18098   -0.114837     0.46500
bStop1         0.16251      0.2740    -0.06212    -0.11411   -0.198353     0.18364
bStop2        -0.12601      0.2841  2.8280e-04    -0.04591   -0.196829     0.14057
bSafety1       0.41423      0.3001    -0.15251    -0.15298    0.005662     0.03973
bSafety2      -0.09903      0.3391    -0.07982     0.12126   -0.203931     0.05721
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.128896    0.162514    -0.12601    0.414232    -0.09903
asc_others    0.273787    0.274018     0.28409    0.300140     0.33906
bTInc        -0.059378   -0.062119  2.8280e-04   -0.152507    -0.07982
bCost        -0.180977   -0.114106    -0.04591   -0.152978     0.12126
bCro         -0.114837   -0.198353    -0.19683    0.005662    -0.20393
bWaitEnv1     0.465004    0.183637     0.14057    0.039734     0.05721
bWaitEnv2     1.000000    0.002013     0.03726    0.348626     0.37624
bStop1        0.002013    1.000000     0.67952   -0.088995     0.31135
bStop2        0.037265    0.679519     1.00000   -0.113415     0.38314
bSafety1      0.348626   -0.088995    -0.11342    1.000000     0.34942
bSafety2      0.376238    0.311350     0.38314    0.349423     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 769          0.04410394
 227          0.05205357
 288          0.09828576
 717          0.12487931
 341          0.12618180
 780          0.13894335
  77          0.14615110
 136          0.14742730
 437          0.15005795
 460          0.15029312
 657          0.15641651
 486          0.15995425
 537          0.16351506
 581          0.16714715
 221          0.16897038
 200          0.17060872
 559          0.17468263
 986          0.17844734
 469          0.17905130
 134          0.18463446

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.450209    0.450209
asc_others       0.000   -1.695649   -1.695649
bTInc            0.000   -0.005971   -0.005971
bCost            0.000    0.001563    0.001563
bCro             0.000    0.641660    0.641660
bWaitEnv1        0.000    0.040969    0.040969
bWaitEnv2        0.000    0.213796    0.213796
bStop1           0.000    0.182007    0.182007
bStop2           0.000   -0.224964   -0.224964
bSafety1         0.000    0.372805    0.372805
bSafety2         0.000    0.083005    0.083005

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.450209241
asc_others 1.695648873
bTInc      0.005970742
bCost      0.001563073
bCro       0.641659573
bWaitEnv1  0.040968676
bWaitEnv2  0.213796279
bStop1     0.182007403
bStop2     0.224963757
bSafety1   0.372804572
bSafety2   0.083005320


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
