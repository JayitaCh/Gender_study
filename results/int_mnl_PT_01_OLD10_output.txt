Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:08:26.985155
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -15.484214
     reciprocal of condition number         : 2.29027e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1222.57
Rho-squared vs equal shares                  :  0.2414 
Adj.Rho-squared vs equal shares              :  0.2346 
Rho-squared vs observed shares               :  0.1312 
Adj.Rho-squared vs observed shares           :  0.1248 
AIC                                         :  2467.15 
BIC                                         :  2525.35 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.64 
     pre-estimation                         :  00:00:0.33 
     estimation                             :  00:00:0.06 
     post-estimation                        :  00:00:0.25 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.070707    0.114253      0.6189    0.138465        0.5106
asc_others   -1.933023    0.243416     -7.9412    0.250780       -7.7080
bTInc        -0.012360  8.7477e-04    -14.1292    0.001055      -11.7126
bCost         0.008947    0.004045      2.2120    0.004924        1.8171
bCro          0.642352    0.073825      8.7010    0.069085        9.2979
bWaitEnv1     0.144593    0.100599      1.4373    0.100068        1.4449
bWaitEnv2     0.275879    0.094141      2.9305    0.104070        2.6509
bStop1        0.162699    0.059442      2.7371    0.063899        2.5462
bStop2        0.045936    0.047443      0.9682    0.043225        1.0627
bSafety1      0.377068    0.101090      3.7300    0.100712        3.7440
bSafety2      0.234058    0.114989      2.0355    0.103137        2.2694


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.013054    0.001701   3.333e-05 -3.2792e-04  1.3032e-04  6.6224e-04
asc_others    0.001701    0.059251  1.3803e-04  3.8460e-04    0.002266    0.004240
bTInc        3.333e-05  1.3803e-04   7.652e-07  -4.120e-07  -5.498e-06  -1.317e-05
bCost      -3.2792e-04  3.8460e-04  -4.120e-07   1.636e-05   1.716e-05   4.450e-05
bCro        1.3032e-04    0.002266  -5.498e-06   1.716e-05    0.005450 -2.6845e-04
bWaitEnv1   6.6224e-04    0.004240  -1.317e-05   4.450e-05 -2.6845e-04    0.010120
bWaitEnv2  -2.6498e-04    0.004413  -5.027e-07  -4.748e-05 -8.0930e-04    0.003285
bStop1      -7.026e-05    0.003159   3.559e-06   2.586e-05 -2.1587e-04  8.0948e-04
bStop2     -6.8402e-04    0.002819   2.626e-06   2.962e-05 -3.3730e-04  4.8927e-04
bSafety1    8.5723e-04    0.008913   7.929e-07   2.315e-05  3.1770e-04  2.8522e-04
bSafety2     -0.003229    0.009921  -5.933e-06  1.2195e-04 -3.0228e-04    0.001582
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -2.6498e-04  -7.026e-05 -6.8402e-04  8.5723e-04   -0.003229
asc_others    0.004413    0.003159    0.002819    0.008913    0.009921
bTInc       -5.027e-07   3.559e-06   2.626e-06   7.929e-07  -5.933e-06
bCost       -4.748e-05   2.586e-05   2.962e-05   2.315e-05  1.2195e-04
bCro       -8.0930e-04 -2.1587e-04 -3.3730e-04  3.1770e-04 -3.0228e-04
bWaitEnv1     0.003285  8.0948e-04  4.8927e-04  2.8522e-04    0.001582
bWaitEnv2     0.008863  -3.686e-05  3.7785e-04    0.003127    0.003231
bStop1      -3.686e-05    0.003533    0.001854 -3.8916e-04  5.2743e-04
bStop2      3.7785e-04    0.001854    0.002251   6.255e-05    0.001068
bSafety1      0.003127 -3.8916e-04   6.255e-05    0.010219    0.006317
bSafety2      0.003231  5.2743e-04    0.001068    0.006317    0.013222

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.019173    0.003143   4.225e-05 -5.0967e-04    0.002194    0.001178
asc_others    0.003143    0.062891  1.6834e-04  4.6887e-04    0.001522    0.005998
bTInc        4.225e-05  1.6834e-04   1.114e-06  -2.751e-07   4.666e-06  -1.807e-06
bCost      -5.0967e-04  4.6887e-04  -2.751e-07   2.424e-05  -3.886e-05   5.968e-05
bCro          0.002194    0.001522   4.666e-06  -3.886e-05    0.004773   -0.001111
bWaitEnv1     0.001178    0.005998  -1.807e-06   5.968e-05   -0.001111    0.010014
bWaitEnv2     0.001448    0.006372  -5.456e-06  -5.153e-05 -9.2598e-04    0.004679
bStop1       -0.001233    0.004037   3.369e-06   7.135e-05 -4.5093e-04  9.6688e-04
bStop2       -0.001283    0.003593   3.766e-06   5.379e-05 -3.9818e-04  6.1442e-04
bSafety1      0.001837    0.008753  -1.673e-05   6.386e-05 -4.5336e-04  9.3780e-04
bSafety2     -0.005144    0.009287  -1.514e-05  2.3708e-04   -0.001766    0.001272
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001448   -0.001233   -0.001283    0.001837   -0.005144
asc_others    0.006372    0.004037    0.003593    0.008753    0.009287
bTInc       -5.456e-06   3.369e-06   3.766e-06  -1.673e-05  -1.514e-05
bCost       -5.153e-05   7.135e-05   5.379e-05   6.386e-05  2.3708e-04
bCro       -9.2598e-04 -4.5093e-04 -3.9818e-04 -4.5336e-04   -0.001766
bWaitEnv1     0.004679  9.6688e-04  6.1442e-04  9.3780e-04    0.001272
bWaitEnv2     0.010831 -3.3468e-04  3.3368e-04    0.003838    0.003528
bStop1     -3.3468e-04    0.004083    0.001932 -1.0785e-04    0.001471
bStop2      3.3368e-04    0.001932    0.001868  3.2092e-04    0.001514
bSafety1      0.003838 -1.0785e-04  3.2092e-04    0.010143    0.004862
bSafety2      0.003528    0.001471    0.001514    0.004862    0.010637

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.06115    0.333504    -0.70962     0.01545     0.05762
asc_others     0.06115     1.00000    0.648230     0.39065     0.12612     0.17317
bTInc          0.33350     0.64823    1.000000    -0.11646    -0.08513    -0.14971
bCost         -0.70962     0.39065   -0.116456     1.00000     0.05746     0.10937
bCro           0.01545     0.12612   -0.085132     0.05746     1.00000    -0.03615
bWaitEnv1      0.05762     0.17317   -0.149713     0.10937    -0.03615     1.00000
bWaitEnv2     -0.02464     0.19256   -0.006105    -0.12469    -0.11645     0.34691
bStop1        -0.01035     0.21835    0.068442     0.10755    -0.04919     0.13537
bStop2        -0.12619     0.24411    0.063275     0.15435    -0.09630     0.10251
bSafety1       0.07422     0.36222    0.008966     0.05662     0.04257     0.02805
bSafety2      -0.24580     0.35446   -0.058985     0.26221    -0.03561     0.13677
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.024636   -0.010346    -0.12619    0.074220    -0.24580
asc_others    0.192561    0.218346     0.24411    0.362217     0.35446
bTInc        -0.006105    0.068442     0.06328    0.008966    -0.05898
bCost        -0.124694    0.107546     0.15435    0.056621     0.26221
bCro         -0.116446   -0.049191    -0.09630    0.042570    -0.03561
bWaitEnv1     0.346912    0.135369     0.10251    0.028046     0.13677
bWaitEnv2     1.000000   -0.006586     0.08460    0.328534     0.29847
bStop1       -0.006586    1.000000     0.65748   -0.064764     0.07716
bStop2        0.084599    0.657475     1.00000    0.013042     0.19583
bSafety1      0.328534   -0.064764     0.01304    1.000000     0.54347
bSafety2      0.298470    0.077165     0.19583    0.543473     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.09050     0.28918    -0.74760     0.22940     0.08499
asc_others     0.09050     1.00000     0.63610     0.37974     0.08786     0.23900
bTInc          0.28918     0.63610     1.00000    -0.05295     0.06400    -0.01711
bCost         -0.74760     0.37974    -0.05295     1.00000    -0.11423     0.12114
bCro           0.22940     0.08786     0.06400    -0.11423     1.00000    -0.16069
bWaitEnv1      0.08499     0.23900    -0.01711     0.12114    -0.16069     1.00000
bWaitEnv2      0.10049     0.24415    -0.04968    -0.10057    -0.12879     0.44933
bStop1        -0.13933     0.25193     0.04996     0.22680    -0.10215     0.15121
bStop2        -0.21442     0.33146     0.08256     0.25276    -0.13334     0.14205
bSafety1       0.13174     0.34655    -0.15744     0.12878    -0.06516     0.09305
bSafety2      -0.36023     0.35906    -0.13913     0.46688    -0.24792     0.12322
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.10049    -0.13933    -0.21442     0.13174     -0.3602
asc_others     0.24415     0.25193     0.33146     0.34655      0.3591
bTInc         -0.04968     0.04996     0.08256    -0.15744     -0.1391
bCost         -0.10057     0.22680     0.25276     0.12878      0.4669
bCro          -0.12879    -0.10215    -0.13334    -0.06516     -0.2479
bWaitEnv1      0.44933     0.15121     0.14205     0.09305      0.1232
bWaitEnv2      1.00000    -0.05033     0.07418     0.36617      0.3287
bStop1        -0.05033     1.00000     0.69933    -0.01676      0.2232
bStop2         0.07418     0.69933     1.00000     0.07372      0.3396
bSafety1       0.36617    -0.01676     0.07372     1.00000      0.4681
bSafety2       0.32868     0.22323     0.33956     0.46806      1.0000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 769          0.05915295
 227          0.06421962
 288          0.10951820
 437          0.11102985
 657          0.12839274
 341          0.13850150
 469          0.14157969
 717          0.14188174
 802          0.14679174
 134          0.15339465
 780          0.15816838
 494          0.16522343
 468          0.16788787
 559          0.17318174
 170          0.17467572
 986          0.17575808
 712          0.18098025
 460          0.18265344
 197          0.18505785
  46          0.18741120

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.070707    0.070707
asc_others       0.000   -1.933023   -1.933023
bTInc            0.000   -0.012360   -0.012360
bCost            0.000    0.008947    0.008947
bCro             0.000    0.642352    0.642352
bWaitEnv1        0.000    0.144593    0.144593
bWaitEnv2        0.000    0.275879    0.275879
bStop1           0.000    0.162699    0.162699
bStop2           0.000    0.045936    0.045936
bSafety1         0.000    0.377068    0.377068
bSafety2         0.000    0.234058    0.234058

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.070706609
asc_others 1.933022539
bTInc      0.012359801
bCost      0.008946673
bCro       0.642351664
bWaitEnv1  0.144592573
bWaitEnv2  0.275878601
bStop1     0.162698616
bStop2     0.045936177
bSafety1   0.377067803
bSafety2   0.234057805


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^2
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(relInc)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop2/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(relInc)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop2/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
