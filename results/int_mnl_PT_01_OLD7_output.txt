Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:06:58.436385
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -20.832879
     reciprocal of condition number         : 1.08128e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1233.81
Rho-squared vs equal shares                  :  0.2345 
Adj.Rho-squared vs equal shares              :  0.2276 
Rho-squared vs observed shares               :  0.1232 
Adj.Rho-squared vs observed shares           :  0.1168 
AIC                                         :  2489.61 
BIC                                         :  2547.81 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:1.08 
     pre-estimation                         :  00:00:0.64 
     estimation                             :  00:00:0.11 
     post-estimation                        :  00:00:0.33 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.390771    0.089939      4.3449    0.102746        3.8033
asc_others   -1.557689    0.201229     -7.7409    0.215884       -7.2154
bTInc        -0.005790  4.3230e-04    -13.3944  5.5865e-04      -10.3650
bCost         0.001048    0.002105      0.4981    0.002275        0.4609
bCro          0.614998    0.073299      8.3903    0.071163        8.6421
bWaitEnv1     0.062362    0.098890      0.6306    0.099940        0.6240
bWaitEnv2     0.279948    0.093646      2.9894    0.105627        2.6504
bStop1        0.174243    0.060835      2.8642    0.062596        2.7836
bStop2        0.019575    0.047441      0.4126    0.041961        0.4665
bSafety1      0.378791    0.100638      3.7639    0.100247        3.7786
bSafety2      0.151456    0.110679      1.3684    0.090657        1.6707


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.008089    0.006501   7.153e-06  -9.780e-05  5.8750e-04    0.001750
asc_others    0.006501    0.040493   5.988e-05   3.293e-05    0.002423    0.003926
bTInc        7.153e-06   5.988e-05   1.869e-07   7.159e-08  -1.616e-06  -4.586e-06
bCost       -9.780e-05   3.293e-05   7.159e-08   4.430e-06   2.321e-06  -3.349e-06
bCro        5.8750e-04    0.002423  -1.616e-06   2.321e-06    0.005373 -3.8386e-04
bWaitEnv1     0.001750    0.003926  -4.586e-06  -3.349e-06 -3.8386e-04    0.009779
bWaitEnv2  -4.7385e-04    0.005311  -8.466e-07  -3.166e-05 -8.3397e-04    0.003340
bStop1      5.4081e-04    0.002636   2.375e-06  -5.691e-07 -1.9817e-04  7.3467e-04
bStop2      1.9792e-04    0.002037   1.595e-06  -1.334e-05 -3.7582e-04  4.6962e-04
bSafety1      0.001302    0.008218   6.657e-07  -2.410e-06  2.7983e-04  2.4506e-04
bSafety2     -0.001231    0.007528  -4.433e-07   2.586e-05 -4.2889e-04    0.001098
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -4.7385e-04  5.4081e-04  1.9792e-04    0.001302   -0.001231
asc_others    0.005311    0.002636    0.002037    0.008218    0.007528
bTInc       -8.466e-07   2.375e-06   1.595e-06   6.657e-07  -4.433e-07
bCost       -3.166e-05  -5.691e-07  -1.334e-05  -2.410e-06   2.586e-05
bCro       -8.3397e-04 -1.9817e-04 -3.7582e-04  2.7983e-04 -4.2889e-04
bWaitEnv1     0.003340  7.3467e-04  4.6962e-04  2.4506e-04    0.001098
bWaitEnv2     0.008770   7.451e-06  5.7316e-04    0.003254    0.003324
bStop1       7.451e-06    0.003701    0.001805 -4.2281e-04  3.3540e-04
bStop2      5.7316e-04    0.001805    0.002251  1.0653e-04  8.1364e-04
bSafety1      0.003254 -4.2281e-04  1.0653e-04    0.010128    0.006147
bSafety2      0.003324  3.3540e-04  8.1364e-04    0.006147    0.012250

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.010557    0.009832   1.004e-05 -1.1669e-04    0.001011    0.002750
asc_others    0.009832    0.046606   7.596e-05   6.257e-05    0.003228    0.004466
bTInc        1.004e-05   7.596e-05   3.121e-07   2.207e-07   2.775e-06  -9.052e-07
bCost      -1.1669e-04   6.257e-05   2.207e-07   5.174e-06   2.753e-05  -2.852e-05
bCro          0.001011    0.003228   2.775e-06   2.753e-05    0.005064   -0.001029
bWaitEnv1     0.002750    0.004466  -9.052e-07  -2.852e-05   -0.001029    0.009988
bWaitEnv2     0.001597    0.006841  -3.948e-06  -5.405e-05   -0.001346    0.005036
bStop1        0.001287    0.002343   2.703e-06  -3.791e-05 -4.7441e-04  5.1909e-04
bStop2      7.4965e-04    0.001787   8.519e-07  -4.396e-05 -4.3079e-04  6.9171e-04
bSafety1      0.004350    0.008064  -6.892e-06  -4.261e-05 -3.5549e-04  9.1830e-04
bSafety2   -3.7690e-04    0.005416  -4.437e-06   1.053e-05   -0.001201  6.3793e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001597    0.001287  7.4965e-04    0.004350 -3.7690e-04
asc_others    0.006841    0.002343    0.001787    0.008064    0.005416
bTInc       -3.948e-06   2.703e-06   8.519e-07  -6.892e-06  -4.437e-06
bCost       -5.405e-05  -3.791e-05  -4.396e-05  -4.261e-05   1.053e-05
bCro         -0.001346 -4.7441e-04 -4.3079e-04 -3.5549e-04   -0.001201
bWaitEnv1     0.005036  5.1909e-04  6.9171e-04  9.1830e-04  6.3793e-04
bWaitEnv2     0.011157  1.2673e-04  8.3829e-04    0.004509    0.004088
bStop1      1.2673e-04    0.003918    0.001582 -3.4530e-04  4.0886e-04
bStop2      8.3829e-04    0.001582    0.001761  3.7617e-04  7.9430e-04
bSafety1      0.004509 -3.4530e-04  3.7617e-04    0.010049    0.004204
bSafety2      0.004088  4.0886e-04  7.9430e-04    0.004204    0.008219

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.35919    0.183982   -0.516617     0.08912     0.19676
asc_others     0.35919     1.00000    0.688297    0.077738     0.16430     0.19731
bTInc          0.18398     0.68830    1.000000    0.078681    -0.05101    -0.10727
bCost         -0.51662     0.07774    0.078681    1.000000     0.01504    -0.01609
bCro           0.08912     0.16430   -0.051005    0.015044     1.00000    -0.05296
bWaitEnv1      0.19676     0.19731   -0.107272   -0.016091    -0.05296     1.00000
bWaitEnv2     -0.05626     0.28184   -0.020913   -0.160610    -0.12150     0.36065
bStop1         0.09884     0.21535    0.090297   -0.004445    -0.04444     0.12212
bStop2         0.04639     0.21336    0.077751   -0.133565    -0.10808     0.10010
bSafety1       0.14385     0.40582    0.015301   -0.011377     0.03793     0.02462
bSafety2      -0.12363     0.33801   -0.009265    0.111013    -0.05287     0.10032
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.056261    0.098841     0.04639     0.14385   -0.123631
asc_others    0.281841    0.215348     0.21336     0.40582    0.338014
bTInc        -0.020913    0.090297     0.07775     0.01530   -0.009265
bCost        -0.160610   -0.004445    -0.13357    -0.01138    0.111013
bCro         -0.121496   -0.044441    -0.10808     0.03793   -0.052867
bWaitEnv1     0.360655    0.122118     0.10010     0.02462    0.100317
bWaitEnv2     1.000000    0.001308     0.12901     0.34529    0.320680
bStop1        0.001308    1.000000     0.62528    -0.06906    0.049813
bStop2        0.129014    0.625276     1.00000     0.02231    0.154959
bSafety1      0.345288   -0.069061     0.02231     1.00000    0.551839
bSafety2      0.320680    0.049813     0.15496     0.55184    1.000000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.4433     0.17495    -0.49929     0.13831     0.26779
asc_others     0.44325      1.0000     0.62980     0.12742     0.21012     0.20699
bTInc          0.17495      0.6298     1.00000     0.17371     0.06980    -0.01621
bCost         -0.49929      0.1274     0.17371     1.00000     0.17009    -0.12546
bCro           0.13831      0.2101     0.06980     0.17009     1.00000    -0.14465
bWaitEnv1      0.26779      0.2070    -0.01621    -0.12546    -0.14465     1.00000
bWaitEnv2      0.14719      0.3000    -0.06691    -0.22498    -0.17906     0.47709
bStop1         0.20006      0.1734     0.07729    -0.26629    -0.10650     0.08298
bStop2         0.17388      0.1972     0.03634    -0.46060    -0.14427     0.16494
bSafety1       0.42235      0.3726    -0.12307    -0.18688    -0.04983     0.09166
bSafety2      -0.04046      0.2767    -0.08762     0.05109    -0.18611     0.07041
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.14719     0.20006     0.17388     0.42235    -0.04046
asc_others     0.30002     0.17341     0.19724     0.37263     0.27675
bTInc         -0.06691     0.07729     0.03634    -0.12307    -0.08762
bCost         -0.22498    -0.26629    -0.46060    -0.18688     0.05109
bCro          -0.17906    -0.10650    -0.14427    -0.04983    -0.18611
bWaitEnv1      0.47709     0.08298     0.16494     0.09166     0.07041
bWaitEnv2      1.00000     0.01917     0.18913     0.42580     0.42695
bStop1         0.01917     1.00000     0.60234    -0.05503     0.07205
bStop2         0.18913     0.60234     1.00000     0.08943     0.20880
bSafety1       0.42580    -0.05503     0.08943     1.00000     0.46254
bSafety2       0.42695     0.07205     0.20880     0.46254     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 227          0.05874149
 769          0.06850965
 288          0.09887596
 437          0.11788756
 537          0.12121016
 341          0.12595152
 136          0.13290464
 657          0.14936475
 717          0.15323455
 712          0.16822872
 787          0.16903208
 780          0.17559975
  77          0.17583200
 134          0.17963415
 197          0.18355282
  46          0.18934947
 802          0.18967486
 469          0.19414425
  83          0.19545960
 122          0.19890187

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.390771    0.390771
asc_others       0.000   -1.557689   -1.557689
bTInc            0.000   -0.005790   -0.005790
bCost            0.000    0.001048    0.001048
bCro             0.000    0.614998    0.614998
bWaitEnv1        0.000    0.062362    0.062362
bWaitEnv2        0.000    0.279948    0.279948
bStop1           0.000    0.174243    0.174243
bStop2           0.000    0.019575    0.019575
bSafety1         0.000    0.378791    0.378791
bSafety2         0.000    0.151456    0.151456

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.390771275
asc_others 1.557688781
bTInc      0.005790407
bCost      0.001048442
bCro       0.614997877
bWaitEnv1  0.062362311
bWaitEnv2  0.279948462
bStop1     0.174242540
bStop2     0.019574979
bSafety1   0.378790562
bSafety2   0.151456491


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(1/relInc)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop2/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(1/relInc)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop2/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
