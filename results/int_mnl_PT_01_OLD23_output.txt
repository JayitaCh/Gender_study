Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:26:26.813243
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -19.823086
     reciprocal of condition number         : 1.00243e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1220.6
Rho-squared vs equal shares                  :  0.2426 
Adj.Rho-squared vs equal shares              :  0.2358 
Rho-squared vs observed shares               :  0.1326 
Adj.Rho-squared vs observed shares           :  0.1262 
AIC                                         :  2463.19 
BIC                                         :  2521.39 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.96 
     pre-estimation                         :  00:00:0.37 
     estimation                             :  00:00:0.11 
     post-estimation                        :  00:00:0.48 
Iterations                                  :  11  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.237470     0.11979      1.9823    0.143057        1.6600
asc_others   -1.611824     0.21046     -7.6587    0.236302       -6.8210
bTInc        -0.005971  4.3258e-04    -13.8033  5.5576e-04      -10.7439
bCost         0.014934     0.01012      1.4760    0.011879        1.2572
bCro          0.614521     0.07285      8.4354    0.071666        8.5747
bWaitEnv1     0.056917     0.09836      0.5787    0.098370        0.5786
bWaitEnv2     0.271854     0.09430      2.8828    0.106112        2.5620
bStop1        0.027809     0.01294      2.1496    0.013910        1.9992
bStop2        0.018606     0.01011      1.8413    0.008288        2.2449
bSafety1      0.407487     0.09994      4.0774    0.098542        4.1352
bSafety2      0.208297     0.11407      1.8261    0.095324        2.1852


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.014350    0.001317   3.994e-06 -9.3196e-04  4.0926e-04    0.001277
asc_others    0.001317    0.044292   6.362e-05  6.5829e-04    0.002765    0.003918
bTInc        3.994e-06   6.362e-05   1.871e-07   4.998e-07  -1.305e-06  -4.125e-06
bCost      -9.3196e-04  6.5829e-04   4.998e-07  1.0237e-04   2.560e-05   4.609e-05
bCro        4.0926e-04    0.002765  -1.305e-06   2.560e-05    0.005307 -3.7364e-04
bWaitEnv1     0.001277    0.003918  -4.125e-06   4.609e-05 -3.7364e-04    0.009674
bWaitEnv2     0.001041    0.003773  -1.082e-06 -2.3406e-04 -8.7300e-04    0.003171
bStop1      -8.283e-06  2.8078e-04   4.455e-07   7.389e-06  -1.969e-05   9.024e-05
bStop2       9.178e-06  2.3115e-04   3.139e-07  -6.871e-07  -3.356e-05   4.775e-05
bSafety1      0.001142    0.008593   1.080e-06   3.289e-05  3.1925e-04  3.1816e-04
bSafety2     -0.003524    0.009002   8.911e-07  3.2640e-04 -3.0349e-04    0.001196
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001041  -8.283e-06   9.178e-06    0.001142   -0.003524
asc_others    0.003773  2.8078e-04  2.3115e-04    0.008593    0.009002
bTInc       -1.082e-06   4.455e-07   3.139e-07   1.080e-06   8.911e-07
bCost      -2.3406e-04   7.389e-06  -6.871e-07   3.289e-05  3.2640e-04
bCro       -8.7300e-04  -1.969e-05  -3.356e-05  3.1925e-04 -3.0349e-04
bWaitEnv1     0.003171   9.024e-05   4.775e-05  3.1816e-04    0.001196
bWaitEnv2     0.008893  -3.007e-05   5.893e-05    0.002946    0.002503
bStop1      -3.007e-05  1.6736e-04   8.792e-05  -6.041e-05   3.605e-05
bStop2       5.893e-05   8.792e-05  1.0211e-04   3.409e-05  1.1580e-04
bSafety1      0.002946  -6.041e-05   3.409e-05    0.009988    0.006195
bSafety2      0.002503   3.605e-05  1.1580e-04    0.006195    0.013011

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.020465    0.001229   1.211e-07   -0.001330  2.5510e-04    0.002790
asc_others    0.001229    0.055838   8.893e-05    0.001119    0.004847    0.003395
bTInc        1.211e-07   8.893e-05   3.089e-07   1.588e-06   4.256e-06  -1.773e-06
bCost        -0.001330    0.001119   1.588e-06  1.4110e-04  1.7400e-04  -7.729e-05
bCro        2.5510e-04    0.004847   4.256e-06  1.7400e-04    0.005136 -9.0989e-04
bWaitEnv1     0.002790    0.003395  -1.773e-06  -7.729e-05 -9.0989e-04    0.009677
bWaitEnv2     0.004163    0.003493  -5.908e-06 -4.0559e-04   -0.001569    0.004895
bStop1      1.9838e-04   6.464e-05   5.998e-07  -2.251e-05  -5.082e-05  -3.410e-05
bStop2      2.3868e-04  1.3794e-04   2.951e-07  -2.599e-05  -4.825e-05   2.980e-05
bSafety1      0.005086    0.007945  -4.659e-06 -1.5276e-04 -2.2707e-04  9.4272e-04
bSafety2     -0.003822    0.007611   6.803e-07  3.9440e-04 -8.0584e-04  2.8814e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.004163  1.9838e-04  2.3868e-04    0.005086   -0.003822
asc_others    0.003493   6.464e-05  1.3794e-04    0.007945    0.007611
bTInc       -5.908e-06   5.998e-07   2.951e-07  -4.659e-06   6.803e-07
bCost      -4.0559e-04  -2.251e-05  -2.599e-05 -1.5276e-04  3.9440e-04
bCro         -0.001569  -5.082e-05  -4.825e-05 -2.2707e-04 -8.0584e-04
bWaitEnv1     0.004895  -3.410e-05   2.980e-05  9.4272e-04  2.8814e-04
bWaitEnv2     0.011260  -5.197e-05  1.2592e-04    0.004170    0.002469
bStop1      -5.197e-05  1.9350e-04   6.902e-05  -8.688e-05  -1.089e-05
bStop2      1.2592e-04   6.902e-05   6.869e-05  1.0097e-04   5.689e-05
bSafety1      0.004170  -8.688e-05  1.0097e-04    0.009710    0.003688
bSafety2      0.002469  -1.089e-05   5.689e-05    0.003688    0.009087

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000     0.05225     0.07707   -0.768932     0.04690     0.10836
asc_others    0.052248     1.00000     0.69878    0.309152     0.18034     0.18930
bTInc         0.077073     0.69878     1.00000    0.114195    -0.04141    -0.09695
bCost        -0.768932     0.30915     0.11419    1.000000     0.03474     0.04631
bCro          0.046896     0.18034    -0.04141    0.034735     1.00000    -0.05215
bWaitEnv1     0.108361     0.18930    -0.09695    0.046315    -0.05215     1.00000
bWaitEnv2     0.092192     0.19011    -0.02654   -0.245318    -0.12708     0.34192
bStop1       -0.005345     0.10313     0.07961    0.056451    -0.02089     0.07092
bStop2        0.007582     0.10869     0.07182   -0.006720    -0.04558     0.04805
bSafety1      0.095427     0.40855     0.02498    0.032524     0.04385     0.03237
bSafety2     -0.257920     0.37498     0.01806    0.282817    -0.03652     0.10663
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.09219   -0.005345    0.007582     0.09543    -0.25792
asc_others     0.19011    0.103128    0.108688     0.40855     0.37498
bTInc         -0.02654    0.079607    0.071818     0.02498     0.01806
bCost         -0.24532    0.056451   -0.006720     0.03252     0.28282
bCro          -0.12708   -0.020894   -0.045584     0.04385    -0.03652
bWaitEnv1      0.34192    0.070921    0.048046     0.03237     0.10663
bWaitEnv2      1.00000   -0.024652    0.061838     0.31260     0.23268
bStop1        -0.02465    1.000000    0.672541    -0.04672     0.02443
bStop2         0.06184    0.672541    1.000000     0.03375     0.10046
bSafety1       0.31260   -0.046724    0.033752     1.00000     0.54346
bSafety2       0.23268    0.024430    0.100463     0.54346     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000     0.03635    0.001524    -0.78251     0.02488     0.19824
asc_others    0.036353     1.00000    0.677187     0.39857     0.28619     0.14606
bTInc         0.001524     0.67719    1.000000     0.24058     0.10685    -0.03243
bCost        -0.782508     0.39857    0.240585     1.00000     0.20440    -0.06615
bCro          0.024882     0.28619    0.106854     0.20440     1.00000    -0.12906
bWaitEnv1     0.198244     0.14606   -0.032434    -0.06615    -0.12906     1.00000
bWaitEnv2     0.274215     0.13930   -0.100180    -0.32178    -0.20634     0.46892
bStop1        0.099692     0.01966    0.077582    -0.13622    -0.05098    -0.02492
bStop2        0.201302     0.07043    0.064068    -0.26403    -0.08122     0.03655
bSafety1      0.360759     0.34121   -0.085064    -0.13051    -0.03215     0.09725
bSafety2     -0.280306     0.33787    0.012842     0.34831    -0.11796     0.03073
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.27421    0.099692     0.20130     0.36076   -0.280306
asc_others     0.13930    0.019664     0.07043     0.34121    0.337874
bTInc         -0.10018    0.077582     0.06407    -0.08506    0.012842
bCost         -0.32178   -0.136220    -0.26403    -0.13051    0.348311
bCro          -0.20634   -0.050982    -0.08122    -0.03215   -0.117960
bWaitEnv1      0.46892   -0.024921     0.03655     0.09725    0.030728
bWaitEnv2      1.00000   -0.035211     0.14317     0.39876    0.244059
bStop1        -0.03521    1.000000     0.59864    -0.06338   -0.008210
bStop2         0.14317    0.598641     1.00000     0.12362    0.072011
bSafety1       0.39876   -0.063385     0.12362     1.00000    0.392668
bSafety2       0.24406   -0.008210     0.07201     0.39267    1.000000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 227          0.08892909
 288          0.09447192
 437          0.11506522
 341          0.11600588
 469          0.12394026
 769          0.12956657
  77          0.13817100
 537          0.14800187
 136          0.15843423
 486          0.15938589
 780          0.16877197
 657          0.17240971
 197          0.17475375
  83          0.17525307
 717          0.17936116
 200          0.18420198
 122          0.18486635
 433          0.18627320
 498          0.18907998
 601          0.19218440

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.237470    0.237470
asc_others       0.000   -1.611824   -1.611824
bTInc            0.000   -0.005971   -0.005971
bCost            0.000    0.014934    0.014934
bCro             0.000    0.614521    0.614521
bWaitEnv1        0.000    0.056917    0.056917
bWaitEnv2        0.000    0.271854    0.271854
bStop1           0.000    0.027809    0.027809
bStop2           0.000    0.018606    0.018606
bSafety1         0.000    0.407487    0.407487
bSafety2         0.000    0.208297    0.208297

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.23747000
asc_others 1.61182393
bTInc      0.00597103
bCost      0.01493383
bCro       0.61452051
bWaitEnv1  0.05691688
bWaitEnv2  0.27185391
bStop1     0.02780925
bStop2     0.01860601
bSafety1   0.40748738
bSafety2   0.20829675


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc**0.5)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/(relInc^2)*(saccstop_bus==1) + bStop2/(relInc^2)*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/(relInc^2)*(saccstop_metro ==1) + bStop2/(relInc^2)*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
