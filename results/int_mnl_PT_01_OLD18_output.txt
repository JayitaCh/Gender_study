Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:23:12.949399
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -20.754619
     reciprocal of condition number         : 1.10472e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1235.49
Rho-squared vs equal shares                  :  0.2334 
Adj.Rho-squared vs equal shares              :  0.2266 
Rho-squared vs observed shares               :  0.122 
Adj.Rho-squared vs observed shares           :  0.1156 
AIC                                         :  2492.97 
BIC                                         :  2551.17 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.8 
     pre-estimation                         :  00:00:0.37 
     estimation                             :  00:00:0.1 
     post-estimation                        :  00:00:0.33 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.415702    0.076958      5.4017    0.088060        4.7207
asc_others   -1.520944    0.201043     -7.5653    0.217150       -7.0041
bTInc        -0.005810  4.3769e-04    -13.2746  6.0588e-04       -9.5895
bCost         0.002676    0.004292      0.6235    0.004731        0.5657
bCro          0.595671    0.072883      8.1729    0.069885        8.5236
bWaitEnv1     0.066016    0.099343      0.6645    0.101200        0.6523
bWaitEnv2     0.299820    0.092646      3.2362    0.103345        2.9012
bStop1        0.180676    0.060579      2.9825    0.064612        2.7963
bStop2        0.055748    0.047768      1.1671    0.041784        1.3342
bSafety1      0.389232    0.100742      3.8637    0.100046        3.8905
bSafety2      0.152457    0.109775      1.3888    0.090672        1.6814


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.005922    0.007088   8.397e-06  -4.351e-06  6.3379e-04    0.001730
asc_others    0.007088    0.040418   5.700e-05  1.1249e-04    0.002461    0.004166
bTInc        8.397e-06   5.700e-05   1.916e-07  -2.952e-07  -1.315e-06  -4.885e-06
bCost       -4.351e-06  1.1249e-04  -2.952e-07   1.842e-05   3.067e-06   2.275e-05
bCro        6.3379e-04    0.002461  -1.315e-06   3.067e-06    0.005312 -3.9103e-04
bWaitEnv1     0.001730    0.004166  -4.885e-06   2.275e-05 -3.9103e-04    0.009869
bWaitEnv2    -0.001164    0.005655  -8.077e-07   2.488e-05 -8.2267e-04    0.003390
bStop1      5.2044e-04    0.002809   2.434e-06   1.481e-05 -2.0131e-04  7.7486e-04
bStop2      -9.082e-05    0.002468   1.523e-06   3.623e-05 -3.3164e-04  4.7701e-04
bSafety1      0.001266    0.008160   7.122e-08   1.412e-05  2.7109e-04  2.2662e-04
bSafety2   -6.4154e-04    0.007384  -9.187e-07   1.417e-05 -4.8255e-04    0.001131
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.001164  5.2044e-04  -9.082e-05    0.001266 -6.4154e-04
asc_others    0.005655    0.002809    0.002468    0.008160    0.007384
bTInc       -8.077e-07   2.434e-06   1.523e-06   7.122e-08  -9.187e-07
bCost        2.488e-05   1.481e-05   3.623e-05   1.412e-05   1.417e-05
bCro       -8.2267e-04 -2.0131e-04 -3.3164e-04  2.7109e-04 -4.8255e-04
bWaitEnv1     0.003390  7.7486e-04  4.7701e-04  2.2662e-04    0.001131
bWaitEnv2     0.008583   1.556e-05  5.3385e-04    0.003206    0.003500
bStop1       1.556e-05    0.003670    0.001834 -4.4051e-04  3.3465e-04
bStop2      5.3385e-04    0.001834    0.002282   9.868e-05  8.6761e-04
bSafety1      0.003206 -4.4051e-04   9.868e-05    0.010149    0.006126
bSafety2      0.003500  3.3465e-04  8.6761e-04    0.006126    0.012051

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007754    0.010967   1.486e-05  -1.904e-05    0.001631    0.002275
asc_others    0.010967    0.047154   8.222e-05   1.373e-05    0.002752    0.004872
bTInc        1.486e-05   8.222e-05   3.671e-07  -6.552e-07   4.447e-06  -1.981e-06
bCost       -1.904e-05   1.373e-05  -6.552e-07   2.239e-05  -6.365e-05   5.562e-05
bCro          0.001631    0.002752   4.447e-06  -6.365e-05    0.004884   -0.001090
bWaitEnv1     0.002275    0.004872  -1.981e-06   5.562e-05   -0.001090    0.010241
bWaitEnv2   3.3684e-04    0.006911  -5.612e-06   6.428e-05   -0.001141    0.005098
bStop1      3.9977e-04    0.003698   2.622e-06  1.1342e-04 -4.8193e-04  9.1248e-04
bStop2     -1.6501e-04    0.002841   1.299e-06   8.445e-05 -4.4333e-04  7.2534e-04
bSafety1      0.003212    0.007662  -1.187e-05   8.787e-05 -3.2481e-04  9.2682e-04
bSafety2   -1.8570e-04    0.004908  -7.764e-06   6.883e-05   -0.001486  8.1627e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   3.3684e-04  3.9977e-04 -1.6501e-04    0.003212 -1.8570e-04
asc_others    0.006911    0.003698    0.002841    0.007662    0.004908
bTInc       -5.612e-06   2.622e-06   1.299e-06  -1.187e-05  -7.764e-06
bCost        6.428e-05  1.1342e-04   8.445e-05   8.787e-05   6.883e-05
bCro         -0.001141 -4.8193e-04 -4.4333e-04 -3.2481e-04   -0.001486
bWaitEnv1     0.005098  9.1248e-04  7.2534e-04  9.2682e-04  8.1627e-04
bWaitEnv2     0.010680  -4.366e-05  5.7902e-04    0.004136    0.004164
bStop1      -4.366e-05    0.004175    0.001852 -2.0872e-04  8.1733e-04
bStop2      5.7902e-04    0.001852    0.001746  3.6893e-04    0.001089
bSafety1      0.004136 -2.0872e-04  3.6893e-04    0.010009    0.004356
bSafety2      0.004164  8.1733e-04    0.001089    0.004356    0.008221

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.4581    0.249286   -0.013173    0.112996     0.22622
asc_others     0.45811      1.0000    0.647722    0.130360    0.167957     0.20858
bTInc          0.24929      0.6477    1.000000   -0.157153   -0.041214    -0.11235
bCost         -0.01317      0.1304   -0.157153    1.000000    0.009803     0.05335
bCro           0.11300      0.1680   -0.041214    0.009803    1.000000    -0.05401
bWaitEnv1      0.22622      0.2086   -0.112353    0.053347   -0.054006     1.00000
bWaitEnv2     -0.16322      0.3036   -0.019919    0.062574   -0.121834     0.36832
bStop1         0.11164      0.2307    0.091785    0.056949   -0.045594     0.12876
bStop2        -0.02471      0.2570    0.072867    0.176696   -0.095258     0.10052
bSafety1       0.16330      0.4029    0.001615    0.032642    0.036921     0.02264
bSafety2      -0.07594      0.3346   -0.019121    0.030065   -0.060313     0.10376
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.163219    0.111636    -0.02471    0.163304    -0.07594
asc_others    0.303592    0.230663     0.25700    0.402913     0.33458
bTInc        -0.019919    0.091785     0.07287    0.001615    -0.01912
bCost         0.062574    0.056949     0.17670    0.032642     0.03006
bCro         -0.121834   -0.045594    -0.09526    0.036921    -0.06031
bWaitEnv1     0.368318    0.128756     0.10052    0.022644     0.10376
bWaitEnv2     1.000000    0.002773     0.12063    0.343517     0.34411
bStop1        0.002773    1.000000     0.63377   -0.072182     0.05032
bStop2        0.120630    0.633767     1.00000    0.020506     0.16546
bSafety1      0.343517   -0.072182     0.02051    1.000000     0.55396
bSafety2      0.344113    0.050322     0.16546    0.553958     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.57353     0.27851    -0.04569     0.26507     0.25523
asc_others     0.57353     1.00000     0.62494     0.01336     0.18137     0.22169
bTInc          0.27851     0.62494     1.00000    -0.22857     0.10502    -0.03232
bCost         -0.04569     0.01336    -0.22857     1.00000    -0.19249     0.11616
bCro           0.26507     0.18137     0.10502    -0.19249     1.00000    -0.15407
bWaitEnv1      0.25523     0.22169    -0.03232     0.11616    -0.15407     1.00000
bWaitEnv2      0.03701     0.30798    -0.08963     0.13146    -0.15802     0.48744
bStop1         0.07026     0.26360     0.06697     0.37102    -0.10673     0.13955
bStop2        -0.04485     0.31310     0.05133     0.42719    -0.15182     0.17153
bSafety1       0.36454     0.35267    -0.19581     0.18564    -0.04646     0.09154
bSafety2      -0.02326     0.24929    -0.14132     0.16045    -0.23454     0.08896
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.037013    0.070261    -0.04485     0.36454    -0.02326
asc_others    0.307978    0.263603     0.31310     0.35267     0.24929
bTInc        -0.089628    0.066967     0.05133    -0.19581    -0.14132
bCost         0.131462    0.371024     0.42719     0.18564     0.16045
bCro         -0.158019   -0.106729    -0.15182    -0.04646    -0.23454
bWaitEnv1     0.487441    0.139549     0.17153     0.09154     0.08896
bWaitEnv2     1.000000   -0.006539     0.13409     0.40004     0.44435
bStop1       -0.006539    1.000000     0.68599    -0.03229     0.13951
bStop2        0.134091    0.685993     1.00000     0.08826     0.28751
bSafety1      0.400041   -0.032289     0.08826     1.00000     0.48024
bSafety2      0.444347    0.139510     0.28751     0.48024     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 769          0.04083232
 227          0.05501641
 437          0.09093822
 288          0.10278595
 341          0.10916807
 469          0.12399851
 712          0.12791992
 657          0.13913575
 537          0.15358297
 780          0.15373102
 170          0.16941097
 717          0.16974571
 581          0.17192645
 221          0.17566621
 802          0.17907905
  83          0.18446921
 136          0.18752529
 134          0.18918473
 197          0.19088113
 559          0.19165867

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.415702    0.415702
asc_others       0.000   -1.520944   -1.520944
bTInc            0.000   -0.005810   -0.005810
bCost            0.000    0.002676    0.002676
bCro             0.000    0.595671    0.595671
bWaitEnv1        0.000    0.066016    0.066016
bWaitEnv2        0.000    0.299820    0.299820
bStop1           0.000    0.180676    0.180676
bStop2           0.000    0.055748    0.055748
bSafety1         0.000    0.389232    0.389232
bSafety2         0.000    0.152457    0.152457

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.415701955
asc_others 1.520943721
bTInc      0.005810126
bCost      0.002676390
bCro       0.595671228
bWaitEnv1  0.066015746
bWaitEnv2  0.299820283
bStop1     0.180675529
bStop2     0.055748206
bSafety1   0.389231918
bSafety2   0.152457270


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*log(relInc)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop2/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*log(relInc)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop2/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
