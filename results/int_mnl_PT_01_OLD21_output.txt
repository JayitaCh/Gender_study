Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:25:19.591063
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -15.956468
     reciprocal of condition number         : 8.57337e-07
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1223.01
Rho-squared vs equal shares                  :  0.2412 
Adj.Rho-squared vs equal shares              :  0.2343 
Rho-squared vs observed shares               :  0.1309 
Adj.Rho-squared vs observed shares           :  0.1245 
AIC                                         :  2468.01 
BIC                                         :  2526.21 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.85 
     pre-estimation                         :  00:00:0.37 
     estimation                             :  00:00:0.12 
     post-estimation                        :  00:00:0.35 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.108815    0.130852      0.8316    0.165016        0.6594
asc_others   -1.255589    0.228863     -5.4862    0.232002       -5.4120
bTInc        -0.005995  4.2004e-04    -14.2718  5.5592e-04      -10.7834
bCost         0.018534    0.005865      3.1600    0.007122        2.6025
bCro          0.631006    0.074196      8.5046    0.069384        9.0944
bWaitEnv1     0.090341    0.100153      0.9020    0.100853        0.8958
bWaitEnv2     0.191329    0.095989      1.9932    0.103684        1.8453
bStop1        0.268273    0.094948      2.8255    0.099743        2.6896
bStop2       -0.029284    0.078627     -0.3724    0.076985       -0.3804
bSafety1      0.390903    0.101734      3.8424    0.099812        3.9164
bSafety2      0.239856    0.119338      2.0099    0.111016        2.1606


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.017122   -0.005188   1.217e-05 -6.1913e-04  1.2976e-04  4.6830e-04
asc_others   -0.005188    0.052378   4.811e-05  6.5444e-04    0.002614    0.005962
bTInc        1.217e-05   4.811e-05   1.764e-07  -2.802e-07  -1.770e-06  -4.684e-06
bCost      -6.1913e-04  6.5444e-04  -2.802e-07   3.440e-05   2.728e-05   6.986e-05
bCro        1.2976e-04    0.002614  -1.770e-06   2.728e-05    0.005505 -3.5807e-04
bWaitEnv1   4.6830e-04    0.005962  -4.684e-06   6.986e-05 -3.5807e-04    0.010031
bWaitEnv2   6.5304e-04    0.004086   7.953e-07 -1.0774e-04 -9.1934e-04    0.003170
bStop1     -6.9737e-04    0.006810   1.196e-06   8.065e-05 -5.6143e-04    0.001459
bStop2       -0.001792    0.006159   1.447e-06   7.645e-05 -8.4710e-04    0.001023
bSafety1    4.8825e-04    0.008925  -3.077e-08   3.820e-05  3.3072e-04  3.9220e-04
bSafety2     -0.004966    0.012672  -2.738e-06  2.3393e-04 -2.9704e-04    0.001965
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   6.5304e-04 -6.9737e-04   -0.001792  4.8825e-04   -0.004966
asc_others    0.004086    0.006810    0.006159    0.008925    0.012672
bTInc        7.953e-07   1.196e-06   1.447e-06  -3.077e-08  -2.738e-06
bCost      -1.0774e-04   8.065e-05   7.645e-05   3.820e-05  2.3393e-04
bCro       -9.1934e-04 -5.6143e-04 -8.4710e-04  3.3072e-04 -2.9704e-04
bWaitEnv1     0.003170    0.001459    0.001023  3.9220e-04    0.001965
bWaitEnv2     0.009214 -1.7254e-04  8.2279e-04    0.003246    0.003140
bStop1     -1.7254e-04    0.009015    0.004794 -6.2060e-04    0.001498
bStop2      8.2279e-04    0.004794    0.006182  2.5349e-04    0.002398
bSafety1      0.003246 -6.2060e-04  2.5349e-04    0.010350    0.006553
bSafety2      0.003140    0.001498    0.002398    0.006553    0.014241

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.027230   -0.004817   1.884e-05 -9.9134e-04    0.001892  8.2886e-04
asc_others   -0.004817    0.053825   5.905e-05  7.4866e-04    0.001461    0.006997
bTInc        1.884e-05   5.905e-05   3.090e-07  -3.434e-07   2.112e-06  -7.938e-07
bCost      -9.9134e-04  7.4866e-04  -3.434e-07   5.072e-05  -2.907e-05   8.225e-05
bCro          0.001892    0.001461   2.112e-06  -2.907e-05    0.004814   -0.001011
bWaitEnv1   8.2886e-04    0.006997  -7.938e-07   8.225e-05   -0.001011    0.010171
bWaitEnv2     0.003234    0.005680  -2.318e-06 -1.4237e-04 -7.8243e-04    0.004602
bStop1       -0.001810    0.009213   3.148e-06  1.5655e-04   -0.001158    0.001894
bStop2       -0.002983    0.007519   2.704e-06  1.2499e-04 -9.8760e-04    0.001458
bSafety1      0.002155    0.008473  -8.760e-06   5.458e-05 -2.7378e-04  7.7686e-04
bSafety2     -0.008344    0.013109  -9.286e-06  4.2817e-04   -0.001525    0.001856
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.003234   -0.001810   -0.002983    0.002155   -0.008344
asc_others    0.005680    0.009213    0.007519    0.008473    0.013109
bTInc       -2.318e-06   3.148e-06   2.704e-06  -8.760e-06  -9.286e-06
bCost      -1.4237e-04  1.5655e-04  1.2499e-04   5.458e-05  4.2817e-04
bCro       -7.8243e-04   -0.001158 -9.8760e-04 -2.7378e-04   -0.001525
bWaitEnv1     0.004602    0.001894    0.001458  7.7686e-04    0.001856
bWaitEnv2     0.010750 -2.6472e-04  4.4661e-04    0.003705    0.003046
bStop1     -2.6472e-04    0.009949    0.005227 -2.5086e-04    0.003508
bStop2      4.4661e-04    0.005227    0.005927  1.7721e-04    0.003582
bSafety1      0.003705 -2.5086e-04  1.7721e-04    0.009962    0.004663
bSafety2      0.003046    0.003508    0.003582    0.004663    0.012324

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     -0.1732     0.22139    -0.80673     0.01337     0.03573
asc_others    -0.17324      1.0000     0.50046     0.48755     0.15396     0.26011
bTInc          0.22139      0.5005     1.00000    -0.11372    -0.05679    -0.11136
bCost         -0.80673      0.4875    -0.11372     1.00000     0.06268     0.11893
bCro           0.01337      0.1540    -0.05679     0.06268     1.00000    -0.04819
bWaitEnv1      0.03573      0.2601    -0.11136     0.11893    -0.04819     1.00000
bWaitEnv2      0.05199      0.1860     0.01972    -0.19138    -0.12909     0.32974
bStop1        -0.05613      0.3134     0.03000     0.14482    -0.07970     0.15344
bStop2        -0.17418      0.3423     0.04382     0.16578    -0.14520     0.12993
bSafety1       0.03668      0.3833 -7.1996e-04     0.06403     0.04381     0.03849
bSafety2      -0.31800      0.4640    -0.05462     0.33422    -0.03355     0.16441
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.05199    -0.05613    -0.17418     0.03668    -0.31800
asc_others     0.18598     0.31339     0.34225     0.38333     0.46398
bTInc          0.01972     0.03000     0.04382 -7.1996e-04    -0.05462
bCost         -0.19138     0.14482     0.16578     0.06403     0.33422
bCro          -0.12909    -0.07970    -0.14520     0.04381    -0.03355
bWaitEnv1      0.32974     0.15344     0.12993     0.03849     0.16441
bWaitEnv2      1.00000    -0.01893     0.10902     0.33239     0.27407
bStop1        -0.01893     1.00000     0.64219    -0.06425     0.13219
bStop2         0.10902     0.64219     1.00000     0.03169     0.25552
bSafety1       0.33239    -0.06425     0.03169     1.00000     0.53972
bSafety2       0.27407     0.13219     0.25552     0.53972     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000    -0.12582     0.20536    -0.84357     0.16524     0.04980
asc_others    -0.12582     1.00000     0.45787     0.45312     0.09075     0.29905
bTInc          0.20536     0.45787     1.00000    -0.08673     0.05475    -0.01416
bCost         -0.84357     0.45312    -0.08673     1.00000    -0.05884     0.11451
bCro           0.16524     0.09075     0.05475    -0.05884     1.00000    -0.14454
bWaitEnv1      0.04980     0.29905    -0.01416     0.11451    -0.14454     1.00000
bWaitEnv2      0.18900     0.23611    -0.04022    -0.19281    -0.10876     0.44014
bStop1        -0.10994     0.39814     0.05677     0.22040    -0.16735     0.18827
bStop2        -0.23483     0.42098     0.06317     0.22797    -0.18489     0.18772
bSafety1       0.13086     0.36591    -0.15787     0.07678    -0.03953     0.07717
bSafety2      -0.45545     0.50896    -0.15046     0.54158    -0.19795     0.16578
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.18900    -0.10994    -0.23483     0.13086     -0.4555
asc_others     0.23611     0.39814     0.42098     0.36591      0.5090
bTInc         -0.04022     0.05677     0.06317    -0.15787     -0.1505
bCost         -0.19281     0.22040     0.22797     0.07678      0.5416
bCro          -0.10876    -0.16735    -0.18489    -0.03953     -0.1980
bWaitEnv1      0.44014     0.18827     0.18772     0.07717      0.1658
bWaitEnv2      1.00000    -0.02560     0.05595     0.35805      0.2646
bStop1        -0.02560     1.00000     0.68075    -0.02520      0.3168
bStop2         0.05595     0.68075     1.00000     0.02306      0.4191
bSafety1       0.35805    -0.02520     0.02306     1.00000      0.4208
bSafety2       0.26464     0.31679     0.41909     0.42085      1.0000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 227          0.05696449
 769          0.07881961
 200          0.12442193
 288          0.13059058
 136          0.13116494
 341          0.13212411
  77          0.13441374
  46          0.13905377
 712          0.14879911
 559          0.15218458
 986          0.15325159
 134          0.15698030
  83          0.16566173
 717          0.16679573
 197          0.17171098
 122          0.17235973
 437          0.17269326
 486          0.18063531
 878          0.18578662
 537          0.18712032

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.108815    0.108815
asc_others       0.000   -1.255589   -1.255589
bTInc            0.000   -0.005995   -0.005995
bCost            0.000    0.018534    0.018534
bCro             0.000    0.631006    0.631006
bWaitEnv1        0.000    0.090341    0.090341
bWaitEnv2        0.000    0.191329    0.191329
bStop1           0.000    0.268273    0.268273
bStop2           0.000   -0.029284   -0.029284
bSafety1         0.000    0.390903    0.390903
bSafety2         0.000    0.239856    0.239856

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.108815218
asc_others 1.255589466
bTInc      0.005994705
bCost      0.018533812
bCro       0.631005886
bWaitEnv1  0.090341456
bWaitEnv2  0.191328546
bStop1     0.268272652
bStop2     0.029284004
bSafety1   0.390902600
bSafety2   0.239856016


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(relInc**0.5)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/(relInc^0.5)*(saccstop_bus==1) + bStop2/(relInc^0.5)*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/(relInc^0.5)*(saccstop_metro ==1) + bStop2/(relInc^0.5)*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
