Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_322025
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-02-06 14:34:02.836839
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -20.117122
     reciprocal of condition number         : 6.63765e-06
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1188.49
Rho-squared vs equal shares                  :  0.2943 
Adj.Rho-squared vs equal shares              :  0.2878 
Rho-squared vs observed shares               :  0.0546 
Adj.Rho-squared vs observed shares           :  0.0474 
AIC                                         :  2398.97 
BIC                                         :  2457.66 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.72 
     pre-estimation                         :  00:00:0.35 
     estimation                             :  00:00:0.09 
     post-estimation                        :  00:00:0.28 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.506448    0.085753       5.906    0.088703         5.709
asc_others   -2.213201    0.206140     -10.736    0.235195        -9.410
bTInc        -0.006002  7.7843e-04      -7.710  8.7460e-04        -6.862
bCost        -0.010874    0.002891      -3.761    0.002742        -3.966
bCro          0.177801    0.074875       2.375    0.081026         2.194
bWaitEnv1     0.147309    0.088415       1.666    0.093868         1.569
bWaitEnv2     0.387613    0.089406       4.335    0.096429         4.020
bStop1        0.459816    0.100541       4.573    0.100931         4.556
bStop2        0.263497    0.086726       3.038    0.091913         2.867
bSafety1      0.445049    0.090474       4.919    0.088758         5.014
bSafety2      0.312067    0.103439       3.017    0.094372         3.307


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007354    0.002960   1.264e-05 -1.4986e-04 -2.3856e-04    0.001183
asc_others    0.002960    0.042494   7.831e-05   8.868e-05 -2.5817e-04    0.004622
bTInc        1.264e-05   7.831e-05   6.060e-07   8.296e-09  -1.060e-05  -4.938e-06
bCost      -1.4986e-04   8.868e-05   8.296e-09   8.357e-06   8.174e-06   1.176e-05
bCro       -2.3856e-04 -2.5817e-04  -1.060e-05   8.174e-06    0.005606   -0.001029
bWaitEnv1     0.001183    0.004622  -4.938e-06   1.176e-05   -0.001029    0.007817
bWaitEnv2  -4.8219e-04    0.005278   1.192e-06  -4.222e-05 -9.0305e-04    0.003021
bStop1      3.1837e-04    0.005736  -5.449e-06   1.067e-05   -0.001360    0.001791
bStop2     -5.4441e-04    0.005504  -3.476e-06   8.129e-06   -0.001220    0.001078
bSafety1      0.001076    0.006390   6.373e-07  -5.796e-06  1.1579e-04  4.9791e-04
bSafety2     -0.001549    0.007714  -3.719e-06   4.742e-05 -6.5045e-04    0.001514
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -4.8219e-04  3.1837e-04 -5.4441e-04    0.001076   -0.001549
asc_others    0.005278    0.005736    0.005504    0.006390    0.007714
bTInc        1.192e-06  -5.449e-06  -3.476e-06   6.373e-07  -3.719e-06
bCost       -4.222e-05   1.067e-05   8.129e-06  -5.796e-06   4.742e-05
bCro       -9.0305e-04   -0.001360   -0.001220  1.1579e-04 -6.5045e-04
bWaitEnv1     0.003021    0.001791    0.001078  4.9791e-04    0.001514
bWaitEnv2     0.007993  4.6630e-04    0.001555    0.002657    0.003208
bStop1      4.6630e-04    0.010109    0.005949 -5.9377e-04    0.001746
bStop2        0.001555    0.005949    0.007521  1.0119e-04    0.002219
bSafety1      0.002657 -5.9377e-04  1.0119e-04    0.008186    0.005008
bSafety2      0.003208    0.001746    0.002219    0.005008    0.010700

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007868    0.005722   1.153e-05 -1.3362e-04   9.562e-06    0.002203
asc_others    0.005722    0.055317   9.451e-05  1.4236e-04   -0.005307    0.008705
bTInc        1.153e-05   9.451e-05   7.649e-07   2.827e-07  -1.457e-05  -6.080e-06
bCost      -1.3362e-04  1.4236e-04   2.827e-07   7.519e-06   3.933e-06   3.087e-06
bCro         9.562e-06   -0.005307  -1.457e-05   3.933e-06    0.006565   -0.001448
bWaitEnv1     0.002203    0.008705  -6.080e-06   3.087e-06   -0.001448    0.008811
bWaitEnv2   8.3459e-04    0.008509   1.523e-06  -4.363e-05   -0.001721    0.004754
bStop1        0.001970    0.007370  -1.180e-05  -5.072e-05   -0.002405    0.002692
bStop2      4.9715e-04    0.009613  -3.896e-06  -1.568e-05   -0.002956    0.002382
bSafety1      0.002902    0.008461   3.931e-06  -2.750e-05   -0.001225    0.002253
bSafety2   -5.1760e-04    0.007280  -3.826e-06   1.419e-05   -0.002234    0.002821
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   8.3459e-04    0.001970  4.9715e-04    0.002902 -5.1760e-04
asc_others    0.008509    0.007370    0.009613    0.008461    0.007280
bTInc        1.523e-06  -1.180e-05  -3.896e-06   3.931e-06  -3.826e-06
bCost       -4.363e-05  -5.072e-05  -1.568e-05  -2.750e-05   1.419e-05
bCro         -0.001721   -0.002405   -0.002956   -0.001225   -0.002234
bWaitEnv1     0.004754    0.002692    0.002382    0.002253    0.002821
bWaitEnv2     0.009298    0.001864    0.002890    0.003441    0.005027
bStop1        0.001864    0.010187    0.006991  4.8827e-04    0.002309
bStop2        0.002890    0.006991    0.008448    0.001405    0.003348
bSafety1      0.003441  4.8827e-04    0.001405    0.007878    0.003819
bSafety2      0.005027    0.002309    0.003348    0.003819    0.008906

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.16746    0.189340   -0.604501    -0.03716     0.15605
asc_others     0.16746     1.00000    0.488020    0.148813    -0.01673     0.25362
bTInc          0.18934     0.48802    1.000000    0.003687    -0.18193    -0.07174
bCost         -0.60450     0.14881    0.003687    1.000000     0.03776     0.04601
bCro          -0.03716    -0.01673   -0.181926    0.037764     1.00000    -0.15544
bWaitEnv1      0.15605     0.25362   -0.071743    0.046012    -0.15544     1.00000
bWaitEnv2     -0.06289     0.28639    0.017134   -0.163363    -0.13490     0.38217
bStop1         0.03693     0.27674   -0.069617    0.036709    -0.18064     0.20148
bStop2        -0.07320     0.30790   -0.051493    0.032424    -0.18785     0.14058
bSafety1       0.13872     0.34263    0.009050   -0.022159     0.01709     0.06224
bSafety2      -0.17461     0.36177   -0.046189    0.158586    -0.08398     0.16551
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     -0.06289     0.03693    -0.07320    0.138723    -0.17461
asc_others     0.28639     0.27674     0.30790    0.342628     0.36177
bTInc          0.01713    -0.06962    -0.05149    0.009050    -0.04619
bCost         -0.16336     0.03671     0.03242   -0.022159     0.15859
bCro          -0.13490    -0.18064    -0.18785    0.017093    -0.08398
bWaitEnv1      0.38217     0.20148     0.14058    0.062244     0.16551
bWaitEnv2      1.00000     0.05187     0.20057    0.328521     0.34694
bStop1         0.05187     1.00000     0.68224   -0.065276     0.16792
bStop2         0.20057     0.68224     1.00000    0.012896     0.24741
bSafety1       0.32852    -0.06528     0.01290    1.000000     0.53508
bSafety2       0.34694     0.16792     0.24741    0.535082     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000      0.2743     0.14869    -0.54937    0.001330     0.26463
asc_others    0.274254      1.0000     0.45944     0.22074   -0.278474     0.39430
bTInc         0.148685      0.4594     1.00000     0.11790   -0.205592    -0.07406
bCost        -0.549369      0.2207     0.11790     1.00000    0.017704     0.01199
bCro          0.001330     -0.2785    -0.20559     0.01770    1.000000    -0.19033
bWaitEnv1     0.264626      0.3943    -0.07406     0.01199   -0.190326     1.00000
bWaitEnv2     0.097572      0.3752     0.01806    -0.16499   -0.220215     0.52519
bStop1        0.220077      0.3105    -0.13369    -0.18327   -0.294070     0.28418
bStop2        0.060978      0.4447    -0.04847    -0.06223   -0.396922     0.27608
bSafety1      0.368616      0.4053     0.05064    -0.11299   -0.170294     0.27043
bSafety2     -0.061832      0.3280    -0.04635     0.05484   -0.292112     0.31841
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.09757     0.22008     0.06098     0.36862    -0.06183
asc_others     0.37520     0.31048     0.44469     0.40529     0.32801
bTInc          0.01806    -0.13369    -0.04847     0.05064    -0.04635
bCost         -0.16499    -0.18327    -0.06223    -0.11299     0.05484
bCro          -0.22022    -0.29407    -0.39692    -0.17029    -0.29211
bWaitEnv1      0.52519     0.28418     0.27608     0.27043     0.31841
bWaitEnv2      1.00000     0.19156     0.32604     0.40205     0.55244
bStop1         0.19156     1.00000     0.75359     0.05450     0.24239
bStop2         0.32604     0.75359     1.00000     0.17223     0.38597
bSafety1       0.40205     0.05450     0.17223     1.00000     0.45598
bSafety2       0.55244     0.24239     0.38597     0.45598     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.02330824
 164          0.06511178
 322          0.10246121
 502          0.10290251
 256          0.11040857
 868          0.13648826
  15          0.15655660
  11          0.16026026
 725          0.16094366
  23          0.16584228
 920          0.17313673
 979          0.17671478
 177          0.17689379
 224          0.17768324
 886          0.17951291
 501          0.18015665
 620          0.18131920
 580          0.18388479
 448          0.18438153
 539          0.18659278

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.506448    0.506448
asc_others       0.000   -2.213201   -2.213201
bTInc            0.000   -0.006002   -0.006002
bCost            0.000   -0.010874   -0.010874
bCro             0.000    0.177801    0.177801
bWaitEnv1        0.000    0.147309    0.147309
bWaitEnv2        0.000    0.387613    0.387613
bStop1           0.000    0.459816    0.459816
bStop2           0.000    0.263497    0.263497
bSafety1         0.000    0.445049    0.445049
bSafety2         0.000    0.312067    0.312067

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_322025"                                                                                                                       
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.506447952
asc_others 2.213201040
bTInc      0.006001838
bCost      0.010873899
bCro       0.177800515
bWaitEnv1  0.147308994
bWaitEnv2  0.387613310
bStop1     0.459816141
bStop2     0.263497430
bSafety1   0.445049451
bSafety2   0.312067432


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*relInc*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*relInc*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+
  #     mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
