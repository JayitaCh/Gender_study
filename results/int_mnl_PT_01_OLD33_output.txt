Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:33:53.415597
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -19.880617
     reciprocal of condition number         : 6.85902e-06
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1187.8
Rho-squared vs equal shares                  :  0.2947 
Adj.Rho-squared vs equal shares              :  0.2882 
Rho-squared vs observed shares               :  0.0551 
Adj.Rho-squared vs observed shares           :  0.0479 
AIC                                         :  2397.6 
BIC                                         :  2456.29 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:1.04 
     pre-estimation                         :  00:00:0.62 
     estimation                             :  00:00:0.1 
     post-estimation                        :  00:00:0.32 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.515473    0.086200       5.980    0.086579         5.954
asc_others   -2.242507    0.207619     -10.801    0.237931        -9.425
bTInc        -0.006232  8.0175e-04      -7.773  8.7693e-04        -7.107
bCost        -0.011362    0.002943      -3.860    0.002736        -4.152
bCro          0.178101    0.075369       2.363    0.081528         2.185
bWaitEnv1     0.150944    0.088527       1.705    0.094169         1.603
bWaitEnv2     0.381651    0.089039       4.286    0.095962         3.977
bStop1        0.449415    0.100497       4.472    0.100515         4.471
bStop2        0.260493    0.086720       3.004    0.091762         2.839
bSafety1      0.440448    0.090468       4.869    0.088631         4.969
bSafety2      0.299736    0.103474       2.897    0.094601         3.168


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007430    0.002833   1.235e-05 -1.5491e-04 -2.5018e-04    0.001156
asc_others    0.002833    0.043106   8.238e-05   9.645e-05 -2.7524e-04    0.004587
bTInc        1.235e-05   8.238e-05   6.428e-07   2.202e-08  -1.129e-05  -5.679e-06
bCost      -1.5491e-04   9.645e-05   2.202e-08   8.664e-06   8.101e-06   1.337e-05
bCro       -2.5018e-04 -2.7524e-04  -1.129e-05   8.101e-06    0.005681   -0.001006
bWaitEnv1     0.001156    0.004587  -5.679e-06   1.337e-05   -0.001006    0.007837
bWaitEnv2  -5.5075e-04    0.005323   1.641e-06  -3.825e-05 -8.8623e-04    0.003001
bStop1      2.9158e-04    0.005810  -5.420e-06   1.354e-05   -0.001357    0.001791
bStop2     -5.8108e-04    0.005519  -3.810e-06   1.036e-05   -0.001198    0.001086
bSafety1      0.001083    0.006418   1.109e-06  -5.705e-06  1.1023e-04  4.9005e-04
bSafety2     -0.001563    0.007904  -2.351e-06   5.018e-05 -6.6642e-04    0.001530
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -5.5075e-04  2.9158e-04 -5.8108e-04    0.001083   -0.001563
asc_others    0.005323    0.005810    0.005519    0.006418    0.007904
bTInc        1.641e-06  -5.420e-06  -3.810e-06   1.109e-06  -2.351e-06
bCost       -3.825e-05   1.354e-05   1.036e-05  -5.705e-06   5.018e-05
bCro       -8.8623e-04   -0.001357   -0.001198  1.1023e-04 -6.6642e-04
bWaitEnv1     0.003001    0.001791    0.001086  4.9005e-04    0.001530
bWaitEnv2     0.007928  4.4061e-04    0.001536    0.002639    0.003213
bStop1      4.4061e-04    0.010100    0.005942 -6.2137e-04    0.001722
bStop2        0.001536    0.005942    0.007520   8.737e-05    0.002209
bSafety1      0.002639 -6.2137e-04   8.737e-05    0.008184    0.005005
bSafety2      0.003213    0.001722    0.002209    0.005005    0.010707

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007496    0.005332   7.289e-06 -1.2631e-04  1.0321e-04    0.001968
asc_others    0.005332    0.056611   9.908e-05  1.5546e-04   -0.005117    0.008423
bTInc        7.289e-06   9.908e-05   7.690e-07   3.654e-07  -1.499e-05  -8.547e-06
bCost      -1.2631e-04  1.5546e-04   3.654e-07   7.488e-06   3.321e-06   1.507e-05
bCro        1.0321e-04   -0.005117  -1.499e-05   3.321e-06    0.006647   -0.001410
bWaitEnv1     0.001968    0.008423  -8.547e-06   1.507e-05   -0.001410    0.008868
bWaitEnv2   6.3407e-04    0.008429   1.229e-06  -3.580e-05   -0.001751    0.004690
bStop1        0.001809    0.007217  -1.365e-05  -4.553e-05   -0.002258    0.002709
bStop2      4.2879e-04    0.009563  -4.232e-06  -1.402e-05   -0.002923    0.002394
bSafety1      0.002828    0.008456   4.380e-06  -2.462e-05   -0.001262    0.002222
bSafety2   -5.2943e-04    0.007528  -1.415e-06   1.946e-05   -0.002267    0.002850
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   6.3407e-04    0.001809  4.2879e-04    0.002828 -5.2943e-04
asc_others    0.008429    0.007217    0.009563    0.008456    0.007528
bTInc        1.229e-06  -1.365e-05  -4.232e-06   4.380e-06  -1.415e-06
bCost       -3.580e-05  -4.553e-05  -1.402e-05  -2.462e-05   1.946e-05
bCro         -0.001751   -0.002258   -0.002923   -0.001262   -0.002267
bWaitEnv1     0.004690    0.002709    0.002394    0.002222    0.002850
bWaitEnv2     0.009209    0.001805    0.002883    0.003395    0.005022
bStop1        0.001805    0.010103    0.006940  4.2534e-04    0.002303
bStop2        0.002883    0.006940    0.008420    0.001364    0.003339
bSafety1      0.003395  4.2534e-04    0.001364    0.007856    0.003789
bSafety2      0.005022    0.002303    0.003339    0.003789    0.008949

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.15829    0.178706   -0.610553    -0.03851     0.15147
asc_others     0.15829     1.00000    0.494903    0.157831    -0.01759     0.24954
bTInc          0.17871     0.49490    1.000000    0.009331    -0.18677    -0.08001
bCost         -0.61055     0.15783    0.009331    1.000000     0.03652     0.05131
bCro          -0.03851    -0.01759   -0.186774    0.036518     1.00000    -0.15078
bWaitEnv1      0.15147     0.24954   -0.080007    0.051310    -0.15078     1.00000
bWaitEnv2     -0.07176     0.28795    0.022988   -0.145959    -0.13206     0.38076
bStop1         0.03366     0.27846   -0.067266    0.045759    -0.17916     0.20131
bStop2        -0.07773     0.30653   -0.054795    0.040597    -0.18327     0.14144
bSafety1       0.13884     0.34172    0.015291   -0.021423     0.01617     0.06119
bSafety2      -0.17525     0.36792   -0.028333    0.164747    -0.08545     0.16698
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     -0.07176     0.03366    -0.07773     0.13884    -0.17525
asc_others     0.28795     0.27846     0.30653     0.34172     0.36792
bTInc          0.02299    -0.06727    -0.05480     0.01529    -0.02833
bCost         -0.14596     0.04576     0.04060    -0.02142     0.16475
bCro          -0.13206    -0.17916    -0.18327     0.01617    -0.08545
bWaitEnv1      0.38076     0.20131     0.14144     0.06119     0.16698
bWaitEnv2      1.00000     0.04924     0.19890     0.32764     0.34872
bStop1         0.04924     1.00000     0.68176    -0.06834     0.16564
bStop2         0.19890     0.68176     1.00000     0.01114     0.24621
bSafety1       0.32764    -0.06834     0.01114     1.00000     0.53470
bSafety2       0.34872     0.16564     0.24621     0.53470     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.2588     0.09600    -0.53314     0.01462     0.24143
asc_others     0.25883      1.0000     0.47484     0.23877    -0.26380     0.37594
bTInc          0.09600      0.4748     1.00000     0.15228    -0.20967    -0.10350
bCost         -0.53314      0.2388     0.15228     1.00000     0.01489     0.05847
bCro           0.01462     -0.2638    -0.20967     0.01489     1.00000    -0.18364
bWaitEnv1      0.24143      0.3759    -0.10350     0.05847    -0.18364     1.00000
bWaitEnv2      0.07632      0.3692     0.01460    -0.13634    -0.22386     0.51903
bStop1         0.20787      0.3018    -0.15483    -0.16554    -0.27555     0.28618
bStop2         0.05397      0.4380    -0.05259    -0.05583    -0.39069     0.27701
bSafety1       0.36853      0.4010     0.05636    -0.10151    -0.17469     0.26622
bSafety2      -0.06464      0.3344    -0.01706     0.07516    -0.29392     0.31991
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.07632     0.20787     0.05397     0.36853    -0.06464
asc_others     0.36918     0.30178     0.43803     0.40100     0.33443
bTInc          0.01460    -0.15483    -0.05259     0.05636    -0.01706
bCost         -0.13634    -0.16554    -0.05583    -0.10151     0.07516
bCro          -0.22386    -0.27555    -0.39069    -0.17469    -0.29392
bWaitEnv1      0.51903     0.28618     0.27701     0.26622     0.31991
bWaitEnv2      1.00000     0.18711     0.32737     0.39916     0.55323
bStop1         0.18711     1.00000     0.75247     0.04774     0.24223
bStop2         0.32737     0.75247     1.00000     0.16771     0.38460
bSafety1       0.39916     0.04774     0.16771     1.00000     0.45195
bSafety2       0.55323     0.24223     0.38460     0.45195     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.02256535
 164          0.06693568
 256          0.11043608
 868          0.11684390
 322          0.11998464
 502          0.13284432
  15          0.14418500
 187          0.15148409
 888          0.15792625
 891          0.15969431
 886          0.16404999
 759          0.16720476
  23          0.16922315
 177          0.16984827
 539          0.17148359
 920          0.17590597
 620          0.17614039
 359          0.17661862
 725          0.17703609
 979          0.17905137

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.515473    0.515473
asc_others       0.000   -2.242507   -2.242507
bTInc            0.000   -0.006232   -0.006232
bCost            0.000   -0.011362   -0.011362
bCro             0.000    0.178101    0.178101
bWaitEnv1        0.000    0.150944    0.150944
bWaitEnv2        0.000    0.381651    0.381651
bStop1           0.000    0.449415    0.449415
bStop2           0.000    0.260493    0.260493
bSafety1         0.000    0.440448    0.440448
bSafety2         0.000    0.299736    0.299736

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.515473132
asc_others 2.242506537
bTInc      0.006232263
bCost      0.011361519
bCro       0.178100539
bWaitEnv1  0.150944451
bWaitEnv2  0.381650644
bStop1     0.449414903
bStop2     0.260493335
bSafety1   0.440448010
bSafety2   0.299736454


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*relInc*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*relInc*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
