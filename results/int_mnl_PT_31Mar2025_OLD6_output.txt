Model run by geojch using Apollo 0.3.5 on R 4.4.2 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_31Mar2025
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-04-19 11:21:08.881348
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -14.117088
     reciprocal of condition number         : 1.89884e-05
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1191.94
Rho-squared vs equal shares                  :  0.2923 
Adj.Rho-squared vs equal shares              :  0.2857 
Rho-squared vs observed shares               :  0.0518 
Adj.Rho-squared vs observed shares           :  0.0447 
AIC                                         :  2405.88 
BIC                                         :  2464.57 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.8 
     pre-estimation                         :  00:00:0.33 
     estimation                             :  00:00:0.12 
     post-estimation                        :  00:00:0.35 
Iterations                                  :  11  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.30506    0.100388       3.039    0.096062         3.176
asc_others    -2.76172    0.256683     -10.759    0.289718        -9.532
bTInc         -0.01630    0.002386      -6.831    0.002424        -6.722
bCost         -0.05269    0.015141      -3.480    0.013840        -3.807
bCro           0.15315    0.061470       2.491    0.065991         2.321
bWaitEnv1      0.22716    0.090142       2.520    0.095285         2.384
bWaitEnv2      0.39389    0.089323       4.410    0.096715         4.073
bStop1         0.51117    0.101642       5.029    0.101149         5.054
bStop2         0.31627    0.087674       3.607    0.091559         3.454
bSafety1       0.40388    0.090551       4.460    0.088921         4.542
bSafety2       0.35926    0.104040       3.453    0.093310         3.850


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro     0.010078    0.011108  1.2512e-04 -8.9508e-04 -9.8450e-04
asc_others    0.011108    0.065886  4.4049e-04  1.2920e-04   -0.002408
bTInc       1.2512e-04  4.4049e-04   5.691e-06  -3.772e-06  -4.188e-05
bCost      -8.9508e-04  1.2920e-04  -3.772e-06  2.2925e-04   4.610e-05
bCro       -9.8450e-04   -0.002408  -4.188e-05   4.610e-05    0.003779
bWaitEnv1   3.2376e-04    0.001983  -4.331e-05   9.675e-05 -5.8886e-04
bWaitEnv2  -3.8255e-04    0.005754   6.297e-06 -2.0779e-04 -4.9462e-04
bStop1     -5.0940e-04    0.003486  -3.982e-05  1.1124e-04 -8.1342e-04
bStop2       -0.001218    0.003587  -3.183e-05   8.964e-05 -6.6631e-04
bSafety1      0.001392    0.007474   1.537e-05  -4.159e-05  -2.658e-05
bSafety2     -0.002219    0.005754  -2.980e-05  2.7907e-04 -2.6552e-04
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro   3.2376e-04 -3.8255e-04 -5.0940e-04   -0.001218    0.001392
asc_others    0.001983    0.005754    0.003486    0.003587    0.007474
bTInc       -4.331e-05   6.297e-06  -3.982e-05  -3.183e-05   1.537e-05
bCost        9.675e-05 -2.0779e-04  1.1124e-04   8.964e-05  -4.159e-05
bCro       -5.8886e-04 -4.9462e-04 -8.1342e-04 -6.6631e-04  -2.658e-05
bWaitEnv1     0.008126    0.002981    0.002038    0.001281  3.9875e-04
bWaitEnv2     0.002981    0.007979  3.2431e-04    0.001409    0.002686
bStop1        0.002038  3.2431e-04    0.010331    0.006142 -6.9090e-04
bStop2        0.001281    0.001409    0.006142    0.007687   4.102e-06
bSafety1    3.9875e-04    0.002686 -6.9090e-04   4.102e-06    0.008200
bSafety2      0.001761    0.003179    0.001917    0.002310    0.004902
              bSafety2
asc_metro    -0.002219
asc_others    0.005754
bTInc       -2.980e-05
bCost       2.7907e-04
bCro       -2.6552e-04
bWaitEnv1     0.001761
bWaitEnv2     0.003179
bStop1        0.001917
bStop2        0.002310
bSafety1      0.004902
bSafety2      0.010824

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro     0.009228    0.013087   9.389e-05 -6.2322e-04 -8.0828e-04
asc_others    0.013087    0.083937  5.0135e-04  7.7616e-04   -0.007872
bTInc        9.389e-05  5.0135e-04   5.877e-06   4.464e-06  -5.400e-05
bCost      -6.2322e-04  7.7616e-04   4.464e-06  1.9155e-04  -3.026e-05
bCro       -8.0828e-04   -0.007872  -5.400e-05  -3.026e-05    0.004355
bWaitEnv1     0.001792    0.006928  -3.034e-05   3.838e-05   -0.001087
bWaitEnv2     0.001251    0.010153   2.313e-05 -1.9832e-04   -0.001393
bStop1        0.001651    0.006130  -3.385e-05 -2.2823e-04   -0.001509
bStop2      7.1335e-04    0.009605  -5.600e-06 -1.0052e-04   -0.002172
bSafety1      0.003276    0.010344   2.847e-05 -1.3123e-04   -0.001301
bSafety2   -4.8622e-04    0.006760  -4.707e-06   6.600e-05   -0.001787
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro     0.001792    0.001251    0.001651  7.1335e-04    0.003276
asc_others    0.006928    0.010153    0.006130    0.009605    0.010344
bTInc       -3.034e-05   2.313e-05  -3.385e-05  -5.600e-06   2.847e-05
bCost        3.838e-05 -1.9832e-04 -2.2823e-04 -1.0052e-04 -1.3123e-04
bCro         -0.001087   -0.001393   -0.001509   -0.002172   -0.001301
bWaitEnv1     0.009079    0.004693    0.002857    0.002368    0.002098
bWaitEnv2     0.004693    0.009354    0.001551    0.002698    0.003475
bStop1        0.002857    0.001551    0.010231    0.006935  2.8107e-04
bStop2        0.002368    0.002698    0.006935    0.008383    0.001268
bSafety1      0.002098    0.003475  2.8107e-04    0.001268    0.007907
bSafety2      0.002891    0.004914    0.002257    0.003081    0.003693
              bSafety2
asc_metro  -4.8622e-04
asc_others    0.006760
bTInc       -4.707e-06
bCost        6.600e-05
bCro         -0.001787
bWaitEnv1     0.002891
bWaitEnv2     0.004914
bStop1        0.002257
bStop2        0.003081
bSafety1      0.003693
bSafety2      0.008707

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro      1.00000     0.43107     0.52246    -0.58888   -0.159540
asc_others     0.43107     1.00000     0.71938     0.03324   -0.152593
bTInc          0.52246     0.71938     1.00000    -0.10443   -0.285579
bCost         -0.58888     0.03324    -0.10443     1.00000    0.049529
bCro          -0.15954    -0.15259    -0.28558     0.04953    1.000000
bWaitEnv1      0.03578     0.08570    -0.20142     0.07089   -0.106272
bWaitEnv2     -0.04266     0.25097     0.02955    -0.15364   -0.090082
bStop1        -0.04992     0.13362    -0.16422     0.07228   -0.130189
bStop2        -0.13834     0.15940    -0.15217     0.06753   -0.123633
bSafety1       0.15309     0.32157     0.07117    -0.03033   -0.004776
bSafety2      -0.21248     0.21545    -0.12008     0.17716   -0.041518
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro      0.03578    -0.04266    -0.04992    -0.13834    0.153087
asc_others     0.08570     0.25097     0.13362     0.15940    0.321571
bTInc         -0.20142     0.02955    -0.16422    -0.15217    0.071166
bCost          0.07089    -0.15364     0.07228     0.06753   -0.030334
bCro          -0.10627    -0.09008    -0.13019    -0.12363   -0.004776
bWaitEnv1      1.00000     0.37025     0.22249     0.16205    0.048851
bWaitEnv2      0.37025     1.00000     0.03572     0.17998    0.332076
bStop1         0.22249     0.03572     1.00000     0.68920   -0.075067
bStop2         0.16205     0.17998     0.68920     1.00000  5.1673e-04
bSafety1       0.04885     0.33208    -0.07507  5.1673e-04    1.000000
bSafety2       0.18774     0.34211     0.18132     0.25321    0.520282
              bSafety2
asc_metro     -0.21248
asc_others     0.21545
bTInc         -0.12008
bCost          0.17716
bCro          -0.04152
bWaitEnv1      0.18774
bWaitEnv2      0.34211
bStop1         0.18132
bStop2         0.25321
bSafety1       0.52028
bSafety2       1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro      1.00000      0.4702     0.40316    -0.46876    -0.12750
asc_others     0.47022      1.0000     0.71383     0.19357    -0.41172
bTInc          0.40316      0.7138     1.00000     0.13306    -0.33757
bCost         -0.46876      0.1936     0.13306     1.00000    -0.03313
bCro          -0.12750     -0.4117    -0.33757    -0.03313     1.00000
bWaitEnv1      0.19576      0.2510    -0.13136     0.02910    -0.17281
bWaitEnv2      0.13464      0.3623     0.09867    -0.14816    -0.21830
bStop1         0.16994      0.2092    -0.13805    -0.16303    -0.22599
bStop2         0.08111      0.3621    -0.02523    -0.07932    -0.35942
bSafety1       0.38356      0.4015     0.13208    -0.10663    -0.22176
bSafety2      -0.05424      0.2500    -0.02081     0.05110    -0.29026
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro      0.19576     0.13464     0.16994     0.08111     0.38356
asc_others     0.25098     0.36234     0.20919     0.36211     0.40153
bTInc         -0.13136     0.09867    -0.13805    -0.02523     0.13208
bCost          0.02910    -0.14816    -0.16303    -0.07932    -0.10663
bCro          -0.17281    -0.21830    -0.22599    -0.35942    -0.22176
bWaitEnv1      1.00000     0.50927     0.29647     0.27148     0.24763
bWaitEnv2      0.50927     1.00000     0.15856     0.30472     0.40411
bStop1         0.29647     0.15856     1.00000     0.74879     0.03125
bStop2         0.27148     0.30472     0.74879     1.00000     0.15578
bSafety1       0.24763     0.40411     0.03125     0.15578     1.00000
bSafety2       0.32513     0.54448     0.23913     0.36064     0.44505
              bSafety2
asc_metro     -0.05424
asc_others     0.25005
bTInc         -0.02081
bCost          0.05110
bCro          -0.29026
bWaitEnv1      0.32513
bWaitEnv2      0.54448
bStop1         0.23913
bStop2         0.36064
bSafety1       0.44505
bSafety2       1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.03697519
 164          0.06331046
 256          0.10797357
 502          0.11612711
  15          0.12766612
 322          0.13507176
 868          0.14171940
 224          0.16072643
 448          0.16114161
 979          0.16155191
 725          0.16305025
  23          0.16307019
 888          0.16603139
 580          0.16843564
  11          0.17111102
 920          0.17119407
 501          0.17235524
 359          0.17236610
 177          0.17291241
 620          0.17353462

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.30506     0.30506
asc_others       0.000    -2.76172    -2.76172
bTInc            0.000    -0.01630    -0.01630
bCost            0.000    -0.05269    -0.05269
bCro             0.000     0.15315     0.15315
bWaitEnv1        0.000     0.22716     0.22716
bWaitEnv2        0.000     0.39389     0.39389
bStop1           0.000     0.51117     0.51117
bStop2           0.000     0.31627     0.31627
bSafety1         0.000     0.40388     0.40388
bSafety2         0.000     0.35926     0.35926

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_31Mar2025"                                                                                                                    
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.30505923
asc_others 2.76172005
bTInc      0.01629577
bCost      0.05269186
bCro       0.15314621
bWaitEnv1  0.22715733
bWaitEnv2  0.39389498
bStop1     0.51117302
bStop2     0.31627335
bSafety1   0.40388307
bSafety2   0.35926245


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*relInc*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*relInc*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ## Final formulation
  V = list(
    bus = asc_bus + bTInc*relInc*t_bus + bCost*(0.1/relInc)*tc_bus+bCro*(relInc**2)*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*relInc*t_metro + bCost*(0.1/relInc)*tc_metro+ bCro*(relInc**2)*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+
  #     mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
