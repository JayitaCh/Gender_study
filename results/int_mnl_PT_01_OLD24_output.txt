Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:27:04.075862
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -18.0809
     reciprocal of condition number         : 9.2315e-07
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1220.54
Rho-squared vs equal shares                  :  0.2427 
Adj.Rho-squared vs equal shares              :  0.2359 
Rho-squared vs observed shares               :  0.1327 
Adj.Rho-squared vs observed shares           :  0.1263 
AIC                                         :  2463.07 
BIC                                         :  2521.27 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.95 
     pre-estimation                         :  00:00:0.56 
     estimation                             :  00:00:0.07 
     post-estimation                        :  00:00:0.31 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.312460     0.11949      2.6150     0.13944        2.2408
asc_others   -1.614744     0.21629     -7.4657     0.23377       -6.9074
bTInc        -0.005919  4.2924e-04    -13.7890  5.4008e-04      -10.9591
bCost         0.015691     0.01001      1.5683     0.01122        1.3990
bCro          0.644188     0.07438      8.6610     0.07099        9.0738
bWaitEnv1     0.062537     0.09914      0.6308     0.09942        0.6290
bWaitEnv2     0.200658     0.09626      2.0846     0.10241        1.9593
bStop1        0.196912     0.10830      1.8182     0.11246        1.7510
bStop2       -0.200429     0.09280     -2.1599     0.09289       -2.1578
bSafety1      0.375239     0.10045      3.7357     0.09692        3.8715
bSafety2      0.144147     0.11597      1.2430     0.09959        1.4475


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.014277  1.0424e-04   2.338e-06 -9.0815e-04  4.2210e-04    0.001201
asc_others  1.0424e-04    0.046781   5.871e-05  7.2434e-04    0.002097    0.004534
bTInc        2.338e-06   5.871e-05   1.842e-07   6.144e-07  -1.289e-06  -5.277e-06
bCost      -9.0815e-04  7.2434e-04   6.144e-07  1.0011e-04   2.564e-05   4.404e-05
bCro        4.2210e-04    0.002097  -1.289e-06   2.564e-05    0.005532 -4.3165e-04
bWaitEnv1     0.001201    0.004534  -5.277e-06   4.404e-05 -4.3165e-04    0.009829
bWaitEnv2   6.5056e-04    0.004395  -1.912e-06 -2.2006e-04 -8.8725e-04    0.003210
bStop1      -4.320e-05    0.006137  -3.519e-06   6.748e-05 -9.0735e-04    0.001516
bStop2       -0.001258    0.005473  -1.821e-06   3.365e-05   -0.001255    0.001059
bSafety1      0.001063    0.008193   8.708e-07   1.516e-05  2.7944e-04  3.2495e-04
bSafety2     -0.003583    0.010467   1.326e-07  3.1046e-04 -4.3191e-04    0.001597
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   6.5056e-04  -4.320e-05   -0.001258    0.001063   -0.003583
asc_others    0.004395    0.006137    0.005473    0.008193    0.010467
bTInc       -1.912e-06  -3.519e-06  -1.821e-06   8.708e-07   1.326e-07
bCost      -2.2006e-04   6.748e-05   3.365e-05   1.516e-05  3.1046e-04
bCro       -8.8725e-04 -9.0735e-04   -0.001255  2.7944e-04 -4.3191e-04
bWaitEnv1     0.003210    0.001516    0.001059  3.2495e-04    0.001597
bWaitEnv2     0.009266  -2.315e-05    0.001315    0.003249    0.003151
bStop1      -2.315e-05    0.011729    0.006365 -8.2471e-04    0.001654
bStop2        0.001315    0.006365    0.008611   4.082e-05    0.002364
bSafety1      0.003249 -8.2471e-04   4.082e-05    0.010090    0.006136
bSafety2      0.003151    0.001654    0.002364    0.006136    0.013449

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.019444    0.001155  -1.803e-06   -0.001168  3.4869e-04    0.002477
asc_others    0.001155    0.054649   7.490e-05    0.001086    0.003684    0.004278
bTInc       -1.803e-06   7.490e-05   2.917e-07   1.725e-06   3.863e-06  -3.495e-06
bCost        -0.001168    0.001086   1.725e-06  1.2580e-04  1.4871e-04  -4.096e-05
bCro        3.4869e-04    0.003684   3.863e-06  1.4871e-04    0.005040 -8.7170e-04
bWaitEnv1     0.002477    0.004278  -3.495e-06  -4.096e-05 -8.7170e-04    0.009883
bWaitEnv2     0.003522    0.004219  -6.006e-06 -3.2979e-04   -0.001096    0.004557
bStop1        0.001532    0.005456  -7.596e-06  -6.237e-05   -0.001708    0.001994
bStop2       -0.001496    0.004522  -4.182e-06  -2.300e-05   -0.001377    0.001349
bSafety1      0.005330    0.006168  -6.256e-06 -1.9290e-04  -8.557e-05  3.7110e-04
bSafety2     -0.003658    0.009053  -3.523e-06  3.4743e-04   -0.001117  7.5913e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.003522    0.001532   -0.001496    0.005330   -0.003658
asc_others    0.004219    0.005456    0.004522    0.006168    0.009053
bTInc       -6.006e-06  -7.596e-06  -4.182e-06  -6.256e-06  -3.523e-06
bCost      -3.2979e-04  -6.237e-05  -2.300e-05 -1.9290e-04  3.4743e-04
bCro         -0.001096   -0.001708   -0.001377  -8.557e-05   -0.001117
bWaitEnv1     0.004557    0.001994    0.001349  3.7110e-04  7.5913e-04
bWaitEnv2     0.010489  2.7335e-04  4.0555e-04    0.003703    0.003043
bStop1      2.7335e-04    0.012647    0.007048 -9.8927e-04    0.003518
bStop2      4.0555e-04    0.007048    0.008628   -0.001001    0.003422
bSafety1      0.003703 -9.8927e-04   -0.001001    0.009394    0.003015
bSafety2      0.003043    0.003518    0.003422    0.003015    0.009917

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000    0.004034    0.045591    -0.75963     0.04750     0.10139
asc_others    0.004034    1.000000    0.632417     0.33471     0.13032     0.21146
bTInc         0.045591    0.632417    1.000000     0.14306    -0.04036    -0.12400
bCost        -0.759629    0.334710    0.143057     1.00000     0.03446     0.04440
bCro          0.047496    0.130325   -0.040360     0.03446     1.00000    -0.05854
bWaitEnv1     0.101391    0.211459   -0.123999     0.04440    -0.05854     1.00000
bWaitEnv2     0.056563    0.211118   -0.046276    -0.22849    -0.12393     0.33632
bStop1       -0.003339    0.261985   -0.075690     0.06227    -0.11264     0.14120
bStop2       -0.113471    0.272664   -0.045713     0.03625    -0.18183     0.11512
bSafety1      0.088592    0.377102    0.020198     0.01509     0.03740     0.03263
bSafety2     -0.258596    0.417291    0.002665     0.26756    -0.05007     0.13889
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.056563   -0.003339   -0.113471    0.088592   -0.258596
asc_others    0.211118    0.261985    0.272664    0.377102    0.417291
bTInc        -0.046276   -0.075690   -0.045713    0.020198    0.002665
bCost        -0.228492    0.062272    0.036247    0.015088    0.267561
bCro         -0.123927   -0.112640   -0.181828    0.037403   -0.050074
bWaitEnv1     0.336316    0.141201    0.115121    0.032630    0.138893
bWaitEnv2     1.000000   -0.002220    0.147209    0.336074    0.282316
bStop1       -0.002220    1.000000    0.633374   -0.075810    0.131695
bStop2        0.147209    0.633374    1.000000    0.004380    0.219688
bSafety1      0.336074   -0.075810    0.004380    1.000000    0.526755
bSafety2      0.282316    0.131695    0.219688    0.526755    1.000000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.03543    -0.02394    -0.74653     0.03522     0.17868
asc_others     0.03543     1.00000     0.59321     0.41418     0.22200     0.18409
bTInc         -0.02394     0.59321     1.00000     0.28470     0.10075    -0.06510
bCost         -0.74653     0.41418     0.28470     1.00000     0.18676    -0.03674
bCro           0.03522     0.22200     0.10075     0.18676     1.00000    -0.12351
bWaitEnv1      0.17868     0.18409    -0.06510    -0.03674    -0.12351     1.00000
bWaitEnv2      0.24661     0.17624    -0.10858    -0.28711    -0.15077     0.44754
bStop1         0.09771     0.20752    -0.12506    -0.04945    -0.21388     0.17832
bStop2        -0.11550     0.20825    -0.08337    -0.02208    -0.20877     0.14609
bSafety1       0.39440     0.27223    -0.11951    -0.17744    -0.01243     0.03851
bSafety2      -0.26343     0.38889    -0.06550     0.31106    -0.15800     0.07668
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.24661     0.09771    -0.11550     0.39440    -0.26343
asc_others     0.17624     0.20752     0.20825     0.27223     0.38889
bTInc         -0.10858    -0.12506    -0.08337    -0.11951    -0.06550
bCost         -0.28711    -0.04945    -0.02208    -0.17744     0.31106
bCro          -0.15077    -0.21388    -0.20877    -0.01243    -0.15800
bWaitEnv1      0.44754     0.17832     0.14609     0.03851     0.07668
bWaitEnv2      1.00000     0.02373     0.04263     0.37308     0.29833
bStop1         0.02373     1.00000     0.67469    -0.09076     0.31409
bStop2         0.04263     0.67469     1.00000    -0.11121     0.36991
bSafety1       0.37308    -0.09076    -0.11121     1.00000     0.31237
bSafety2       0.29833     0.31409     0.36991     0.31237     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 769          0.07308765
 288          0.10535652
 227          0.10860926
 717          0.11720689
 341          0.11809652
 437          0.14052849
 136          0.14214865
 537          0.14605081
 134          0.14954023
 657          0.15238104
 468          0.15734578
 780          0.15763077
 712          0.16373565
 581          0.17642240
 559          0.17686209
 197          0.18738647
 494          0.18968021
 986          0.19238155
 460          0.19320996
 469          0.19359818

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.312460    0.312460
asc_others       0.000   -1.614744   -1.614744
bTInc            0.000   -0.005919   -0.005919
bCost            0.000    0.015691    0.015691
bCro             0.000    0.644188    0.644188
bWaitEnv1        0.000    0.062537    0.062537
bWaitEnv2        0.000    0.200658    0.200658
bStop1           0.000    0.196912    0.196912
bStop2           0.000   -0.200429   -0.200429
bSafety1         0.000    0.375239    0.375239
bSafety2         0.000    0.144147    0.144147

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.312460171
asc_others 1.614743818
bTInc      0.005918733
bCost      0.015691450
bCro       0.644187531
bWaitEnv1  0.062536895
bWaitEnv2  0.200658032
bStop1     0.196912207
bStop2     0.200429388
bSafety1   0.375238872
bSafety2   0.144146554


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc**0.5)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
