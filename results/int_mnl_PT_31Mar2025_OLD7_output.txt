Model run by geojch using Apollo 0.3.5 on R 4.4.2 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_31Mar2025
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-04-19 11:22:15.048546
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -14.407999
     reciprocal of condition number         : 1.94791e-05
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1194.38
Rho-squared vs equal shares                  :  0.2908 
Adj.Rho-squared vs equal shares              :  0.2843 
Rho-squared vs observed shares               :  0.0499 
Adj.Rho-squared vs observed shares           :  0.0427 
AIC                                         :  2410.76 
BIC                                         :  2469.45 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.73 
     pre-estimation                         :  00:00:0.28 
     estimation                             :  00:00:0.12 
     post-estimation                        :  00:00:0.33 
Iterations                                  :  11  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.31823    0.099823       3.188    0.096831         3.287
asc_others    -2.68380    0.253878     -10.571    0.287852        -9.324
bTInc         -0.01541    0.002360      -6.530    0.002425        -6.355
bCost         -0.05078    0.014868      -3.415    0.013833        -3.671
bCro           0.15018    0.060620       2.477    0.065775         2.283
bWaitEnv1      0.21436    0.089982       2.382    0.094486         2.269
bWaitEnv2      0.39114    0.089310       4.380    0.096556         4.051
bStop1         0.51492    0.101561       5.070    0.101100         5.093
bStop2         0.31754    0.087611       3.624    0.091362         3.476
bSafety1       0.41061    0.090511       4.537    0.089072         4.610
bSafety2       0.35408    0.103978       3.405    0.093414         3.790


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro     0.009965    0.010800  1.2264e-04 -8.6989e-04 -9.2826e-04
asc_others    0.010800    0.064454  4.2683e-04  1.4234e-04   -0.002189
bTInc       1.2264e-04  4.2683e-04   5.572e-06  -3.612e-06  -3.888e-05
bCost      -8.6989e-04  1.4234e-04  -3.612e-06  2.2106e-04   4.620e-05
bCro       -9.2826e-04   -0.002189  -3.888e-05   4.620e-05    0.003675
bWaitEnv1   3.5069e-04    0.002146  -4.167e-05   9.725e-05 -6.1178e-04
bWaitEnv2  -3.8467e-04    0.005750   6.247e-06 -2.0338e-04 -5.2094e-04
bStop1     -4.8082e-04    0.003379  -4.087e-05   9.473e-05 -8.1386e-04
bStop2       -0.001192    0.003534  -3.269e-05   7.677e-05 -6.5541e-04
bSafety1      0.001379    0.007398   1.418e-05  -4.150e-05  -1.008e-05
bSafety2     -0.002196    0.005897  -2.906e-05  2.7794e-04 -2.4486e-04
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro   3.5069e-04 -3.8467e-04 -4.8082e-04   -0.001192    0.001379
asc_others    0.002146    0.005750    0.003379    0.003534    0.007398
bTInc       -4.167e-05   6.247e-06  -4.087e-05  -3.269e-05   1.418e-05
bCost        9.725e-05 -2.0338e-04   9.473e-05   7.677e-05  -4.150e-05
bCro       -6.1178e-04 -5.2094e-04 -8.1386e-04 -6.5541e-04  -1.008e-05
bWaitEnv1     0.008097    0.002983    0.002031    0.001274  4.1774e-04
bWaitEnv2     0.002983    0.007976  3.4910e-04    0.001436    0.002689
bStop1        0.002031  3.4910e-04    0.010315    0.006132 -6.7671e-04
bStop2        0.001274    0.001436    0.006132    0.007676   2.663e-05
bSafety1    4.1774e-04    0.002689 -6.7671e-04   2.663e-05    0.008192
bSafety2      0.001743    0.003173    0.001900    0.002301    0.004910
              bSafety2
asc_metro    -0.002196
asc_others    0.005897
bTInc       -2.906e-05
bCost       2.7794e-04
bCro       -2.4486e-04
bWaitEnv1     0.001743
bWaitEnv2     0.003173
bStop1        0.001900
bStop2        0.002301
bSafety1      0.004910
bSafety2      0.010811

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro     0.009376    0.013281   9.636e-05 -6.3406e-04 -8.0439e-04
asc_others    0.013281    0.082859  4.9522e-04  7.1949e-04   -0.007288
bTInc        9.636e-05  4.9522e-04   5.882e-06   4.425e-06  -5.036e-05
bCost      -6.3406e-04  7.1949e-04   4.425e-06  1.9134e-04  -1.769e-05
bCro       -8.0439e-04   -0.007288  -5.036e-05  -1.769e-05    0.004326
bWaitEnv1     0.001993    0.007139  -2.668e-05   3.485e-07   -0.001043
bWaitEnv2     0.001242    0.010097   2.068e-05 -1.9669e-04   -0.001365
bStop1        0.001735    0.005767  -3.552e-05 -2.6938e-04   -0.001557
bStop2      6.7238e-04    0.009034  -1.168e-05 -1.1879e-04   -0.002086
bSafety1      0.003235    0.010156   2.456e-05 -1.2999e-04   -0.001162
bSafety2   -5.8935e-04    0.006721  -6.529e-06   7.989e-05   -0.001641
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro     0.001993    0.001242    0.001735  6.7238e-04    0.003235
asc_others    0.007139    0.010097    0.005767    0.009034    0.010156
bTInc       -2.668e-05   2.068e-05  -3.552e-05  -1.168e-05   2.456e-05
bCost        3.485e-07 -1.9669e-04 -2.6938e-04 -1.1879e-04 -1.2999e-04
bCro         -0.001043   -0.001365   -0.001557   -0.002086   -0.001162
bWaitEnv1     0.008928    0.004730    0.002766    0.002333    0.002132
bWaitEnv2     0.004730    0.009323    0.001639    0.002762    0.003496
bStop1        0.002766    0.001639    0.010221    0.006917  2.7584e-04
bStop2        0.002333    0.002762    0.006917    0.008347    0.001332
bSafety1      0.002132    0.003496  2.7584e-04    0.001332    0.007934
bSafety2      0.002791    0.004894    0.002148    0.003074    0.003673
              bSafety2
asc_metro  -5.8935e-04
asc_others    0.006721
bTInc       -6.529e-06
bCost        7.989e-05
bCro         -0.001641
bWaitEnv1     0.002791
bWaitEnv2     0.004894
bStop1        0.002148
bStop2        0.003074
bSafety1      0.003673
bSafety2      0.008726

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro      1.00000     0.42617     0.52049    -0.58611   -0.153400
asc_others     0.42617     1.00000     0.71224     0.03771   -0.142213
bTInc          0.52049     0.71224     1.00000    -0.10292   -0.271699
bCost         -0.58611     0.03771    -0.10292     1.00000    0.051259
bCro          -0.15340    -0.14221    -0.27170     0.05126    1.000000
bWaitEnv1      0.03904     0.09392    -0.19618     0.07269   -0.112157
bWaitEnv2     -0.04315     0.25358     0.02963    -0.15316   -0.096221
bStop1        -0.04743     0.13106    -0.17049     0.06273   -0.132193
bStop2        -0.13633     0.15887    -0.15809     0.05893   -0.123406
bSafety1       0.15266     0.32195     0.06636    -0.03084   -0.001838
bSafety2      -0.21162     0.22340    -0.11841     0.17979   -0.038847
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro      0.03904    -0.04315    -0.04743   -0.136328    0.152660
asc_others     0.09392     0.25358     0.13106    0.158870    0.321952
bTInc         -0.19618     0.02963    -0.17049   -0.158086    0.066358
bCost          0.07269    -0.15316     0.06273    0.058933   -0.030839
bCro          -0.11216    -0.09622    -0.13219   -0.123406   -0.001838
bWaitEnv1      1.00000     0.37121     0.22225    0.161545    0.051292
bWaitEnv2      0.37121     1.00000     0.03849    0.183514    0.332635
bStop1         0.22225     0.03849     1.00000    0.689112   -0.073617
bStop2         0.16155     0.18351     0.68911    1.000000    0.003358
bSafety1       0.05129     0.33263    -0.07362    0.003358    1.000000
bSafety2       0.18632     0.34170     0.17989    0.252541    0.521751
              bSafety2
asc_metro     -0.21162
asc_others     0.22340
bTInc         -0.11841
bCost          0.17979
bCro          -0.03885
bWaitEnv1      0.18632
bWaitEnv2      0.34170
bStop1         0.17989
bStop2         0.25254
bSafety1       0.52175
bSafety2       1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro      1.00000      0.4765     0.41032    -0.47338    -0.12630
asc_others     0.47647      1.0000     0.70938     0.18070    -0.38493
bTInc          0.41032      0.7094     1.00000     0.13191    -0.31569
bCost         -0.47338      0.1807     0.13191     1.00000    -0.01945
bCro          -0.12630     -0.3849    -0.31569    -0.01945     1.00000
bWaitEnv1      0.21780      0.2625    -0.11641  2.6665e-04    -0.16789
bWaitEnv2      0.13286      0.3633     0.08830    -0.14726    -0.21499
bStop1         0.17725      0.1982    -0.14485    -0.19262    -0.23409
bStop2         0.07600      0.3435    -0.05271    -0.09399    -0.34714
bSafety1       0.37507      0.3961     0.11369    -0.10550    -0.19842
bSafety2      -0.06515      0.2500    -0.02882     0.06183    -0.26714
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro       0.2178     0.13286     0.17725     0.07600     0.37507
asc_others      0.2625     0.36327     0.19818     0.34351     0.39609
bTInc          -0.1164     0.08830    -0.14485    -0.05271     0.11369
bCost       2.6665e-04    -0.14726    -0.19262    -0.09399    -0.10550
bCro           -0.1679    -0.21499    -0.23409    -0.34714    -0.19842
bWaitEnv1       1.0000     0.51843     0.28952     0.27030     0.25335
bWaitEnv2       0.5184     1.00000     0.16785     0.31313     0.40645
bStop1          0.2895     0.16785     1.00000     0.74887     0.03063
bStop2          0.2703     0.31313     0.74887     1.00000     0.16372
bSafety1        0.2533     0.40645     0.03063     0.16372     1.00000
bSafety2        0.3162     0.54263     0.22739     0.36020     0.44147
              bSafety2
asc_metro     -0.06515
asc_others     0.24996
bTInc         -0.02882
bCost          0.06183
bCro          -0.26714
bWaitEnv1      0.31618
bWaitEnv2      0.54263
bStop1         0.22739
bStop2         0.36020
bSafety1       0.44147
bSafety2       1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.03152262
 164          0.06497290
 322          0.11792160
 502          0.11926443
  15          0.13786758
 256          0.13961017
 868          0.14024948
 759          0.15190153
 580          0.15926487
 725          0.16247049
 620          0.16441372
 501          0.16485661
 979          0.16522561
 886          0.16826278
 449          0.16853521
 448          0.17298802
 539          0.17387422
  11          0.17534162
 920          0.17597191
 224          0.17721151

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.31823     0.31823
asc_others       0.000    -2.68380    -2.68380
bTInc            0.000    -0.01541    -0.01541
bCost            0.000    -0.05078    -0.05078
bCro             0.000     0.15018     0.15018
bWaitEnv1        0.000     0.21436     0.21436
bWaitEnv2        0.000     0.39114     0.39114
bStop1           0.000     0.51492     0.51492
bStop2           0.000     0.31754     0.31754
bSafety1         0.000     0.41061     0.41061
bSafety2         0.000     0.35408     0.35408

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_31Mar2025"                                                                                                                    
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.31823390
asc_others 2.68379531
bTInc      0.01541337
bCost      0.05077517
bCro       0.15017518
bWaitEnv1  0.21436064
bWaitEnv2  0.39113631
bStop1     0.51492271
bStop2     0.31753668
bSafety1   0.41060598
bSafety2   0.35407830


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*relInc*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*relInc*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ## Final formulation
  V = list(
    bus = asc_bus + bTInc*relInc*t_bus + bCost*(0.1/relInc)*tc_bus+bCro*(relInc**2)*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*relInc*t_metro + bCost*(0.1/relInc)*tc_metro+ bCro*(relInc**2)*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+
  #     mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
