Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:04:08.904751
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -21.198604
     reciprocal of condition number         : 1.05507e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1237.08
Rho-squared vs equal shares                  :  0.2324 
Adj.Rho-squared vs equal shares              :  0.2256 
Rho-squared vs observed shares               :  0.1209 
Adj.Rho-squared vs observed shares           :  0.1145 
AIC                                         :  2496.16 
BIC                                         :  2554.36 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.82 
     pre-estimation                         :  00:00:0.39 
     estimation                             :  00:00:0.11 
     post-estimation                        :  00:00:0.32 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.405539    0.088917      4.5608    0.102199        3.9681
asc_others   -1.520783    0.198855     -7.6477    0.216561       -7.0224
bTInc        -0.005579  4.1600e-04    -13.4121  5.4114e-04      -10.3105
bCost         0.001060    0.004025      0.2633    0.004636        0.2285
bCro          0.611932    0.073116      8.3693    0.071293        8.5834
bWaitEnv1     0.061229    0.098759      0.6200    0.100016        0.6122
bWaitEnv2     0.297563    0.093434      3.1847    0.104940        2.8356
bStop1        0.141443    0.058505      2.4176    0.061174        2.3121
bStop2        0.028992    0.046974      0.6172    0.042023        0.6899
bSafety1      0.386259    0.100437      3.8458    0.099632        3.8768
bSafety2      0.140453    0.110540      1.2706    0.090587        1.5505


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007906    0.006204   6.318e-06 -1.8086e-04  5.7773e-04    0.001733
asc_others    0.006204    0.039543   5.644e-05   6.992e-05    0.002383    0.003949
bTInc        6.318e-06   5.644e-05   1.731e-07   1.452e-07  -1.531e-06  -4.443e-06
bCost      -1.8086e-04   6.992e-05   1.452e-07   1.620e-05   3.462e-06  -3.321e-06
bCro        5.7773e-04    0.002383  -1.531e-06   3.462e-06    0.005346 -4.0901e-04
bWaitEnv1     0.001733    0.003949  -4.443e-06  -3.321e-06 -4.0901e-04    0.009753
bWaitEnv2  -5.2338e-04    0.005255  -8.551e-07  -5.893e-05 -8.2117e-04    0.003327
bStop1      4.3381e-04    0.002567   2.443e-06   1.861e-06 -2.4368e-04  7.0494e-04
bStop2      1.4386e-04    0.002093   1.778e-06  -2.167e-05 -3.6621e-04  4.4382e-04
bSafety1      0.001322    0.008220   7.505e-07  -2.525e-06  2.9320e-04  2.7499e-04
bSafety2     -0.001215    0.007641   2.566e-07   5.182e-05 -4.4763e-04    0.001076
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -5.2338e-04  4.3381e-04  1.4386e-04    0.001322   -0.001215
asc_others    0.005255    0.002567    0.002093    0.008220    0.007641
bTInc       -8.551e-07   2.443e-06   1.778e-06   7.505e-07   2.566e-07
bCost       -5.893e-05   1.861e-06  -2.167e-05  -2.525e-06   5.182e-05
bCro       -8.2117e-04 -2.4368e-04 -3.6621e-04  2.9320e-04 -4.4763e-04
bWaitEnv1     0.003327  7.0494e-04  4.4382e-04  2.7499e-04    0.001076
bWaitEnv2     0.008730   5.154e-05  5.8073e-04    0.003198    0.003264
bStop1       5.154e-05    0.003423    0.001766 -3.9740e-04  3.4102e-04
bStop2      5.8073e-04    0.001766    0.002207   8.886e-05  7.8435e-04
bSafety1      0.003198 -3.9740e-04   8.886e-05    0.010088    0.006125
bSafety2      0.003264  3.4102e-04  7.8435e-04    0.006125    0.012219

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.010445    0.009337   8.310e-06 -2.3540e-04  8.7083e-04    0.002884
asc_others    0.009337    0.046899   7.456e-05  1.6062e-04    0.003262    0.004367
bTInc        8.310e-06   7.456e-05   2.928e-07   4.855e-07   2.895e-06  -1.410e-06
bCost      -2.3540e-04  1.6062e-04   4.855e-07   2.149e-05   6.696e-05  -6.006e-05
bCro        8.7083e-04    0.003262   2.895e-06   6.696e-05    0.005083   -0.001095
bWaitEnv1     0.002884    0.004367  -1.410e-06  -6.006e-05   -0.001095    0.010003
bWaitEnv2     0.001655    0.006419  -4.132e-06 -1.1547e-04   -0.001359    0.005046
bStop1        0.001198    0.002493   2.818e-06  -7.258e-05 -4.8583e-04  6.8475e-04
bStop2      7.1250e-04    0.001977   1.411e-06  -8.009e-05 -4.8716e-04  6.8501e-04
bSafety1      0.004391    0.008082  -5.748e-06  -8.085e-05 -3.6358e-04  9.7106e-04
bSafety2   -4.5904e-04    0.005314  -2.879e-06   2.875e-05   -0.001271  4.6646e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001655    0.001198  7.1250e-04    0.004391 -4.5904e-04
asc_others    0.006419    0.002493    0.001977    0.008082    0.005314
bTInc       -4.132e-06   2.818e-06   1.411e-06  -5.748e-06  -2.879e-06
bCost      -1.1547e-04  -7.258e-05  -8.009e-05  -8.085e-05   2.875e-05
bCro         -0.001359 -4.8583e-04 -4.8716e-04 -3.6358e-04   -0.001271
bWaitEnv1     0.005046  6.8475e-04  6.8501e-04  9.7106e-04  4.6646e-04
bWaitEnv2     0.011012  1.4891e-04  8.0301e-04    0.004415    0.003831
bStop1      1.4891e-04    0.003742    0.001634 -3.3261e-04  5.3463e-04
bStop2      8.0301e-04    0.001634    0.001766  3.6129e-04  7.8586e-04
bSafety1      0.004415 -3.3261e-04  3.6129e-04    0.009927    0.004049
bSafety2      0.003831  5.3463e-04  7.8586e-04    0.004049    0.008206

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.35087    0.170810   -0.505405     0.08886    0.197341
asc_others     0.35087     1.00000    0.682289    0.087365     0.16390    0.201083
bTInc          0.17081     0.68229    1.000000    0.086714    -0.05034   -0.108135
bCost         -0.50540     0.08736    0.086714    1.000000     0.01177   -0.008356
bCro           0.08886     0.16390   -0.050338    0.011765     1.00000   -0.056642
bWaitEnv1      0.19734     0.20108   -0.108135   -0.008356    -0.05664    1.000000
bWaitEnv2     -0.06300     0.28281   -0.022000   -0.156701    -0.12020    0.360506
bStop1         0.08339     0.22062    0.100376    0.007902    -0.05697    0.122006
bStop2         0.03444     0.22404    0.090993   -0.114613    -0.10662    0.095670
bSafety1       0.14800     0.41156    0.017961   -0.006246     0.03993    0.027723
bSafety2      -0.12363     0.34760    0.005580    0.116485    -0.05538    0.098594
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.062997    0.083392     0.03444    0.148002   -0.123634
asc_others    0.282810    0.220616     0.22404    0.411562    0.347600
bTInc        -0.022000    0.100376     0.09099    0.017961    0.005580
bCost        -0.156701    0.007902    -0.11461   -0.006246    0.116485
bCro         -0.120203   -0.056966    -0.10662    0.039926   -0.055385
bWaitEnv1     0.360506    0.122006     0.09567    0.027723    0.098594
bWaitEnv2     1.000000    0.009429     0.13231    0.340834    0.316041
bStop1        0.009429    1.000000     0.64258   -0.067630    0.052731
bStop2        0.132315    0.642580     1.00000    0.018834    0.151053
bSafety1      0.340834   -0.067630     0.01883    1.000000    0.551697
bSafety2      0.316041    0.052731     0.15105    0.551697    1.000000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.4219     0.15026    -0.49683     0.11952     0.28218
asc_others     0.42186      1.0000     0.63623     0.15998     0.21125     0.20164
bTInc          0.15026      0.6362     1.00000     0.19353     0.07504    -0.02605
bCost         -0.49683      0.1600     0.19353     1.00000     0.20260    -0.12952
bCro           0.11952      0.2113     0.07504     0.20260     1.00000    -0.15352
bWaitEnv1      0.28218      0.2016    -0.02605    -0.12952    -0.15352     1.00000
bWaitEnv2      0.15436      0.2825    -0.07277    -0.23734    -0.18165     0.48081
bStop1         0.19169      0.1882     0.08513    -0.25590    -0.11140     0.11192
bStop2         0.16590      0.2172     0.06203    -0.41110    -0.16261     0.16298
bSafety1       0.43125      0.3746    -0.10660    -0.17503    -0.05119     0.09745
bSafety2      -0.04958      0.2709    -0.05872     0.06845    -0.19679     0.05148
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.15436     0.19169     0.16590     0.43125    -0.04958
asc_others     0.28246     0.18818     0.21724     0.37455     0.27086
bTInc         -0.07277     0.08513     0.06203    -0.10660    -0.05872
bCost         -0.23734    -0.25590    -0.41110    -0.17503     0.06845
bCro          -0.18165    -0.11140    -0.16261    -0.05119    -0.19679
bWaitEnv1      0.48081     0.11192     0.16298     0.09745     0.05148
bWaitEnv2      1.00000     0.02320     0.18209     0.42226     0.40299
bStop1         0.02320     1.00000     0.63544    -0.05457     0.09648
bStop2         0.18209     0.63544     1.00000     0.08629     0.20644
bSafety1       0.42226    -0.05457     0.08629     1.00000     0.44865
bSafety2       0.40299     0.09648     0.20644     0.44865     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 227          0.06539614
 769          0.08425355
 437          0.10185580
 288          0.10568781
 780          0.12312323
 341          0.12549347
 136          0.12769713
 469          0.13568861
 717          0.13866584
 712          0.14044239
 657          0.14811318
  77          0.14965796
 537          0.16087407
 988          0.16887325
 559          0.17645027
 170          0.17815440
 134          0.18401061
  46          0.18432146
 802          0.18645145
 986          0.19231713

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.405539    0.405539
asc_others       0.000   -1.520783   -1.520783
bTInc            0.000   -0.005579   -0.005579
bCost            0.000    0.001060    0.001060
bCro             0.000    0.611932    0.611932
bWaitEnv1        0.000    0.061229    0.061229
bWaitEnv2        0.000    0.297563    0.297563
bStop1           0.000    0.141443    0.141443
bStop2           0.000    0.028992    0.028992
bSafety1         0.000    0.386259    0.386259
bSafety2         0.000    0.140453    0.140453

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.405539012
asc_others 1.520783265
bTInc      0.005579483
bCost      0.001059542
bCro       0.611931831
bWaitEnv1  0.061229080
bWaitEnv2  0.297563179
bStop1     0.141442592
bStop2     0.028991585
bSafety1   0.386258899
bSafety2   0.140453232


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop2/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop2/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
