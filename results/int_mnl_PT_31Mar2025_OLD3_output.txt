Model run by geojch using Apollo 0.3.5 on R 4.4.2 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_31Mar2025
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-04-17 17:15:05.0839
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -14.496544
     reciprocal of condition number         : 1.99299e-05
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1192.99
Rho-squared vs equal shares                  :  0.2916 
Adj.Rho-squared vs equal shares              :  0.2851 
Rho-squared vs observed shares               :  0.051 
Adj.Rho-squared vs observed shares           :  0.0438 
AIC                                         :  2407.98 
BIC                                         :  2466.67 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.54 
     pre-estimation                         :  00:00:0.22 
     estimation                             :  00:00:0.07 
     post-estimation                        :  00:00:0.25 
Iterations                                  :  11  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.34213    0.099653       3.433    0.096483         3.546
asc_others    -2.69577    0.252910     -10.659    0.286531        -9.408
bTInc         -0.01534    0.002357      -6.508    0.002450        -6.261
bCost         -0.05702    0.014979      -3.807    0.013613        -4.189
bCro           0.16010    0.061913       2.586    0.067386         2.376
bWaitEnv1      0.21198    0.089927       2.357    0.094500         2.243
bWaitEnv2      0.39786    0.089426       4.449    0.096826         4.109
bStop1         0.49801    0.101448       4.909    0.101064         4.928
bStop2         0.30163    0.087433       3.450    0.091647         3.291
bSafety1       0.40246    0.090634       4.441    0.089204         4.512
bSafety2       0.33961    0.104084       3.263    0.093124         3.647


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1   bWaitEnv2
asc_metro     0.009931    0.010456  1.2084e-04 -8.7343e-04 -9.7513e-04  3.9555e-04 -3.6864e-04
asc_others    0.010456    0.063964  4.2213e-04  2.0238e-04   -0.002272    0.002217    0.005667
bTInc       1.2084e-04  4.2213e-04   5.556e-06  -3.334e-06  -4.107e-05  -4.094e-05   5.791e-06
bCost      -8.7343e-04  2.0238e-04  -3.334e-06  2.2437e-04   4.827e-05   8.985e-05 -2.1196e-04
bCro       -9.7513e-04   -0.002272  -4.107e-05   4.827e-05    0.003833 -5.9401e-04 -5.1367e-04
bWaitEnv1   3.9555e-04    0.002217  -4.094e-05   8.985e-05 -5.9401e-04    0.008087    0.002985
bWaitEnv2  -3.6864e-04    0.005667   5.791e-06 -2.1196e-04 -5.1367e-04    0.002985    0.007997
bStop1     -4.4356e-04    0.003689  -3.783e-05  1.0346e-04 -8.1038e-04    0.001993  3.2472e-04
bStop2       -0.001171    0.003826  -2.968e-05   8.880e-05 -6.4782e-04    0.001239    0.001406
bSafety1      0.001353    0.007491   1.548e-05  -2.888e-05  -2.201e-05  3.9661e-04    0.002679
bSafety2     -0.002209    0.006077  -2.747e-05  2.8864e-04 -2.3763e-04    0.001717    0.003156
                bStop1      bStop2    bSafety1    bSafety2
asc_metro  -4.4356e-04   -0.001171    0.001353   -0.002209
asc_others    0.003689    0.003826    0.007491    0.006077
bTInc       -3.783e-05  -2.968e-05   1.548e-05  -2.747e-05
bCost       1.0346e-04   8.880e-05  -2.888e-05  2.8864e-04
bCro       -8.1038e-04 -6.4782e-04  -2.201e-05 -2.3763e-04
bWaitEnv1     0.001993    0.001239  3.9661e-04    0.001717
bWaitEnv2   3.2472e-04    0.001406    0.002679    0.003156
bStop1        0.010292    0.006098 -6.8927e-04    0.001884
bStop2        0.006098    0.007645   7.865e-06    0.002276
bSafety1   -6.8927e-04   7.865e-06    0.008214    0.004927
bSafety2      0.001884    0.002276    0.004927    0.010833

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1   bWaitEnv2
asc_metro     0.009309    0.012912   9.676e-05 -6.1364e-04 -7.9947e-04    0.001916    0.001356
asc_others    0.012912    0.082100  4.9487e-04  7.7766e-04   -0.007825    0.007130    0.009962
bTInc        9.676e-05  4.9487e-04   6.003e-06   4.263e-06  -5.196e-05  -2.833e-05   2.265e-05
bCost      -6.1364e-04  7.7766e-04   4.263e-06  1.8531e-04  -3.222e-05   1.697e-05 -2.2095e-04
bCro       -7.9947e-04   -0.007825  -5.196e-05  -3.222e-05    0.004541   -0.001053   -0.001436
bWaitEnv1     0.001916    0.007130  -2.833e-05   1.697e-05   -0.001053    0.008930    0.004678
bWaitEnv2     0.001356    0.009962   2.265e-05 -2.2095e-04   -0.001436    0.004678    0.009375
bStop1        0.001680    0.006249  -3.349e-05 -2.3429e-04   -0.001653    0.002760    0.001581
bStop2      5.5797e-04    0.009610  -6.862e-06  -6.091e-05   -0.002283    0.002330    0.002648
bSafety1      0.003326    0.010365   2.897e-05 -1.2338e-04   -0.001345    0.002108    0.003485
bSafety2   -4.2170e-04    0.007001  -3.625e-06   5.836e-05   -0.001779    0.002783    0.004859
                bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001680  5.5797e-04    0.003326 -4.2170e-04
asc_others    0.006249    0.009610    0.010365    0.007001
bTInc       -3.349e-05  -6.862e-06   2.897e-05  -3.625e-06
bCost      -2.3429e-04  -6.091e-05 -1.2338e-04   5.836e-05
bCro         -0.001653   -0.002283   -0.001345   -0.001779
bWaitEnv1     0.002760    0.002330    0.002108    0.002783
bWaitEnv2     0.001581    0.002648    0.003485    0.004859
bStop1        0.010214    0.006939  2.7646e-04    0.002184
bStop2        0.006939    0.008399    0.001240    0.003058
bSafety1    2.7646e-04    0.001240    0.007957    0.003680
bSafety2      0.002184    0.003058    0.003680    0.008672

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1   bWaitEnv2
asc_metro      1.00000     0.41485     0.51445    -0.58513   -0.158049     0.04414    -0.04137
asc_others     0.41485     1.00000     0.70807     0.05342   -0.145128     0.09749     0.25055
bTInc          0.51445     0.70807     1.00000    -0.09443   -0.281441    -0.19312     0.02747
bCost         -0.58513     0.05342    -0.09443     1.00000    0.052049     0.06670    -0.15824
bCro          -0.15805    -0.14513    -0.28144     0.05205    1.000000    -0.10669    -0.09278
bWaitEnv1      0.04414     0.09749    -0.19312     0.06670   -0.106691     1.00000     0.37118
bWaitEnv2     -0.04137     0.25055     0.02747    -0.15824   -0.092777     0.37118     1.00000
bStop1        -0.04388     0.14377    -0.15819     0.06808   -0.129023     0.21847     0.03579
bStop2        -0.13440     0.17303    -0.14402     0.06780   -0.119675     0.15760     0.17982
bSafety1       0.14977     0.32682     0.07245    -0.02127   -0.003922     0.04866     0.33050
bSafety2      -0.21294     0.23085    -0.11198     0.18513   -0.036876     0.18347     0.33910
                bStop1      bStop2    bSafety1    bSafety2
asc_metro     -0.04388    -0.13440    0.149771    -0.21294
asc_others     0.14377     0.17303    0.326820     0.23085
bTInc         -0.15819    -0.14402    0.072452    -0.11198
bCost          0.06808     0.06780   -0.021270     0.18513
bCro          -0.12902    -0.11967   -0.003922    -0.03688
bWaitEnv1      0.21847     0.15760    0.048661     0.18347
bWaitEnv2      0.03579     0.17982    0.330504     0.33910
bStop1         1.00000     0.68745   -0.074965     0.17838
bStop2         0.68745     1.00000  9.9256e-04     0.25005
bSafety1      -0.07497  9.9256e-04    1.000000     0.52224
bSafety2       0.17838     0.25005    0.522245     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1   bWaitEnv2
asc_metro      1.00000      0.4670     0.40931    -0.46721    -0.12296     0.21019     0.14512
asc_others     0.46704      1.0000     0.70489     0.19938    -0.40526     0.26331     0.35909
bTInc          0.40931      0.7049     1.00000     0.12781    -0.31467    -0.12236     0.09547
bCost         -0.46721      0.1994     0.12781     1.00000    -0.03513     0.01320    -0.16763
bCro          -0.12296     -0.4053    -0.31467    -0.03513     1.00000    -0.16531    -0.22011
bWaitEnv1      0.21019      0.2633    -0.12236     0.01320    -0.16531     1.00000     0.51121
bWaitEnv2      0.14512      0.3591     0.09547    -0.16763    -0.22011     0.51121     1.00000
bStop1         0.17231      0.2158    -0.13524    -0.17030    -0.24275     0.28903     0.16153
bStop2         0.06310      0.3660    -0.03056    -0.04882    -0.36973     0.26898     0.29845
bSafety1       0.38642      0.4055     0.13252    -0.10161    -0.22370     0.25005     0.40352
bSafety2      -0.04693      0.2624    -0.01589     0.04604    -0.28356     0.31630     0.53889
                bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.17231     0.06310     0.38642    -0.04693
asc_others     0.21579     0.36596     0.40552     0.26238
bTInc         -0.13524    -0.03056     0.13252    -0.01589
bCost         -0.17030    -0.04882    -0.10161     0.04604
bCro          -0.24275    -0.36973    -0.22370    -0.28356
bWaitEnv1      0.28903     0.26898     0.25005     0.31630
bWaitEnv2      0.16153     0.29845     0.40352     0.53889
bStop1         1.00000     0.74917     0.03067     0.23203
bStop2         0.74917     1.00000     0.15166     0.35834
bSafety1       0.03067     0.15166     1.00000     0.44301
bSafety2       0.23203     0.35834     0.44301     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.03097950
 164          0.06762993
 868          0.12077088
 322          0.12260660
 256          0.13101048
 502          0.14343230
  15          0.14465306
 580          0.14528202
 448          0.16224342
 979          0.16361325
  23          0.16551879
 187          0.16590618
 501          0.16723261
 888          0.16826644
 725          0.16826660
 449          0.16842259
 920          0.16907884
 359          0.17154386
 759          0.17174840
 177          0.17305539

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.34213     0.34213
asc_others       0.000    -2.69577    -2.69577
bTInc            0.000    -0.01534    -0.01534
bCost            0.000    -0.05702    -0.05702
bCro             0.000     0.16010     0.16010
bWaitEnv1        0.000     0.21198     0.21198
bWaitEnv2        0.000     0.39786     0.39786
bStop1           0.000     0.49801     0.49801
bStop2           0.000     0.30163     0.30163
bSafety1         0.000     0.40246     0.40246
bSafety2         0.000     0.33961     0.33961

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_31Mar2025"                                                                                                                    
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.34213329
asc_others 2.69576633
bTInc      0.01534035
bCost      0.05702257
bCro       0.16009760
bWaitEnv1  0.21198476
bWaitEnv2  0.39786332
bStop1     0.49800755
bStop2     0.30162545
bSafety1   0.40246422
bSafety2   0.33960929


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*relInc*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*relInc*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ## Final formulation
  V = list(
    bus = asc_bus + bTInc*relInc*t_bus + bCost*(0.1/relInc)*tc_bus+bCro*(relInc**2)*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*relInc*t_metro + bCost*(0.1/relInc)*tc_metro+ bCro*(relInc**2)*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+
  #     mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
