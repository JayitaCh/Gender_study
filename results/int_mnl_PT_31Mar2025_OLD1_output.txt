Model run by geojch using Apollo 0.3.5 on R 4.4.2 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_31Mar2025
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-03-31 12:37:25.673095
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -14.602055
     reciprocal of condition number         : 1.97812e-05
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1196.36
Rho-squared vs equal shares                  :  0.2896 
Adj.Rho-squared vs equal shares              :  0.2831 
Rho-squared vs observed shares               :  0.0483 
Adj.Rho-squared vs observed shares           :  0.0411 
AIC                                         :  2414.72 
BIC                                         :  2473.4 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:1.05 
     pre-estimation                         :  00:00:0.56 
     estimation                             :  00:00:0.21 
     post-estimation                        :  00:00:0.29 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.31986    0.099536       3.214    0.094986         3.367
asc_others    -2.62955    0.252135     -10.429    0.284194        -9.253
bTInc         -0.01486    0.002353      -6.317    0.002375        -6.258
bCost         -0.04854    0.014935      -3.250    0.013688        -3.546
bCro           0.17066    0.061149       2.791    0.064305         2.654
bWaitEnv1      0.20916    0.089997       2.324    0.093982         2.225
bWaitEnv2      0.38756    0.089045       4.352    0.095863         4.043
bStop1         0.49898    0.101194       4.931    0.099991         4.990
bStop2         0.30528    0.087255       3.499    0.090576         3.370
bSafety1       0.41294    0.090375       4.569    0.088313         4.676
bSafety2       0.35827    0.103695       3.455    0.092830         3.859


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1   bWaitEnv2
asc_metro     0.009907    0.010563  1.2148e-04 -8.6800e-04 -9.3178e-04  3.4881e-04 -4.1308e-04
asc_others    0.010563    0.063572  4.2021e-04  1.7219e-04   -0.002245    0.002094    0.005654
bTInc       1.2148e-04  4.2021e-04   5.536e-06  -3.456e-06  -4.059e-05  -4.198e-05   5.994e-06
bCost      -8.6800e-04  1.7219e-04  -3.456e-06  2.2304e-04   4.364e-05   9.284e-05 -2.0169e-04
bCro       -9.3178e-04   -0.002245  -4.059e-05   4.364e-05    0.003739 -6.2002e-04 -4.8740e-04
bWaitEnv1   3.4881e-04    0.002094  -4.198e-05   9.284e-05 -6.2002e-04    0.008099    0.002959
bWaitEnv2  -4.1308e-04    0.005654   5.994e-06 -2.0169e-04 -4.8740e-04    0.002959    0.007929
bStop1     -4.6727e-04    0.003567  -3.867e-05  1.0136e-04 -7.7989e-04    0.002005  3.1086e-04
bStop2       -0.001180    0.003611  -3.134e-05   7.948e-05 -6.4730e-04    0.001260    0.001394
bSafety1      0.001376    0.007319   1.434e-05  -4.330e-05   1.598e-05  3.8317e-04    0.002663
bSafety2     -0.002159    0.005810  -2.917e-05  2.6617e-04 -2.3473e-04    0.001723    0.003154
                bStop1      bStop2    bSafety1    bSafety2
asc_metro  -4.6727e-04   -0.001180    0.001376   -0.002159
asc_others    0.003567    0.003611    0.007319    0.005810
bTInc       -3.867e-05  -3.134e-05   1.434e-05  -2.917e-05
bCost       1.0136e-04   7.948e-05  -4.330e-05  2.6617e-04
bCro       -7.7989e-04 -6.4730e-04   1.598e-05 -2.3473e-04
bWaitEnv1     0.002005    0.001260  3.8317e-04    0.001723
bWaitEnv2   3.1086e-04    0.001394    0.002663    0.003154
bStop1        0.010240    0.006068 -7.0786e-04    0.001866
bStop2        0.006068    0.007613  -1.449e-05    0.002258
bSafety1   -7.0786e-04  -1.449e-05    0.008168    0.004879
bSafety2      0.001866    0.002258    0.004879    0.010753

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1   bWaitEnv2
asc_metro     0.009022    0.012384   8.867e-05 -5.9505e-04 -7.3878e-04    0.001955    0.001248
asc_others    0.012384    0.080766  4.7429e-04  8.2841e-04   -0.007329    0.007148    0.009916
bTInc        8.867e-05  4.7429e-04   5.641e-06   4.960e-06  -5.213e-05  -2.475e-05   2.391e-05
bCost      -5.9505e-04  8.2841e-04   4.960e-06  1.8737e-04  -2.613e-05   1.365e-05 -1.9983e-04
bCro       -7.3878e-04   -0.007329  -5.213e-05  -2.613e-05    0.004135   -0.001027   -0.001405
bWaitEnv1     0.001955    0.007148  -2.475e-05   1.365e-05   -0.001027    0.008833    0.004587
bWaitEnv2     0.001248    0.009916   2.391e-05 -1.9983e-04   -0.001405    0.004587    0.009190
bStop1        0.001754    0.006013  -2.971e-05 -2.5547e-04   -0.001474    0.002675    0.001516
bStop2      6.4641e-04    0.009050  -7.572e-06 -1.1085e-04   -0.002068    0.002247    0.002626
bSafety1      0.003185    0.009883   2.513e-05 -1.2236e-04   -0.001181    0.002063    0.003350
bSafety2   -4.9476e-04    0.006853  -1.632e-06   7.974e-05   -0.001619    0.002692    0.004728
                bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001754  6.4641e-04    0.003185 -4.9476e-04
asc_others    0.006013    0.009050    0.009883    0.006853
bTInc       -2.971e-05  -7.572e-06   2.513e-05  -1.632e-06
bCost      -2.5547e-04 -1.1085e-04 -1.2236e-04   7.974e-05
bCro         -0.001474   -0.002068   -0.001181   -0.001619
bWaitEnv1     0.002675    0.002247    0.002063    0.002692
bWaitEnv2     0.001516    0.002626    0.003350    0.004728
bStop1        0.009998    0.006728  2.4538e-04    0.002078
bStop2        0.006728    0.008204    0.001201    0.002938
bSafety1    2.4538e-04    0.001201    0.007799    0.003596
bSafety2      0.002078    0.002938    0.003596    0.008617

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1   bWaitEnv2
asc_metro      1.00000     0.42089     0.51872    -0.58391   -0.153088     0.03894    -0.04661
asc_others     0.42089     1.00000     0.70834     0.04573   -0.145603     0.09226     0.25184
bTInc          0.51872     0.70834     1.00000    -0.09835   -0.282126    -0.19827     0.02861
bCost         -0.58391     0.04573    -0.09835     1.00000    0.047785     0.06907    -0.15167
bCro          -0.15309    -0.14560    -0.28213     0.04778    1.000000    -0.11266    -0.08951
bWaitEnv1      0.03894     0.09226    -0.19827     0.06907   -0.112665     1.00000     0.36928
bWaitEnv2     -0.04661     0.25184     0.02861    -0.15167   -0.089513     0.36928     1.00000
bStop1        -0.04639     0.13979    -0.16244     0.06707   -0.126034     0.22020     0.03450
bStop2        -0.13586     0.16412    -0.15267     0.06099   -0.121317     0.16040     0.17937
bSafety1       0.15297     0.32118     0.06745    -0.03208    0.002892     0.04711     0.33089
bSafety2      -0.20921     0.22221    -0.11958     0.17187   -0.037018     0.18468     0.34160
                bStop1      bStop2    bSafety1    bSafety2
asc_metro     -0.04639   -0.135860    0.152972    -0.20921
asc_others     0.13979    0.164117    0.321177     0.22221
bTInc         -0.16244   -0.152666    0.067452    -0.11958
bCost          0.06707    0.060994   -0.032081     0.17187
bCro          -0.12603   -0.121317    0.002892    -0.03702
bWaitEnv1      0.22020    0.160396    0.047110     0.18468
bWaitEnv2      0.03450    0.179371    0.330894     0.34160
bStop1         1.00000    0.687243   -0.077400     0.17787
bStop2         0.68724    1.000000   -0.001838     0.24960
bSafety1      -0.07740   -0.001838    1.000000     0.52060
bSafety2       0.17787    0.249596    0.520604     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1   bWaitEnv2
asc_metro      1.00000      0.4588    0.393048    -0.45765    -0.12095     0.21900      0.1371
asc_others     0.45875      1.0000    0.702658     0.21295    -0.40102     0.26763      0.3640
bTInc          0.39305      0.7027    1.000000     0.15256    -0.34132    -0.11090      0.1050
bCost         -0.45765      0.2129    0.152561     1.00000    -0.02969     0.01061     -0.1523
bCro          -0.12095     -0.4010   -0.341316    -0.02969     1.00000    -0.16994     -0.2280
bWaitEnv1      0.21900      0.2676   -0.110900     0.01061    -0.16994     1.00000      0.5091
bWaitEnv2      0.13710      0.3640    0.105015    -0.15228    -0.22797     0.50913      1.0000
bStop1         0.18466      0.2116   -0.125085    -0.18665    -0.22927     0.28464      0.1581
bStop2         0.07513      0.3516   -0.035200    -0.08941    -0.35505     0.26399      0.3024
bSafety1       0.37971      0.3938    0.119826    -0.10122    -0.20793     0.24855      0.3957
bSafety2      -0.05611      0.2597   -0.007403     0.06275    -0.27123     0.30856      0.5313
                bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.18466     0.07513     0.37971   -0.056111
asc_others     0.21159     0.35157     0.39376    0.259747
bTInc         -0.12509    -0.03520     0.11983   -0.007403
bCost         -0.18665    -0.08941    -0.10122    0.062750
bCro          -0.22927    -0.35505    -0.20793   -0.271232
bWaitEnv1      0.28464     0.26399     0.24855    0.308558
bWaitEnv2      0.15813     0.30240     0.39567    0.531251
bStop1         1.00000     0.74291     0.02779    0.223896
bStop2         0.74291     1.00000     0.15013    0.349408
bSafety1       0.02779     0.15013     1.00000    0.438689
bSafety2       0.22390     0.34941     0.43869    1.000000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.03574146
 164          0.06742941
 322          0.11578708
 256          0.12340821
  15          0.12441285
 502          0.12713805
 868          0.13578616
 580          0.15490539
 979          0.16231365
 539          0.16324558
 888          0.16482516
 187          0.16866575
 886          0.16868426
 501          0.16899752
 920          0.17007939
 177          0.17036625
 359          0.17111045
 449          0.17242253
 759          0.17338438
 620          0.17518996

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.31986     0.31986
asc_others       0.000    -2.62955    -2.62955
bTInc            0.000    -0.01486    -0.01486
bCost            0.000    -0.04854    -0.04854
bCro             0.000     0.17066     0.17066
bWaitEnv1        0.000     0.20916     0.20916
bWaitEnv2        0.000     0.38756     0.38756
bStop1           0.000     0.49898     0.49898
bStop2           0.000     0.30528     0.30528
bSafety1         0.000     0.41294     0.41294
bSafety2         0.000     0.35827     0.35827

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_31Mar2025"                                                                                                                    
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.31986321
asc_others 2.62954810
bTInc      0.01486378
bCost      0.04853886
bCro       0.17066190
bWaitEnv1  0.20915546
bWaitEnv2  0.38756096
bStop1     0.49897574
bStop2     0.30527563
bSafety1   0.41293938
bSafety2   0.35827181


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*relInc*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*relInc*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ## Final formulation
  V = list(
    bus = asc_bus + bTInc*relInc*t_bus + bCost*(0.1/relInc)*tc_bus+bCro*(relInc**2)*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*relInc*t_metro + bCost*(0.1/relInc)*tc_metro+ bCro*(relInc**2)*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+
  #     mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
