Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_nonPT_03
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-14 17:57:21.366908
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -20.946601
     reciprocal of condition number         : 7.621e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1236.33
Rho-squared vs equal shares                  :  0.2329 
Adj.Rho-squared vs equal shares              :  0.2261 
Rho-squared vs observed shares               :  0.1214 
Adj.Rho-squared vs observed shares           :  0.1151 
AIC                                         :  2494.65 
BIC                                         :  2552.85 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:1.11 
     pre-estimation                         :  00:00:0.51 
     estimation                             :  00:00:0.17 
     post-estimation                        :  00:00:0.43 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.82075     0.07647     10.7335    0.089916        9.1279
asc_others    -0.85046     0.19128     -4.4462    0.210346       -4.0431
bTInc         -0.01056  9.2359e-04    -11.4298    0.001262       -8.3680
bCost         -0.03539     0.01014     -3.4892    0.012231       -2.8932
bCro           0.60335     0.07472      8.0748    0.070839        8.5172
bWaitEnv1     -0.12175     0.09857     -1.2352    0.099289       -1.2262
bWaitEnv2      0.23450     0.09358      2.5060    0.100740        2.3278
bStop1         0.12786     0.10848      1.1787    0.112767        1.1339
bStop2        -0.26765     0.09302     -2.8772    0.095197       -2.8115
bSafety1       0.45909     0.10064      4.5616    0.100016        4.5902
bSafety2       0.03364     0.11090      0.3034    0.091919        0.3660


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.005847    0.003928  -4.457e-06   1.121e-05  6.4668e-04    0.001691
asc_others    0.003928    0.036588   8.872e-05  9.2301e-04    0.002485    0.005642
bTInc       -4.457e-06   8.872e-05   8.530e-07   4.156e-06  -1.589e-06  -3.734e-07
bCost        1.121e-05  9.2301e-04   4.156e-06  1.0285e-04   2.812e-05   1.958e-05
bCro        6.4668e-04    0.002485  -1.589e-06   2.812e-05    0.005583 -5.7233e-04
bWaitEnv1     0.001691    0.005642  -3.734e-07   1.958e-05 -5.7233e-04    0.009715
bWaitEnv2    -0.001400    0.006081  -8.729e-07   4.338e-05 -7.2442e-04    0.003280
bStop1      7.7357e-04    0.006453  -4.295e-06  -1.680e-05 -9.5294e-04    0.001204
bStop2     -8.9241e-04    0.006089   6.421e-07   1.545e-05   -0.001125  9.5439e-04
bSafety1      0.001257    0.007667  -3.541e-06   1.301e-05  4.3458e-04  3.0695e-04
bSafety2   -7.3464e-04    0.008855   1.477e-06   4.627e-06 -3.5151e-04    0.001259
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.001400  7.7357e-04 -8.9241e-04    0.001257 -7.3464e-04
asc_others    0.006081    0.006453    0.006089    0.007667    0.008855
bTInc       -8.729e-07  -4.295e-06   6.421e-07  -3.541e-06   1.477e-06
bCost        4.338e-05  -1.680e-05   1.545e-05   1.301e-05   4.627e-06
bCro       -7.2442e-04 -9.5294e-04   -0.001125  4.3458e-04 -3.5151e-04
bWaitEnv1     0.003280    0.001204  9.5439e-04  3.0695e-04    0.001259
bWaitEnv2     0.008757  -1.111e-05    0.001259    0.003253    0.003582
bStop1      -1.111e-05    0.011768    0.006345 -7.7037e-04    0.001446
bStop2        0.001259    0.006345    0.008653   3.869e-05    0.002287
bSafety1      0.003253 -7.7037e-04   3.869e-05    0.010129    0.006037
bSafety2      0.003582    0.001446    0.002287    0.006037    0.012300

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.008085    0.007145  -8.376e-06  -2.511e-05    0.001266    0.001634
asc_others    0.007145    0.044245  1.3142e-04    0.001222    0.001112    0.006187
bTInc       -8.376e-06  1.3142e-04   1.591e-06   8.047e-06  -3.912e-06   2.127e-05
bCost       -2.511e-05    0.001222   8.047e-06  1.4959e-04  -8.186e-05  1.6685e-04
bCro          0.001266    0.001112  -3.912e-06  -8.186e-05    0.005018   -0.001062
bWaitEnv1     0.001634    0.006187   2.127e-05  1.6685e-04   -0.001062    0.009858
bWaitEnv2   3.6549e-04    0.008001   1.607e-06  1.7654e-04 -5.6167e-04    0.004507
bStop1        0.001719    0.008587  -5.944e-06  1.3486e-04   -0.001444    0.001719
bStop2       -0.001350    0.007935   1.391e-05  1.4507e-04   -0.001074    0.001260
bSafety1      0.004172    0.008143  -2.205e-05   9.017e-05   7.745e-05 -1.1903e-04
bSafety2    1.0028e-04    0.008213  -2.765e-06   4.458e-05   -0.001231  5.4595e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   3.6549e-04    0.001719   -0.001350    0.004172  1.0028e-04
asc_others    0.008001    0.008587    0.007935    0.008143    0.008213
bTInc        1.607e-06  -5.944e-06   1.391e-05  -2.205e-05  -2.765e-06
bCost       1.7654e-04  1.3486e-04  1.4507e-04   9.017e-05   4.458e-05
bCro       -5.6167e-04   -0.001444   -0.001074   7.745e-05   -0.001231
bWaitEnv1     0.004507    0.001719    0.001260 -1.1903e-04  5.4595e-04
bWaitEnv2     0.010148 -1.7848e-04   2.149e-05    0.003527    0.003785
bStop1     -1.7848e-04    0.012716    0.007171 -4.9419e-04    0.003384
bStop2       2.149e-05    0.007171    0.009062 -8.7298e-04    0.003406
bSafety1      0.003527 -4.9419e-04 -8.7298e-04    0.010003    0.003631
bSafety2      0.003785    0.003384    0.003406    0.003631    0.008449

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.2686   -0.063114    0.014456     0.11318    0.224387
asc_others     0.26857      1.0000    0.502215    0.475819     0.17388    0.299253
bTInc         -0.06311      0.5022    1.000000    0.443713    -0.02302   -0.004102
bCost          0.01446      0.4758    0.443713    1.000000     0.03711    0.019590
bCro           0.11318      0.1739   -0.023024    0.037113     1.00000   -0.077711
bWaitEnv1      0.22439      0.2993   -0.004102    0.019590    -0.07771    1.000000
bWaitEnv2     -0.19567      0.3397   -0.010100    0.045712    -0.10361    0.355642
bStop1         0.09325      0.3110   -0.042868   -0.015274    -0.11756    0.112628
bStop2        -0.12546      0.3422    0.007474    0.016378    -0.16183    0.104090
bSafety1       0.16332      0.3983   -0.038095    0.012744     0.05779    0.030942
bSafety2      -0.08663      0.4174    0.014418    0.004114    -0.04242    0.115133
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.195672    0.093254   -0.125460    0.163318   -0.086627
asc_others    0.339728    0.311004    0.342193    0.398260    0.417415
bTInc        -0.010100   -0.042868    0.007474   -0.038095    0.014418
bCost         0.045712   -0.015274    0.016378    0.012744    0.004114
bCro         -0.103607   -0.117563   -0.161830    0.057790   -0.042418
bWaitEnv1     0.355642    0.112628    0.104090    0.030942    0.115133
bWaitEnv2     1.000000   -0.001095    0.144677    0.345383    0.345172
bStop1       -0.001095    1.000000    0.628774   -0.070560    0.120154
bStop2        0.144677    0.628774    1.000000    0.004133    0.221693
bSafety1      0.345383   -0.070560    0.004133    1.000000    0.540825
bSafety2      0.345172    0.120154    0.221693    0.540825    1.000000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.37777    -0.07384    -0.02283     0.19882     0.18300
asc_others     0.37777     1.00000     0.49524     0.47499     0.07460     0.29623
bTInc         -0.07384     0.49524     1.00000     0.52156    -0.04378     0.16985
bCost         -0.02283     0.47499     0.52156     1.00000    -0.09448     0.13739
bCro           0.19882     0.07460    -0.04378    -0.09448     1.00000    -0.15094
bWaitEnv1      0.18300     0.29623     0.16985     0.13739    -0.15094     1.00000
bWaitEnv2      0.04035     0.37760     0.01265     0.14328    -0.07871     0.45061
bStop1         0.16953     0.36203    -0.04178     0.09778    -0.18077     0.15354
bStop2        -0.15774     0.39625     0.11582     0.12460    -0.15923     0.13332
bSafety1       0.46392     0.38706    -0.17473     0.07372     0.01093    -0.01199
bSafety2       0.01213     0.42476    -0.02385     0.03966    -0.18901     0.05982
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.040349     0.16953   -0.157741     0.46392     0.01213
asc_others    0.377597     0.36203    0.396246     0.38706     0.42476
bTInc         0.012647    -0.04178    0.115820    -0.17473    -0.02385
bCost         0.143277     0.09778    0.124595     0.07372     0.03966
bCro         -0.078705    -0.18077   -0.159227     0.01093    -0.18901
bWaitEnv1     0.450609     0.15354    0.133315    -0.01199     0.05982
bWaitEnv2     1.000000    -0.01571    0.002241     0.35001     0.40877
bStop1       -0.015711     1.00000    0.668024    -0.04382     0.32644
bStop2        0.002241     0.66802    1.000000    -0.09169     0.38921
bSafety1      0.350012    -0.04382   -0.091688     1.00000     0.39497
bSafety2      0.408766     0.32644    0.389213     0.39497     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 802          0.04010530
 227          0.07285362
 769          0.07617179
 341          0.07910769
 288          0.08947494
 986          0.11839967
 787          0.12046919
 468          0.12775840
 460          0.12896619
 559          0.14093324
 657          0.16833496
 134          0.17714773
 170          0.18244388
 878          0.18278638
 136          0.18390724
 717          0.18677484
 780          0.19001749
 469          0.20081640
 537          0.20352067
 486          0.20552694

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.82075     0.82075
asc_others       0.000    -0.85046    -0.85046
bTInc            0.000    -0.01056    -0.01056
bCost            0.000    -0.03539    -0.03539
bCro             0.000     0.60335     0.60335
bWaitEnv1        0.000    -0.12175    -0.12175
bWaitEnv2        0.000     0.23450     0.23450
bStop1           0.000     0.12786     0.12786
bStop2           0.000    -0.26765    -0.26765
bSafety1         0.000     0.45909     0.45909
bSafety2         0.000     0.03364     0.03364

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_nonPT_03"                                                                                                                        
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.82075147
asc_others 0.85045715
bTInc      0.01055652
bCost      0.03538563
bCro       0.60334874
bWaitEnv1  0.12175114
bWaitEnv2  0.23450336
bStop1     0.12786301
bStop2     0.26764556
bSafety1   0.45908701
bSafety2   0.03364465


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
