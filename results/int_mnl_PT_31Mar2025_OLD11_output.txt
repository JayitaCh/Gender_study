Model run by geojch using Apollo 0.3.5 on R 4.4.2 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_31Mar2025
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-04-19 11:28:22.793537
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -14.439418
     reciprocal of condition number         : 1.92094e-05
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1194.76
Rho-squared vs equal shares                  :  0.2906 
Adj.Rho-squared vs equal shares              :  0.2841 
Rho-squared vs observed shares               :  0.0496 
Adj.Rho-squared vs observed shares           :  0.0424 
AIC                                         :  2411.52 
BIC                                         :  2470.2 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.72 
     pre-estimation                         :  00:00:0.32 
     estimation                             :  00:00:0.12 
     post-estimation                        :  00:00:0.28 
Iterations                                  :  11  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.31563    0.099073       3.186    0.093953         3.359
asc_others    -2.67749    0.253590     -10.558    0.283104        -9.458
bTInc         -0.01539    0.002341      -6.574    0.002224        -6.919
bCost         -0.04929    0.014693      -3.354    0.013692        -3.600
bCro           0.16082    0.061642       2.609    0.066168         2.431
bWaitEnv1      0.21535    0.089904       2.395    0.093809         2.296
bWaitEnv2      0.39134    0.089230       4.386    0.096705         4.047
bStop1         0.50866    0.101397       5.016    0.100606         5.056
bStop2         0.31531    0.087499       3.604    0.091417         3.449
bSafety1       0.41419    0.090515       4.576    0.088659         4.672
bSafety2       0.35986    0.103673       3.471    0.092841         3.876


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro     0.009815    0.010699  1.1914e-04 -8.4600e-04 -9.0970e-04
asc_others    0.010699    0.064308  4.2306e-04  1.4527e-04   -0.002427
bTInc       1.1914e-04  4.2306e-04   5.479e-06  -3.209e-06  -4.203e-05
bCost      -8.4600e-04  1.4527e-04  -3.209e-06  2.1590e-04   3.808e-05
bCro       -9.0970e-04   -0.002427  -4.203e-05   3.808e-05    0.003800
bWaitEnv1   3.8543e-04    0.002196  -4.034e-05   9.054e-05 -6.1218e-04
bWaitEnv2  -4.3061e-04    0.005714   5.618e-06 -1.9780e-04 -5.0986e-04
bStop1     -4.0974e-04    0.003532  -3.815e-05   8.667e-05 -8.4184e-04
bStop2       -0.001111    0.003619  -3.059e-05   6.324e-05 -6.9265e-04
bSafety1      0.001399    0.007340   1.382e-05  -4.962e-05   3.339e-05
bSafety2     -0.002121    0.005841  -2.828e-05  2.5796e-04 -2.2295e-04
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro   3.8543e-04 -4.3061e-04 -4.0974e-04   -0.001111    0.001399
asc_others    0.002196    0.005714    0.003532    0.003619    0.007340
bTInc       -4.034e-05   5.618e-06  -3.815e-05  -3.059e-05   1.382e-05
bCost        9.054e-05 -1.9780e-04   8.667e-05   6.324e-05  -4.962e-05
bCro       -6.1218e-04 -5.0986e-04 -8.4184e-04 -6.9265e-04   3.339e-05
bWaitEnv1     0.008083    0.002985    0.002016    0.001261  4.0011e-04
bWaitEnv2     0.002985    0.007962  3.6051e-04    0.001444    0.002682
bStop1        0.002016  3.6051e-04    0.010281    0.006109 -6.9790e-04
bStop2        0.001261    0.001444    0.006109    0.007656   5.290e-06
bSafety1    4.0011e-04    0.002682 -6.9790e-04   5.290e-06    0.008193
bSafety2      0.001733    0.003194    0.001855    0.002257    0.004890
              bSafety2
asc_metro    -0.002121
asc_others    0.005841
bTInc       -2.828e-05
bCost       2.5796e-04
bCro       -2.2295e-04
bWaitEnv1     0.001733
bWaitEnv2     0.003194
bStop1        0.001855
bStop2        0.002257
bSafety1      0.004890
bSafety2      0.010748

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro     0.008827    0.012062   7.528e-05 -5.8932e-04 -7.4316e-04
asc_others    0.012062    0.080148  4.4314e-04  7.9746e-04   -0.007801
bTInc        7.528e-05  4.4314e-04   4.947e-06   5.539e-06  -5.304e-05
bCost      -5.8932e-04  7.9746e-04   5.539e-06  1.8748e-04  -2.804e-05
bCro       -7.4316e-04   -0.007801  -5.304e-05  -2.804e-05    0.004378
bWaitEnv1     0.002129    0.007465  -2.051e-05  -8.473e-06 -9.9255e-04
bWaitEnv2     0.001283    0.010116   2.289e-05 -2.1370e-04   -0.001486
bStop1        0.001900    0.006278  -2.657e-05 -2.8368e-04   -0.001578
bStop2      8.3925e-04    0.009541  -2.596e-06 -1.3321e-04   -0.002283
bSafety1      0.003236    0.009933   2.357e-05 -1.4194e-04   -0.001328
bSafety2   -3.3260e-04    0.006992   9.217e-07   4.102e-05   -0.001701
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro     0.002129    0.001283    0.001900  8.3925e-04    0.003236
asc_others    0.007465    0.010116    0.006278    0.009541    0.009933
bTInc       -2.051e-05   2.289e-05  -2.657e-05  -2.596e-06   2.357e-05
bCost       -8.473e-06 -2.1370e-04 -2.8368e-04 -1.3321e-04 -1.4194e-04
bCro       -9.9255e-04   -0.001486   -0.001578   -0.002283   -0.001328
bWaitEnv1     0.008800    0.004681    0.002653    0.002287    0.002201
bWaitEnv2     0.004681    0.009352    0.001641    0.002772    0.003489
bStop1        0.002653    0.001641    0.010122    0.006892  3.3082e-04
bStop2        0.002287    0.002772    0.006892    0.008357    0.001332
bSafety1      0.002201    0.003489  3.3082e-04    0.001332    0.007860
bSafety2      0.002763    0.004902    0.002143    0.003029    0.003678
              bSafety2
asc_metro  -3.3260e-04
asc_others    0.006992
bTInc        9.217e-07
bCost        4.102e-05
bCro         -0.001701
bWaitEnv1     0.002763
bWaitEnv2     0.004902
bStop1        0.002143
bStop2        0.003029
bSafety1      0.003678
bSafety2      0.008620

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro      1.00000     0.42584     0.51372    -0.58116   -0.148959
asc_others     0.42584     1.00000     0.71271     0.03899   -0.155244
bTInc          0.51372     0.71271     1.00000    -0.09330   -0.291282
bCost         -0.58116     0.03899    -0.09330     1.00000    0.042041
bCro          -0.14896    -0.15524    -0.29128     0.04204    1.000000
bWaitEnv1      0.04327     0.09630    -0.19171     0.06854   -0.110463
bWaitEnv2     -0.04871     0.25252     0.02690    -0.15086   -0.092696
bStop1        -0.04079     0.13736    -0.16073     0.05817   -0.134688
bStop2        -0.12814     0.16310    -0.14933     0.04919   -0.128420
bSafety1       0.15605     0.31978     0.06520    -0.03731    0.005985
bSafety2      -0.20653     0.22216    -0.11653     0.16934   -0.034887
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro      0.04327    -0.04871    -0.04079    -0.12814    0.156048
asc_others     0.09630     0.25252     0.13736     0.16310    0.319779
bTInc         -0.19171     0.02690    -0.16073    -0.14933    0.065205
bCost          0.06854    -0.15086     0.05817     0.04919   -0.037306
bCro          -0.11046    -0.09270    -0.13469    -0.12842    0.005985
bWaitEnv1      1.00000     0.37211     0.22110     0.16028    0.049167
bWaitEnv2      0.37211     1.00000     0.03985     0.18491    0.332093
bStop1         0.22110     0.03985     1.00000     0.68859   -0.076040
bStop2         0.16028     0.18491     0.68859     1.00000  6.6788e-04
bSafety1       0.04917     0.33209    -0.07604  6.6788e-04    1.000000
bSafety2       0.18590     0.34530     0.17649     0.24881    0.521149
              bSafety2
asc_metro     -0.20653
asc_others     0.22216
bTInc         -0.11653
bCost          0.16934
bCro          -0.03489
bWaitEnv1      0.18590
bWaitEnv2      0.34530
bStop1         0.17649
bStop2         0.24881
bSafety1       0.52115
bSafety2       1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro      1.00000      0.4535    0.360250   -0.458101    -0.11954
asc_others     0.45349      1.0000    0.703787    0.205721    -0.41642
bTInc          0.36025      0.7038    1.000000    0.181892    -0.36044
bCost         -0.45810      0.2057    0.181892    1.000000    -0.03095
bCro          -0.11954     -0.4164   -0.360444   -0.030954     1.00000
bWaitEnv1      0.24157      0.2811   -0.098300   -0.006596    -0.15990
bWaitEnv2      0.14126      0.3695    0.106425   -0.161386    -0.23221
bStop1         0.20102      0.2204   -0.118737   -0.205932    -0.23701
bStop2         0.09771      0.3687   -0.012766   -0.106423    -0.37742
bSafety1       0.38844      0.3957    0.119521   -0.116925    -0.22633
bSafety2      -0.03813      0.2660    0.004464    0.032271    -0.27690
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro     0.241567      0.1413     0.20102     0.09771     0.38844
asc_others    0.281097      0.3695     0.22041     0.36867     0.39575
bTInc        -0.098300      0.1064    -0.11874    -0.01277     0.11952
bCost        -0.006596     -0.1614    -0.20593    -0.10642    -0.11692
bCro         -0.159904     -0.2322    -0.23701    -0.37742    -0.22633
bWaitEnv1     1.000000      0.5159     0.28106     0.26664     0.26469
bWaitEnv2     0.515937      1.0000     0.16863     0.31354     0.40688
bStop1        0.281058      0.1686     1.00000     0.74940     0.03709
bStop2        0.266640      0.3135     0.74940     1.00000     0.16440
bSafety1      0.264690      0.4069     0.03709     0.16440     1.00000
bSafety2      0.317213      0.5459     0.22938     0.35694     0.44680
              bSafety2
asc_metro    -0.038130
asc_others    0.266005
bTInc         0.004464
bCost         0.032271
bCro         -0.276903
bWaitEnv1     0.317213
bWaitEnv2     0.545945
bStop1        0.229380
bStop2        0.356945
bSafety1      0.446802
bSafety2      1.000000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.03488594
 164          0.06921288
  15          0.11279458
 256          0.11493690
 322          0.11921218
 868          0.12209803
 502          0.13413827
 979          0.16048626
 501          0.16152544
  11          0.16382133
 224          0.16579733
 539          0.16723533
 580          0.16764908
 359          0.16862942
 620          0.16886773
 177          0.17090349
 892          0.17267449
 886          0.17484226
  47          0.17527781
 187          0.17576489

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.31563     0.31563
asc_others       0.000    -2.67749    -2.67749
bTInc            0.000    -0.01539    -0.01539
bCost            0.000    -0.04929    -0.04929
bCro             0.000     0.16082     0.16082
bWaitEnv1        0.000     0.21535     0.21535
bWaitEnv2        0.000     0.39134     0.39134
bStop1           0.000     0.50866     0.50866
bStop2           0.000     0.31531     0.31531
bSafety1         0.000     0.41419     0.41419
bSafety2         0.000     0.35986     0.35986

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_31Mar2025"                                                                                                                    
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.31563281
asc_others 2.67748904
bTInc      0.01538934
bCost      0.04928650
bCro       0.16082406
bWaitEnv1  0.21535246
bWaitEnv2  0.39134315
bStop1     0.50865575
bStop2     0.31531023
bSafety1   0.41418704
bSafety2   0.35985774


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*relInc*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*relInc*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ## Final formulation
  V = list(
    bus = asc_bus + bTInc*relInc*t_bus + bCost*(0.1/relInc)*tc_bus+bCro*(relInc**2)*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*relInc*t_metro + bCost*(0.1/relInc)*tc_metro+ bCro*(relInc**2)*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+
  #     mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
