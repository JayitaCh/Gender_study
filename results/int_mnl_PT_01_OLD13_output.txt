Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:11:33.090111
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -18.082012
     reciprocal of condition number         : 6.7526e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1239.69
Rho-squared vs equal shares                  :  0.2308 
Adj.Rho-squared vs equal shares              :  0.224 
Rho-squared vs observed shares               :  0.1191 
Adj.Rho-squared vs observed shares           :  0.1127 
AIC                                         :  2501.38 
BIC                                         :  2559.58 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:1.01 
     pre-estimation                         :  00:00:0.59 
     estimation                             :  00:00:0.1 
     post-estimation                        :  00:00:0.33 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.135150    0.153694      0.8793    0.199691        0.6768
asc_others    0.168436    0.196675      0.8564    0.210605        0.7998
bTInc        -0.008993  7.9822e-04    -11.2667    0.001064       -8.4548
bCost         0.037647    0.007826      4.8105    0.009707        3.8783
bCro          0.617130    0.074933      8.2357    0.073459        8.4010
bWaitEnv1    -0.021973    0.100397     -0.2189    0.101907       -0.2156
bWaitEnv2     0.164048    0.098026      1.6735    0.111643        1.4694
bStop1        0.142144    0.063626      2.2340    0.078804        1.8038
bStop2        0.018792    0.049477      0.3798    0.056126        0.3348
bSafety1      0.501846    0.102238      4.9086    0.103788        4.8353
bSafety2      0.328911    0.122365      2.6879    0.114806        2.8649


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.023622   -0.011917  -9.479e-06   -0.001043  -6.450e-05  3.7276e-04
asc_others   -0.011917    0.038681   4.624e-05  9.5239e-04    0.003709    0.006723
bTInc       -9.479e-06   4.624e-05   6.372e-07   2.750e-07  -3.330e-06  -1.295e-06
bCost        -0.001043  9.5239e-04   2.750e-07   6.125e-05   4.767e-05   8.751e-05
bCro        -6.450e-05    0.003709  -3.330e-06   4.767e-05    0.005615 -3.8101e-04
bWaitEnv1   3.7276e-04    0.006723  -1.295e-06   8.751e-05 -3.8101e-04    0.010080
bWaitEnv2     0.002588    0.002017  -4.177e-06 -2.2563e-04 -9.3092e-04    0.003044
bStop1     -8.3935e-04    0.002917   3.472e-06   6.392e-05 -1.9868e-04  8.4379e-04
bStop2     -8.7242e-04    0.002356   2.576e-06   3.761e-05 -2.4800e-04  5.1283e-04
bSafety1    7.4888e-04    0.008570  -5.420e-06   4.130e-05  5.3187e-04  3.3528e-04
bSafety2     -0.007111    0.013844   2.264e-06  3.7889e-04   7.843e-05    0.001950
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.002588 -8.3935e-04 -8.7242e-04  7.4888e-04   -0.007111
asc_others    0.002017    0.002917    0.002356    0.008570    0.013844
bTInc       -4.177e-06   3.472e-06   2.576e-06  -5.420e-06   2.264e-06
bCost      -2.2563e-04   6.392e-05   3.761e-05   4.130e-05  3.7889e-04
bCro       -9.3092e-04 -1.9868e-04 -2.4800e-04  5.3187e-04   7.843e-05
bWaitEnv1     0.003044  8.4379e-04  5.1283e-04  3.3528e-04    0.001950
bWaitEnv2     0.009609 -2.4033e-04  3.0015e-04    0.002975    0.002078
bStop1     -2.4033e-04    0.004048    0.002074 -4.7236e-04  7.9062e-04
bStop2      3.0015e-04    0.002074    0.002448  1.0345e-04    0.001258
bSafety1      0.002975 -4.7236e-04  1.0345e-04    0.010453    0.006569
bSafety2      0.002078  7.9062e-04    0.001258    0.006569    0.014973

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.039876   -0.015205  -4.213e-05   -0.001744   2.959e-05   8.608e-05
asc_others   -0.015205    0.044354   6.655e-05    0.001233    0.003644    0.005877
bTInc       -4.213e-05   6.655e-05   1.131e-06   2.250e-06   2.292e-06   9.289e-06
bCost        -0.001744    0.001233   2.250e-06   9.423e-05   7.489e-05  1.0625e-04
bCro         2.959e-05    0.003644   2.292e-06   7.489e-05    0.005396 -9.4800e-04
bWaitEnv1    8.608e-05    0.005877   9.289e-06  1.0625e-04 -9.4800e-04    0.010385
bWaitEnv2     0.007854    0.002246  -2.329e-05 -4.0598e-04   -0.001269    0.004105
bStop1     -2.2335e-04    0.001782  -1.301e-05   2.143e-05 -5.1448e-04    0.001370
bStop2     -1.3496e-04    0.002156  -2.639e-06  -5.910e-06 -2.9542e-04  6.5298e-04
bSafety1      0.004893    0.008243  -2.554e-05  -5.548e-05 -1.7654e-04   7.008e-05
bSafety2     -0.011481    0.015210   7.459e-06  6.4724e-04 -6.4449e-04    0.001781
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.007854 -2.2335e-04 -1.3496e-04    0.004893   -0.011481
asc_others    0.002246    0.001782    0.002156    0.008243    0.015210
bTInc       -2.329e-05  -1.301e-05  -2.639e-06  -2.554e-05   7.459e-06
bCost      -4.0598e-04   2.143e-05  -5.910e-06  -5.548e-05  6.4724e-04
bCro         -0.001269 -5.1448e-04 -2.9542e-04 -1.7654e-04 -6.4449e-04
bWaitEnv1     0.004105    0.001370  6.5298e-04   7.008e-05    0.001781
bWaitEnv2     0.012464 -1.3307e-04  3.2002e-04    0.004281    0.001264
bStop1     -1.3307e-04    0.006210    0.003340  -4.381e-05    0.001848
bStop2      3.2002e-04    0.003340    0.003150  4.6993e-04    0.001671
bSafety1      0.004281  -4.381e-05  4.6993e-04    0.010772    0.004217
bSafety2      0.001264    0.001848    0.001671    0.004217    0.013180

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000     -0.3943    -0.07726    -0.86683   -0.005601     0.02416
asc_others   -0.394253      1.0000     0.29453     0.61876    0.251686     0.34050
bTInc        -0.077261      0.2945     1.00000     0.04402   -0.055680    -0.01616
bCost        -0.866830      0.6188     0.04402     1.00000    0.081280     0.11138
bCro         -0.005601      0.2517    -0.05568     0.08128    1.000000    -0.05065
bWaitEnv1     0.024158      0.3405    -0.01616     0.11138   -0.050645     1.00000
bWaitEnv2     0.171768      0.1046    -0.05339    -0.29412   -0.126735     0.30929
bStop1       -0.085832      0.2331     0.06836     0.12837   -0.041672     0.13209
bStop2       -0.114726      0.2421     0.06523     0.09713   -0.066890     0.10324
bSafety1      0.047659      0.4262    -0.06641     0.05161    0.069426     0.03266
bSafety2     -0.378094      0.5752     0.02318     0.39565    0.008554     0.15872
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.17177    -0.08583    -0.11473     0.04766   -0.378094
asc_others     0.10464     0.23307     0.24207     0.42621    0.575232
bTInc         -0.05339     0.06836     0.06523    -0.06641    0.023176
bCost         -0.29412     0.12837     0.09713     0.05161    0.395652
bCro          -0.12674    -0.04167    -0.06689     0.06943    0.008554
bWaitEnv1      0.30929     0.13209     0.10324     0.03266    0.158716
bWaitEnv2      1.00000    -0.03853     0.06189     0.29688    0.173210
bStop1        -0.03853     1.00000     0.65878    -0.07261    0.101549
bStop2         0.06189     0.65878     1.00000     0.02045    0.207796
bSafety1       0.29688    -0.07261     0.02045     1.00000    0.525109
bSafety2       0.17321     0.10155     0.20780     0.52511    1.000000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000    -0.36155    -0.19836    -0.89967    0.002017    0.004230
asc_others   -0.361550     1.00000     0.29708     0.60304    0.235557    0.273824
bTInc        -0.198357     0.29708     1.00000     0.21796    0.029330    0.085697
bCost        -0.899669     0.60304     0.21796     1.00000    0.105024    0.107410
bCro          0.002017     0.23556     0.02933     0.10502    1.000000   -0.126637
bWaitEnv1     0.004230     0.27382     0.08570     0.10741   -0.126637    1.000000
bWaitEnv2     0.352277     0.09551    -0.19615    -0.37461   -0.154737    0.360784
bStop1       -0.014193     0.10739    -0.15517     0.02801   -0.088875    0.170615
bStop2       -0.012042     0.18239    -0.04421    -0.01085   -0.071654    0.114166
bSafety1      0.236085     0.37710    -0.23133    -0.05507   -0.023155    0.006626
bSafety2     -0.500801     0.62907     0.06108     0.58078   -0.076420    0.152249
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.35228   -0.014193    -0.01204    0.236085    -0.50080
asc_others     0.09551    0.107389     0.18239    0.377104     0.62907
bTInc         -0.19615   -0.155174    -0.04421   -0.231327     0.06108
bCost         -0.37461    0.028009    -0.01085   -0.055069     0.58078
bCro          -0.15474   -0.088875    -0.07165   -0.023155    -0.07642
bWaitEnv1      0.36078    0.170615     0.11417    0.006626     0.15225
bWaitEnv2      1.00000   -0.015125     0.05107    0.369498     0.09859
bStop1        -0.01512    1.000000     0.75509   -0.005357     0.20422
bStop2         0.05107    0.755092     1.00000    0.080672     0.25926
bSafety1       0.36950   -0.005357     0.08067    1.000000     0.35393
bSafety2       0.09859    0.204218     0.25926    0.353929     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 802          0.05714700
 288          0.08666879
 227          0.09730738
 769          0.09798419
 341          0.12709031
 468          0.14799589
 986          0.15253151
 988          0.15945187
 559          0.16716531
 787          0.16775556
 253          0.16840511
 221          0.17404339
 460          0.18094196
 437          0.18845111
 351          0.19047913
 494          0.19326601
 878          0.19436140
 601          0.19639447
 122          0.19661131
 136          0.19770419

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.135150    0.135150
asc_others       0.000    0.168436    0.168436
bTInc            0.000   -0.008993   -0.008993
bCost            0.000    0.037647    0.037647
bCro             0.000    0.617130    0.617130
bWaitEnv1        0.000   -0.021973   -0.021973
bWaitEnv2        0.000    0.164048    0.164048
bStop1           0.000    0.142144    0.142144
bStop2           0.000    0.018792    0.018792
bSafety1         0.000    0.501846    0.501846
bSafety2         0.000    0.328911    0.328911

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.135149745
asc_others 0.168436030
bTInc      0.008993316
bCost      0.037647164
bCro       0.617129689
bWaitEnv1  0.021973469
bWaitEnv2  0.164047612
bStop1     0.142144009
bStop2     0.018791758
bSafety1   0.501846127
bSafety2   0.328910713


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- log(relInc^3)
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop2/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop2/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
