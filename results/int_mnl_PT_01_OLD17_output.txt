Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:22:39.208988
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -18.183823
     reciprocal of condition number         : 9.81143e-07
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1224.07
Rho-squared vs equal shares                  :  0.2405 
Adj.Rho-squared vs equal shares              :  0.2337 
Rho-squared vs observed shares               :  0.1302 
Adj.Rho-squared vs observed shares           :  0.1238 
AIC                                         :  2470.13 
BIC                                         :  2528.33 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.82 
     pre-estimation                         :  00:00:0.44 
     estimation                             :  00:00:0.09 
     post-estimation                        :  00:00:0.29 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.214175    0.113094      1.8938    0.135922        1.5757
asc_others   -1.405127    0.218167     -6.4406    0.221845       -6.3338
bTInc        -0.006133  4.3745e-04    -14.0194  5.8500e-04      -10.4834
bCost         0.009228    0.004111      2.2448    0.004816        1.9160
bCro          0.619601    0.073458      8.4347    0.069412        8.9264
bWaitEnv1     0.083133    0.099888      0.8323    0.101491        0.8191
bWaitEnv2     0.270912    0.094062      2.8801    0.103724        2.6118
bStop1        0.183885    0.060140      3.0576    0.062327        2.9503
bStop2        0.045714    0.046930      0.9741    0.040245        1.1359
bSafety1      0.402731    0.101229      3.9784    0.101119        3.9828
bSafety2      0.213262    0.114894      1.8562    0.102999        2.0705


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.012790 -5.5852e-04   1.488e-05 -3.4030e-04  2.5574e-04  7.5034e-04
asc_others -5.5852e-04    0.047597   4.996e-05  3.7217e-04    0.002861    0.005315
bTInc        1.488e-05   4.996e-05   1.914e-07  -3.411e-07  -1.762e-06  -4.926e-06
bCost      -3.4030e-04  3.7217e-04  -3.411e-07   1.690e-05   1.775e-05   4.864e-05
bCro        2.5574e-04    0.002861  -1.762e-06   1.775e-05    0.005396 -3.1637e-04
bWaitEnv1   7.5034e-04    0.005315  -4.926e-06   4.864e-05 -3.1637e-04    0.009978
bWaitEnv2  -2.9018e-04    0.004668   4.052e-07  -4.585e-05 -8.3769e-04    0.003271
bStop1     -1.3200e-04    0.003320   2.025e-06   2.958e-05 -1.3240e-04  8.1265e-04
bStop2     -8.1427e-04    0.002947   1.393e-06   3.428e-05 -2.9876e-04  5.0738e-04
bSafety1    7.8265e-04    0.008787  -1.646e-07   2.418e-05  3.4466e-04  3.5175e-04
bSafety2     -0.003199    0.010230  -3.177e-06  1.2432e-04 -3.1399e-04    0.001552
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -2.9018e-04 -1.3200e-04 -8.1427e-04  7.8265e-04   -0.003199
asc_others    0.004668    0.003320    0.002947    0.008787    0.010230
bTInc        4.052e-07   2.025e-06   1.393e-06  -1.646e-07  -3.177e-06
bCost       -4.585e-05   2.958e-05   3.428e-05   2.418e-05  1.2432e-04
bCro       -8.3769e-04 -1.3240e-04 -2.9876e-04  3.4466e-04 -3.1399e-04
bWaitEnv1     0.003271  8.1265e-04  5.0738e-04  3.5175e-04    0.001552
bWaitEnv2     0.008848  -4.638e-05  4.1785e-04    0.003212    0.003291
bStop1      -4.638e-05    0.003617    0.001764 -3.3563e-04  5.5984e-04
bStop2      4.1785e-04    0.001764    0.002202  1.4878e-04    0.001138
bSafety1      0.003212 -3.3563e-04  1.4878e-04    0.010247    0.006375
bSafety2      0.003291  5.5984e-04    0.001138    0.006375    0.013201

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.018475    0.001897   2.193e-05 -5.0464e-04    0.002323  7.8671e-04
asc_others    0.001897    0.049215   6.650e-05  3.6283e-04    0.002046    0.005798
bTInc        2.193e-05   6.650e-05   3.422e-07  -4.959e-07   4.205e-06  -3.234e-06
bCost      -5.0464e-04  3.6283e-04  -4.959e-07   2.320e-05  -4.123e-05   7.025e-05
bCro          0.002323    0.002046   4.205e-06  -4.123e-05    0.004818   -0.001083
bWaitEnv1   7.8671e-04    0.005798  -3.234e-06   7.025e-05   -0.001083    0.010300
bWaitEnv2     0.001058    0.007132  -2.924e-06  -2.824e-05 -8.9956e-04    0.004844
bStop1       -0.001178    0.003982   2.191e-06   7.055e-05 -4.5742e-04  8.3952e-04
bStop2       -0.001387    0.003389   1.739e-06   5.657e-05 -4.0595e-04  6.7038e-04
bSafety1      0.002013    0.009561  -8.853e-06   6.357e-05 -3.2497e-04  9.9982e-04
bSafety2     -0.004998    0.009299  -1.070e-05  2.3321e-04   -0.001595    0.001472
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001058   -0.001178   -0.001387    0.002013   -0.004998
asc_others    0.007132    0.003982    0.003389    0.009561    0.009299
bTInc       -2.924e-06   2.191e-06   1.739e-06  -8.853e-06  -1.070e-05
bCost       -2.824e-05   7.055e-05   5.657e-05   6.357e-05  2.3321e-04
bCro       -8.9956e-04 -4.5742e-04 -4.0595e-04 -3.2497e-04   -0.001595
bWaitEnv1     0.004844  8.3952e-04  6.7038e-04  9.9982e-04    0.001472
bWaitEnv2     0.010759 -2.9654e-04  3.6549e-04    0.004075    0.003822
bStop1     -2.9654e-04    0.003885    0.001618  -3.729e-05    0.001449
bStop2      3.6549e-04    0.001618    0.001620  4.3294e-04    0.001552
bSafety1      0.004075  -3.729e-05  4.3294e-04    0.010225    0.004954
bSafety2      0.003822    0.001449    0.001552    0.004954    0.010609

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000    -0.02264    0.300747    -0.73197     0.03078     0.06642
asc_others    -0.02264     1.00000    0.523444     0.41498     0.17851     0.24390
bTInc          0.30075     0.52344    1.000000    -0.18969    -0.05484    -0.11274
bCost         -0.73197     0.41498   -0.189686     1.00000     0.05879     0.11846
bCro           0.03078     0.17851   -0.054844     0.05879     1.00000    -0.04312
bWaitEnv1      0.06642     0.24390   -0.112738     0.11846    -0.04312     1.00000
bWaitEnv2     -0.02728     0.22746    0.009847    -0.11857    -0.12124     0.34810
bStop1        -0.01941     0.25303    0.076959     0.11966    -0.02997     0.13528
bStop2        -0.15342     0.28779    0.067835     0.17768    -0.08666     0.10824
bSafety1       0.06836     0.39786   -0.003716     0.05811     0.04635     0.03479
bSafety2      -0.24618     0.40812   -0.063202     0.26322    -0.03720     0.13520
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.027278   -0.019407    -0.15342    0.068363    -0.24618
asc_others    0.227462    0.253028     0.28779    0.397863     0.40812
bTInc         0.009847    0.076959     0.06784   -0.003716    -0.06320
bCost        -0.118567    0.119661     0.17768    0.058115     0.26322
bCro         -0.121235   -0.029971    -0.08666    0.046350    -0.03720
bWaitEnv1     0.348105    0.135277     0.10824    0.034787     0.13520
bWaitEnv2     1.000000   -0.008199     0.09466    0.337280     0.30451
bStop1       -0.008199    1.000000     0.62501   -0.055131     0.08102
bStop2        0.094658    0.625015     1.00000    0.031317     0.21100
bSafety1      0.337280   -0.055131     0.03132    1.000000     0.54808
bSafety2      0.304506    0.081022     0.21100    0.548081     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.06292     0.27580    -0.77088     0.24619     0.05703
asc_others     0.06292     1.00000     0.51244     0.33958     0.13284     0.25752
bTInc          0.27580     0.51244     1.00000    -0.17600     0.10356    -0.05447
bCost         -0.77088     0.33958    -0.17600     1.00000    -0.12332     0.14373
bCro           0.24619     0.13284     0.10356    -0.12332     1.00000    -0.15369
bWaitEnv1      0.05703     0.25752    -0.05447     0.14373    -0.15369     1.00000
bWaitEnv2      0.07507     0.30995    -0.04818    -0.05652    -0.12494     0.46018
bStop1        -0.13906     0.28802     0.06010     0.23501    -0.10573     0.13272
bStop2        -0.25348     0.37953     0.07388     0.29187    -0.14532     0.16413
bSafety1       0.14649     0.42623    -0.14965     0.13054    -0.04630     0.09742
bSafety2      -0.35702     0.40697    -0.17763     0.47012    -0.22306     0.14079
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.07507   -0.139062    -0.25348    0.146489     -0.3570
asc_others     0.30995    0.288024     0.37953    0.426230      0.4070
bTInc         -0.04818    0.060099     0.07388   -0.149651     -0.1776
bCost         -0.05652    0.235012     0.29187    0.130538      0.4701
bCro          -0.12494   -0.105733    -0.14532   -0.046299     -0.2231
bWaitEnv1      0.46018    0.132719     0.16413    0.097424      0.1408
bWaitEnv2      1.00000   -0.045869     0.08756    0.388529      0.3577
bStop1        -0.04587    1.000000     0.64512   -0.005917      0.2256
bStop2         0.08756    0.645125     1.00000    0.106384      0.3744
bSafety1       0.38853   -0.005917     0.10638    1.000000      0.4756
bSafety2       0.35773    0.225647     0.37441    0.475648      1.0000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 769          0.05701824
 227          0.08800225
  77          0.08959605
 136          0.09720852
 469          0.11787466
 712          0.12014199
 341          0.12164057
 288          0.12170970
  83          0.12897849
 657          0.16634911
 537          0.16712948
 170          0.16888042
 581          0.16962392
 780          0.17040167
 802          0.17147879
 460          0.17618744
 717          0.17631351
 437          0.17805003
 878          0.17821826
 486          0.18233265

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.214175    0.214175
asc_others       0.000   -1.405127   -1.405127
bTInc            0.000   -0.006133   -0.006133
bCost            0.000    0.009228    0.009228
bCro             0.000    0.619601    0.619601
bWaitEnv1        0.000    0.083133    0.083133
bWaitEnv2        0.000    0.270912    0.270912
bStop1           0.000    0.183885    0.183885
bStop2           0.000    0.045714    0.045714
bSafety1         0.000    0.402731    0.402731
bSafety2         0.000    0.213262    0.213262

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.214175356
asc_others 1.405126627
bTInc      0.006132776
bCost      0.009227796
bCro       0.619600685
bWaitEnv1  0.083133114
bWaitEnv2  0.270912144
bStop1     0.183884639
bStop2     0.045714432
bSafety1   0.402731322
bSafety2   0.213261997


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*relInc*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop2/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*relInc*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop2/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
