Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_nonPT_03
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-14 18:21:31.780412
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -20.344093
     reciprocal of condition number         : 7.47149e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1227.66
Rho-squared vs equal shares                  :  0.2383 
Adj.Rho-squared vs equal shares              :  0.2314 
Rho-squared vs observed shares               :  0.1276 
Adj.Rho-squared vs observed shares           :  0.1212 
AIC                                         :  2477.31 
BIC                                         :  2535.51 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.94 
     pre-estimation                         :  00:00:0.44 
     estimation                             :  00:00:0.12 
     post-estimation                        :  00:00:0.39 
Iterations                                  :  11  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.849858     0.07632    11.13608    0.090438       9.39713
asc_others   -0.808143     0.19616    -4.11984    0.223859      -3.61005
bTInc        -0.011154  9.4754e-04   -11.77188    0.001363      -8.18623
bCost        -0.041140     0.01062    -3.87504    0.013293      -3.09475
bCro          0.593673     0.07493     7.92299    0.070799       8.38536
bWaitEnv1    -0.004324     0.09303    -0.04649    0.095463      -0.04530
bWaitEnv2     0.285942     0.08498     3.36486    0.093396       3.06162
bStop1        0.159064     0.10923     1.45629    0.113843       1.39723
bStop2       -0.235540     0.09367    -2.51461    0.096319      -2.44542
bSafety1      0.503871     0.10144     4.96714    0.101222       4.97790
bSafety2      0.081885     0.11081     0.73899    0.092332       0.88685


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.005824    0.004048  -5.035e-06  -7.975e-06  6.6522e-04    0.001691
asc_others    0.004048    0.038478   9.702e-05    0.001078    0.002454    0.005595
bTInc       -5.035e-06   9.702e-05   8.978e-07   4.634e-06  -2.721e-06   2.842e-06
bCost       -7.975e-06    0.001078   4.634e-06  1.1271e-04   1.449e-05   4.905e-05
bCro        6.6522e-04    0.002454  -2.721e-06   1.449e-05    0.005615 -4.2728e-04
bWaitEnv1     0.001691    0.005595   2.842e-06   4.905e-05 -4.2728e-04    0.008654
bWaitEnv2    -0.001107    0.005822   2.270e-06  1.1921e-04 -7.1301e-04    0.002769
bStop1      7.5920e-04    0.006614  -4.602e-06  -1.637e-05 -9.3681e-04    0.001197
bStop2     -8.2852e-04    0.006229   4.858e-07   3.247e-05   -0.001119  9.7116e-04
bSafety1      0.001372    0.007830  -4.165e-06   4.870e-05  4.1894e-04  3.0282e-04
bSafety2   -5.8337e-04    0.009027   1.978e-06   4.399e-05 -3.1117e-04    0.001101
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.001107  7.5920e-04 -8.2852e-04    0.001372 -5.8337e-04
asc_others    0.005822    0.006614    0.006229    0.007830    0.009027
bTInc        2.270e-06  -4.602e-06   4.858e-07  -4.165e-06   1.978e-06
bCost       1.1921e-04  -1.637e-05   3.247e-05   4.870e-05   4.399e-05
bCro       -7.1301e-04 -9.3681e-04   -0.001119  4.1894e-04 -3.1117e-04
bWaitEnv1     0.002769    0.001197  9.7116e-04  3.0282e-04    0.001101
bWaitEnv2     0.007221  1.3125e-04    0.001173    0.002983    0.003153
bStop1      1.3125e-04    0.011930    0.006520 -7.3972e-04    0.001474
bStop2        0.001173    0.006520    0.008774  -1.712e-06    0.002229
bSafety1      0.002983 -7.3972e-04  -1.712e-06    0.010290    0.006110
bSafety2      0.003153    0.001474    0.002229    0.006110    0.012278

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.008179    0.007304  -7.344e-06  -6.024e-05    0.001276    0.001739
asc_others    0.007304    0.050113  1.6365e-04    0.001573  9.1328e-04    0.006827
bTInc       -7.344e-06  1.6365e-04   1.857e-06   1.003e-05  -6.737e-06   2.328e-05
bCost       -6.024e-05    0.001573   1.003e-05  1.7672e-04  -8.844e-05  1.4618e-04
bCro          0.001276  9.1328e-04  -6.737e-06  -8.844e-05    0.005012 -7.7303e-04
bWaitEnv1     0.001739    0.006827   2.328e-05  1.4618e-04 -7.7303e-04    0.009113
bWaitEnv2   2.7229e-04    0.008133   3.616e-06  2.5705e-04 -5.0204e-04    0.003734
bStop1        0.001722    0.009425  -6.682e-06  1.6437e-04   -0.001472    0.001892
bStop2       -0.001258    0.008468   1.302e-05  1.5966e-04   -0.001053    0.001345
bSafety1      0.004228    0.008060  -2.444e-05   9.210e-05   8.497e-05 -1.5992e-04
bSafety2    2.7183e-04    0.008917  -3.225e-06  1.1886e-04   -0.001119  3.6328e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   2.7229e-04    0.001722   -0.001258    0.004228  2.7183e-04
asc_others    0.008133    0.009425    0.008468    0.008060    0.008917
bTInc        3.616e-06  -6.682e-06   1.302e-05  -2.444e-05  -3.225e-06
bCost       2.5705e-04  1.6437e-04  1.5966e-04   9.210e-05  1.1886e-04
bCro       -5.0204e-04   -0.001472   -0.001053   8.497e-05   -0.001119
bWaitEnv1     0.003734    0.001892    0.001345 -1.5992e-04  3.6328e-04
bWaitEnv2     0.008723  1.7088e-04  1.3259e-04    0.003256    0.003466
bStop1      1.7088e-04    0.012960    0.007455 -3.6220e-04    0.003556
bStop2      1.3259e-04    0.007455    0.009277 -8.9786e-04    0.003369
bSafety1      0.003256 -3.6220e-04 -8.9786e-04    0.010246    0.003780
bSafety2      0.003466    0.003556    0.003369    0.003780    0.008525

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000      0.2704   -0.069627   -0.009844     0.11633     0.23820
asc_others    0.270432      1.0000    0.521979    0.517830     0.16696     0.30659
bTInc        -0.069627      0.5220    1.000000    0.460603    -0.03832     0.03224
bCost        -0.009844      0.5178    0.460603    1.000000     0.01822     0.04966
bCro          0.116330      0.1670   -0.038323    0.018219     1.00000    -0.06130
bWaitEnv1     0.238201      0.3066    0.032237    0.049661    -0.06130     1.00000
bWaitEnv2    -0.170722      0.3492    0.028196    0.132129    -0.11198     0.35032
bStop1        0.091079      0.3087   -0.044468   -0.014115    -0.11446     0.11779
bStop2       -0.115903      0.3390    0.005473    0.032650    -0.15944     0.11145
bSafety1      0.177165      0.3935   -0.043333    0.045222     0.05512     0.03209
bSafety2     -0.068987      0.4153    0.018843    0.037393    -0.03748     0.10677
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     -0.17072     0.09108   -0.115903     0.17717    -0.06899
asc_others     0.34924     0.30871    0.339020     0.39347     0.41528
bTInc          0.02820    -0.04447    0.005473    -0.04333     0.01884
bCost          0.13213    -0.01412    0.032650     0.04522     0.03739
bCro          -0.11198    -0.11446   -0.159438     0.05512    -0.03748
bWaitEnv1      0.35032     0.11779    0.111451     0.03209     0.10677
bWaitEnv2      1.00000     0.01414    0.147409     0.34601     0.33483
bStop1         0.01414     1.00000    0.637284    -0.06676     0.12178
bStop2         0.14741     0.63728    1.000000 -1.8016e-04     0.21473
bSafety1       0.34601    -0.06676 -1.8016e-04     1.00000     0.54361
bSafety2       0.33483     0.12178    0.214734     0.54361     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.36080    -0.05960    -0.05010     0.19935     0.20141
asc_others     0.36080     1.00000     0.53651     0.52864     0.05762     0.31946
bTInc         -0.05960     0.53651     1.00000     0.55374    -0.06984     0.17896
bCost         -0.05010     0.52864     0.55374     1.00000    -0.09396     0.11519
bCro           0.19935     0.05762    -0.06984    -0.09396     1.00000    -0.11438
bWaitEnv1      0.20141     0.31946     0.17896     0.11519    -0.11438     1.00000
bWaitEnv2      0.03224     0.38901     0.02842     0.20704    -0.07593     0.41882
bStop1         0.16722     0.36984    -0.04307     0.10862    -0.18267     0.17408
bStop2        -0.14447     0.39273     0.09921     0.12470    -0.15439     0.14628
bSafety1       0.46191     0.35570    -0.17718     0.06845     0.01186    -0.01655
bSafety2       0.03255     0.43141    -0.02563     0.09684    -0.17114     0.04121
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.03224     0.16722    -0.14447     0.46191     0.03255
asc_others     0.38901     0.36984     0.39273     0.35570     0.43141
bTInc          0.02842    -0.04307     0.09921    -0.17718    -0.02563
bCost          0.20704     0.10862     0.12470     0.06845     0.09684
bCro          -0.07593    -0.18267    -0.15439     0.01186    -0.17114
bWaitEnv1      0.41882     0.17408     0.14628    -0.01655     0.04121
bWaitEnv2      1.00000     0.01607     0.01474     0.34437     0.40191
bStop1         0.01607     1.00000     0.67987    -0.03143     0.33827
bStop2         0.01474     0.67987     1.00000    -0.09209     0.37878
bSafety1       0.34437    -0.03143    -0.09209     1.00000     0.40444
bSafety2       0.40191     0.33827     0.37878     0.40444     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 802          0.03001811
 288          0.06857559
 227          0.08698631
 769          0.09468990
 341          0.10585757
 559          0.11011742
 468          0.12084372
 986          0.12116878
 460          0.12652545
 787          0.13650936
 717          0.16183707
 437          0.18229249
 136          0.18502951
 780          0.18708991
 486          0.18883468
 657          0.19032674
 170          0.20247448
 134          0.20955538
 124          0.21178534
 469          0.21585277

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.849858    0.849858
asc_others       0.000   -0.808143   -0.808143
bTInc            0.000   -0.011154   -0.011154
bCost            0.000   -0.041140   -0.041140
bCro             0.000    0.593673    0.593673
bWaitEnv1        0.000   -0.004324   -0.004324
bWaitEnv2        0.000    0.285942    0.285942
bStop1           0.000    0.159064    0.159064
bStop2           0.000   -0.235540   -0.235540
bSafety1         0.000    0.503871    0.503871
bSafety2         0.000    0.081885    0.081885

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_nonPT_03"                                                                                                                        
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.849858373
asc_others 0.808142980
bTInc      0.011154366
bCost      0.041140096
bCro       0.593672991
bWaitEnv1  0.004324451
bWaitEnv2  0.285941839
bStop1     0.159064019
bStop2     0.235540445
bSafety1   0.503871116
bSafety2   0.081885373


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
      bWaitEnv1*(1/relAge)*(swaitenv_bus ==1) + bWaitEnv2*(1/relAge)*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(1/relAge)*(swaitenv_metro ==1) + bWaitEnv2*(1/relAge)*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
