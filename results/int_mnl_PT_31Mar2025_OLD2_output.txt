Model run by geojch using Apollo 0.3.5 on R 4.4.2 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_31Mar2025
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-04-17 17:11:42.419651
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -14.036431
     reciprocal of condition number         : 1.89007e-05
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1192.38
Rho-squared vs equal shares                  :  0.292 
Adj.Rho-squared vs equal shares              :  0.2855 
Rho-squared vs observed shares               :  0.0515 
Adj.Rho-squared vs observed shares           :  0.0443 
AIC                                         :  2406.77 
BIC                                         :  2465.45 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:1.11 
     pre-estimation                         :  00:00:0.66 
     estimation                             :  00:00:0.17 
     post-estimation                        :  00:00:0.28 
Iterations                                  :  11  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.28932    0.100643       2.875    0.096568         2.996
asc_others    -2.75855    0.257578     -10.710    0.289729        -9.521
bTInc         -0.01651    0.002399      -6.885    0.002359        -7.002
bCost         -0.04821    0.014937      -3.227    0.013712        -3.516
bCro           0.15574    0.061374       2.538    0.066643         2.337
bWaitEnv1      0.22590    0.090044       2.509    0.093902         2.406
bWaitEnv2      0.38837    0.089402       4.344    0.096656         4.018
bStop1         0.52216    0.101651       5.137    0.101289         5.155
bStop2         0.32467    0.087723       3.701    0.091646         3.543
bSafety1       0.41050    0.090533       4.534    0.089401         4.592
bSafety2       0.36912    0.104062       3.547    0.093222         3.960


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1   bWaitEnv2
asc_metro     0.010129    0.011372  1.2662e-04 -8.8791e-04 -8.7558e-04  3.1417e-04 -4.1981e-04
asc_others    0.011372    0.066346  4.4665e-04   8.268e-05   -0.002276    0.001985    0.005784
bTInc       1.2662e-04  4.4665e-04   5.754e-06  -3.861e-06  -3.997e-05  -4.298e-05   6.041e-06
bCost      -8.8791e-04   8.268e-05  -3.861e-06  2.2312e-04   3.898e-05   9.722e-05 -1.9804e-04
bCro       -8.7558e-04   -0.002276  -3.997e-05   3.898e-05    0.003767 -6.1555e-04 -5.4022e-04
bWaitEnv1   3.1417e-04    0.001985  -4.298e-05   9.722e-05 -6.1555e-04    0.008108    0.003002
bWaitEnv2  -4.1981e-04    0.005784   6.041e-06 -1.9804e-04 -5.4022e-04    0.003002    0.007993
bStop1     -5.6836e-04    0.003215  -4.266e-05  1.0544e-04 -7.9691e-04    0.002041  3.4506e-04
bStop2       -0.001257    0.003366  -3.428e-05   8.316e-05 -6.5457e-04    0.001284    0.001430
bSafety1      0.001451    0.007419   1.472e-05  -5.903e-05  -2.972e-05  4.1836e-04    0.002713
bSafety2     -0.002222    0.005599  -3.113e-05  2.6728e-04 -2.9672e-04    0.001777    0.003217
                bStop1      bStop2    bSafety1    bSafety2
asc_metro  -5.6836e-04   -0.001257    0.001451   -0.002222
asc_others    0.003215    0.003366    0.007419    0.005599
bTInc       -4.266e-05  -3.428e-05   1.472e-05  -3.113e-05
bCost       1.0544e-04   8.316e-05  -5.903e-05  2.6728e-04
bCro       -7.9691e-04 -6.5457e-04  -2.972e-05 -2.9672e-04
bWaitEnv1     0.002041    0.001284  4.1836e-04    0.001777
bWaitEnv2   3.4506e-04    0.001430    0.002713    0.003217
bStop1        0.010333    0.006152 -6.7882e-04    0.001942
bStop2        0.006152    0.007695   1.429e-05    0.002327
bSafety1   -6.7882e-04   1.429e-05    0.008196    0.004886
bSafety2      0.001942    0.002327    0.004886    0.010829

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1   bWaitEnv2
asc_metro     0.009325    0.013513   9.247e-05 -6.2028e-04 -8.6375e-04    0.002001    0.001337
asc_others    0.013513    0.083943  4.8990e-04  6.7956e-04   -0.007881    0.007274    0.010489
bTInc        9.247e-05  4.8990e-04   5.563e-06   4.387e-06  -5.556e-05  -2.293e-05   2.581e-05
bCost      -6.2028e-04  6.7956e-04   4.387e-06  1.8803e-04  -1.914e-05   1.627e-05 -2.0419e-04
bCro       -8.6375e-04   -0.007881  -5.556e-05  -1.914e-05    0.004441   -0.001008   -0.001457
bWaitEnv1     0.002001    0.007274  -2.293e-05   1.627e-05   -0.001008    0.008818    0.004623
bWaitEnv2     0.001337    0.010489   2.581e-05 -2.0419e-04   -0.001457    0.004623    0.009342
bStop1        0.001655    0.005609  -3.572e-05 -2.5877e-04   -0.001592    0.002787    0.001590
bStop2      6.4334e-04    0.009196  -8.465e-06 -1.0707e-04   -0.002217    0.002357    0.002745
bSafety1      0.003322    0.010197   2.401e-05 -1.5459e-04   -0.001247    0.002157    0.003544
bSafety2   -4.6480e-04    0.006673  -4.556e-06   4.793e-05   -0.001648    0.002789    0.004885
                bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001655  6.4334e-04    0.003322 -4.6480e-04
asc_others    0.005609    0.009196    0.010197    0.006673
bTInc       -3.572e-05  -8.465e-06   2.401e-05  -4.556e-06
bCost      -2.5877e-04 -1.0707e-04 -1.5459e-04   4.793e-05
bCro         -0.001592   -0.002217   -0.001247   -0.001648
bWaitEnv1     0.002787    0.002357    0.002157    0.002789
bWaitEnv2     0.001590    0.002745    0.003544    0.004885
bStop1        0.010260    0.006949  3.1434e-04    0.002223
bStop2        0.006949    0.008399    0.001338    0.003116
bSafety1    3.1434e-04    0.001338    0.007993    0.003715
bSafety2      0.002223    0.003116    0.003715    0.008690

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1   bWaitEnv2
asc_metro      1.00000     0.43866     0.52446    -0.59063   -0.141752     0.03467    -0.04666
asc_others     0.43866     1.00000     0.72288     0.02149   -0.143962     0.08558     0.25119
bTInc          0.52446     0.72288     1.00000    -0.10776   -0.271463    -0.19898     0.02817
bCost         -0.59063     0.02149    -0.10776     1.00000    0.042524     0.07228    -0.14830
bCro          -0.14175    -0.14396    -0.27146     0.04252    1.000000    -0.11138    -0.09845
bWaitEnv1      0.03467     0.08558    -0.19898     0.07228   -0.111384     1.00000     0.37294
bWaitEnv2     -0.04666     0.25119     0.02817    -0.14830   -0.098454     0.37294     1.00000
bStop1        -0.05556     0.12281    -0.17496     0.06944   -0.127736     0.22297     0.03797
bStop2        -0.14237     0.14897    -0.16292     0.06347   -0.121579     0.16261     0.18230
bSafety1       0.15929     0.31816     0.06780    -0.04365   -0.005349     0.05132     0.33522
bSafety2      -0.21219     0.20890    -0.12472     0.17195   -0.046459     0.18966     0.34579
                bStop1      bStop2    bSafety1    bSafety2
asc_metro     -0.05556   -0.142369    0.159288    -0.21219
asc_others     0.12281    0.148975    0.318163     0.20890
bTInc         -0.17496   -0.162916    0.067800    -0.12472
bCost          0.06944    0.063465   -0.043652     0.17195
bCro          -0.12774   -0.121579   -0.005349    -0.04646
bWaitEnv1      0.22297    0.162615    0.051321     0.18966
bWaitEnv2      0.03797    0.182305    0.335216     0.34579
bStop1         1.00000    0.689890   -0.073763     0.18361
bStop2         0.68989    1.000000    0.001800     0.25491
bSafety1      -0.07376    0.001800    1.000000     0.51863
bSafety2       0.18361    0.254914    0.518627     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1   bWaitEnv2
asc_metro      1.00000      0.4830     0.40597    -0.46842    -0.13422     0.22066      0.1432
asc_others     0.48299      1.0000     0.71688     0.17105    -0.40819     0.26736      0.3746
bTInc          0.40597      0.7169     1.00000     0.13564    -0.35349    -0.10352      0.1132
bCost         -0.46842      0.1710     0.13564     1.00000    -0.02095     0.01263     -0.1541
bCro          -0.13422     -0.4082    -0.35349    -0.02095     1.00000    -0.16109     -0.2262
bWaitEnv1      0.22066      0.2674    -0.10352     0.01263    -0.16109     1.00000      0.5093
bWaitEnv2      0.14322      0.3746     0.11320    -0.15406    -0.22623     0.50934      1.0000
bStop1         0.16919      0.1911    -0.14953    -0.18631    -0.23589     0.29303      0.1624
bStop2         0.07269      0.3463    -0.03916    -0.08520    -0.36293     0.27393      0.3099
bSafety1       0.38476      0.3937     0.11387    -0.12610    -0.20935     0.25697      0.4101
bSafety2      -0.05163      0.2471    -0.02072     0.03750    -0.26534     0.31865      0.5421
                bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.16919     0.07269     0.38476    -0.05163
asc_others     0.19113     0.34632     0.39366     0.24706
bTInc         -0.14953    -0.03916     0.11387    -0.02072
bCost         -0.18631    -0.08520    -0.12610     0.03750
bCro          -0.23589    -0.36293    -0.20935    -0.26534
bWaitEnv1      0.29303     0.27393     0.25697     0.31865
bWaitEnv2      0.16239     0.30991     0.41007     0.54212
bStop1         1.00000     0.74854     0.03471     0.23543
bStop2         0.74854     1.00000     0.16335     0.36470
bSafety1       0.03471     0.16335     1.00000     0.44581
bSafety2       0.23543     0.36470     0.44581     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.03373547
 164          0.06218643
 868          0.11329011
 502          0.11522104
 256          0.12825616
 322          0.13664506
  15          0.13848796
 979          0.15621345
 759          0.15830964
 448          0.16358103
 725          0.16427797
  11          0.16454939
 886          0.16680124
 501          0.16704393
  23          0.16754105
 449          0.16989532
 539          0.17111766
 888          0.17154923
 224          0.17370658
 920          0.17627541

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.28932     0.28932
asc_others       0.000    -2.75855    -2.75855
bTInc            0.000    -0.01651    -0.01651
bCost            0.000    -0.04821    -0.04821
bCro             0.000     0.15574     0.15574
bWaitEnv1        0.000     0.22590     0.22590
bWaitEnv2        0.000     0.38837     0.38837
bStop1           0.000     0.52216     0.52216
bStop2           0.000     0.32467     0.32467
bSafety1         0.000     0.41050     0.41050
bSafety2         0.000     0.36912     0.36912

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_31Mar2025"                                                                                                                    
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.28932144
asc_others 2.75854700
bTInc      0.01651483
bCost      0.04820661
bCro       0.15573949
bWaitEnv1  0.22589806
bWaitEnv2  0.38837167
bStop1     0.52215662
bStop2     0.32466855
bSafety1   0.41049932
bSafety2   0.36912467


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*relInc*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*relInc*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ## Final formulation
  V = list(
    bus = asc_bus + bTInc*relInc*t_bus + bCost*(0.1/relInc)*tc_bus+bCro*(relInc**2)*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*relInc*t_metro + bCost*(0.1/relInc)*tc_metro+ bCro*(relInc**2)*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+
  #     mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
