Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:07:25.055898
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -18.459946
     reciprocal of condition number         : 9.97155e-07
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1233.1
Rho-squared vs equal shares                  :  0.2349 
Adj.Rho-squared vs equal shares              :  0.2281 
Rho-squared vs observed shares               :  0.1237 
Adj.Rho-squared vs observed shares           :  0.1173 
AIC                                         :  2488.2 
BIC                                         :  2546.4 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:1.01 
     pre-estimation                         :  00:00:0.6 
     estimation                             :  00:00:0.1 
     post-estimation                        :  00:00:0.31 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.191436    0.113399      1.6882    0.137688        1.3904
asc_others   -1.316364    0.215859     -6.0983    0.223644       -5.8860
bTInc        -0.005923  4.3422e-04    -13.6397  5.6586e-04      -10.4667
bCost         0.010388    0.004068      2.5536    0.004877        2.1300
bCro          0.612207    0.073506      8.3287    0.070185        8.7228
bWaitEnv1     0.081944    0.099663      0.8222    0.100728        0.8135
bWaitEnv2     0.267032    0.093875      2.8445    0.103444        2.5814
bStop1        0.177228    0.059687      2.9693    0.062878        2.8186
bStop2        0.060593    0.047055      1.2877    0.041863        1.4474
bSafety1      0.393601    0.101129      3.8921    0.100676        3.9096
bSafety2      0.227363    0.115566      1.9674    0.104615        2.1733


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.012859 -4.7682e-04   1.491e-05 -3.3753e-04  2.9558e-04  8.2701e-04
asc_others -4.7682e-04    0.046595   4.872e-05  3.6396e-04    0.002799    0.005195
bTInc        1.491e-05   4.872e-05   1.885e-07  -3.357e-07  -1.735e-06  -5.037e-06
bCost      -3.3753e-04  3.6396e-04  -3.357e-07   1.655e-05   1.577e-05   4.481e-05
bCro        2.9558e-04    0.002799  -1.735e-06   1.577e-05    0.005403 -3.4319e-04
bWaitEnv1   8.2701e-04    0.005195  -5.037e-06   4.481e-05 -3.4319e-04    0.009933
bWaitEnv2  -2.6750e-04    0.004508   3.325e-07  -4.726e-05 -8.6100e-04    0.003232
bStop1     -1.7043e-04    0.003270   2.101e-06   3.027e-05 -1.9210e-04  7.6200e-04
bStop2     -8.4673e-04    0.003008   1.395e-06   3.607e-05 -3.0618e-04  5.2054e-04
bSafety1    7.6544e-04    0.008741  -8.371e-08   2.547e-05  3.2140e-04  3.5186e-04
bSafety2     -0.003388    0.010411  -3.051e-06  1.3199e-04 -3.2239e-04    0.001603
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -2.6750e-04 -1.7043e-04 -8.4673e-04  7.6544e-04   -0.003388
asc_others    0.004508    0.003270    0.003008    0.008741    0.010411
bTInc        3.325e-07   2.101e-06   1.395e-06  -8.371e-08  -3.051e-06
bCost       -4.726e-05   3.027e-05   3.607e-05   2.547e-05  1.3199e-04
bCro       -8.6100e-04 -1.9210e-04 -3.0618e-04  3.2140e-04 -3.2239e-04
bWaitEnv1     0.003232  7.6200e-04  5.2054e-04  3.5186e-04    0.001603
bWaitEnv2     0.008813  -9.430e-05  3.9058e-04    0.003139    0.003201
bStop1      -9.430e-05    0.003563    0.001799 -4.0809e-04  5.7674e-04
bStop2      3.9058e-04    0.001799    0.002214  1.1781e-04    0.001168
bSafety1      0.003139 -4.0809e-04  1.1781e-04    0.010227    0.006401
bSafety2      0.003201  5.7674e-04    0.001168    0.006401    0.013356

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.018958    0.001499   2.210e-05 -5.1348e-04    0.002387    0.001021
asc_others    0.001499    0.050017   6.325e-05  4.1651e-04    0.002033    0.006267
bTInc        2.210e-05   6.325e-05   3.202e-07  -3.826e-07   4.165e-06  -1.751e-06
bCost      -5.1348e-04  4.1651e-04  -3.826e-07   2.379e-05  -4.271e-05   6.522e-05
bCro          0.002387    0.002033   4.165e-06  -4.271e-05    0.004926   -0.001030
bWaitEnv1     0.001021    0.006267  -1.751e-06   6.522e-05   -0.001030    0.010146
bWaitEnv2     0.001297    0.006475  -3.198e-06  -4.678e-05 -9.5629e-04    0.004573
bStop1       -0.001221    0.004339   2.607e-06   7.552e-05 -4.6431e-04  8.9789e-04
bStop2       -0.001496    0.003682   1.624e-06   6.239e-05 -3.6148e-04  7.1468e-04
bSafety1      0.001758    0.009514  -8.787e-06   7.421e-05 -4.0468e-04    0.001029
bSafety2     -0.005514    0.009629  -9.922e-06  2.5047e-04   -0.001719    0.001531
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001297   -0.001221   -0.001496    0.001758   -0.005514
asc_others    0.006475    0.004339    0.003682    0.009514    0.009629
bTInc       -3.198e-06   2.607e-06   1.624e-06  -8.787e-06  -9.922e-06
bCost       -4.678e-05   7.552e-05   6.239e-05   7.421e-05  2.5047e-04
bCro       -9.5629e-04 -4.6431e-04 -3.6148e-04 -4.0468e-04   -0.001719
bWaitEnv1     0.004573  8.9789e-04  7.1468e-04    0.001029    0.001531
bWaitEnv2     0.010701 -4.1336e-04  3.2441e-04    0.003879    0.003578
bStop1     -4.1336e-04    0.003954    0.001813 -1.0144e-04    0.001469
bStop2      3.2441e-04    0.001813    0.001753  4.4104e-04    0.001639
bSafety1      0.003879 -1.0144e-04  4.4104e-04    0.010136    0.005024
bSafety2      0.003578    0.001469    0.001639    0.005024    0.010944

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000    -0.01948    0.302759    -0.73165     0.03546     0.07318
asc_others    -0.01948     1.00000    0.519765     0.41445     0.17640     0.24147
bTInc          0.30276     0.51977    1.000000    -0.19002    -0.05435    -0.11640
bCost         -0.73165     0.41445   -0.190023     1.00000     0.05273     0.11053
bCro           0.03546     0.17640   -0.054351     0.05273     1.00000    -0.04685
bWaitEnv1      0.07318     0.24147   -0.116402     0.11053    -0.04685     1.00000
bWaitEnv2     -0.02513     0.22245    0.008157    -0.12376    -0.12478     0.34542
bStop1        -0.02518     0.25381    0.081079     0.12464    -0.04378     0.12810
bStop2        -0.15868     0.29611    0.068257     0.18841    -0.08852     0.11100
bSafety1       0.06675     0.40041   -0.001906     0.06191     0.04324     0.03491
bSafety2      -0.25853     0.41736   -0.060801     0.28073    -0.03795     0.13921
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.025129    -0.02518    -0.15868    0.066746    -0.25853
asc_others    0.222450     0.25381     0.29611    0.400413     0.41736
bTInc         0.008157     0.08108     0.06826   -0.001906    -0.06080
bCost        -0.123761     0.12464     0.18841    0.061908     0.28073
bCro         -0.124777    -0.04378    -0.08852    0.043236    -0.03795
bWaitEnv1     0.345425     0.12810     0.11100    0.034911     0.13921
bWaitEnv2     1.000000    -0.01683     0.08842    0.330691     0.29509
bStop1       -0.016830     1.00000     0.64067   -0.067609     0.08361
bStop2        0.088421     0.64067     1.00000    0.024757     0.21482
bSafety1      0.330691    -0.06761     0.02476    1.000000     0.54769
bSafety2      0.295090     0.08361     0.21482    0.547690     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.04867     0.28370    -0.76465     0.24698     0.07362
asc_others     0.04867     1.00000     0.49982     0.38185     0.12953     0.27818
bTInc          0.28370     0.49982     1.00000    -0.13862     0.10486    -0.03072
bCost         -0.76465     0.38185    -0.13862     1.00000    -0.12478     0.13275
bCro           0.24698     0.12953     0.10486    -0.12478     1.00000    -0.14571
bWaitEnv1      0.07362     0.27818    -0.03072     0.13275    -0.14571     1.00000
bWaitEnv2      0.09104     0.27988    -0.05463    -0.09273    -0.13172     0.43885
bStop1        -0.14100     0.30859     0.07328     0.24626    -0.10521     0.14177
bStop2        -0.25947     0.39329     0.06856     0.30557    -0.12303     0.16948
bSafety1       0.12679     0.42256    -0.15424     0.15113    -0.05727     0.10150
bSafety2      -0.38282     0.41155    -0.16761     0.49091    -0.23410     0.14532
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.09104    -0.14100    -0.25947     0.12679     -0.3828
asc_others     0.27988     0.30859     0.39329     0.42256      0.4116
bTInc         -0.05463     0.07328     0.06856    -0.15424     -0.1676
bCost         -0.09273     0.24626     0.30557     0.15113      0.4909
bCro          -0.13172    -0.10521    -0.12303    -0.05727     -0.2341
bWaitEnv1      0.43885     0.14177     0.16948     0.10150      0.1453
bWaitEnv2      1.00000    -0.06355     0.07491     0.37246      0.3306
bStop1        -0.06355     1.00000     0.68886    -0.01602      0.2233
bStop2         0.07491     0.68886     1.00000     0.10464      0.3743
bSafety1       0.37246    -0.01602     0.10464     1.00000      0.4770
bSafety2       0.33064     0.22329     0.37435     0.47702      1.0000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 227          0.07340062
 769          0.07445262
 437          0.09060761
 288          0.11311411
 581          0.12958132
 341          0.13151981
 657          0.13817504
 717          0.14509037
 136          0.14724232
 469          0.15397340
 134          0.16033792
 170          0.16753104
 986          0.16793421
 780          0.17451262
 712          0.17516234
 601          0.17620550
 494          0.17672631
  77          0.17959070
 802          0.18130909
  83          0.19081558

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.191436    0.191436
asc_others       0.000   -1.316364   -1.316364
bTInc            0.000   -0.005923   -0.005923
bCost            0.000    0.010388    0.010388
bCro             0.000    0.612207    0.612207
bWaitEnv1        0.000    0.081944    0.081944
bWaitEnv2        0.000    0.267032    0.267032
bStop1           0.000    0.177228    0.177228
bStop2           0.000    0.060593    0.060593
bSafety1         0.000    0.393601    0.393601
bSafety2         0.000    0.227363    0.227363

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.191436101
asc_others 1.316364321
bTInc      0.005922666
bCost      0.010388475
bCro       0.612207051
bWaitEnv1  0.081943589
bWaitEnv2  0.267031885
bStop1     0.177228388
bStop2     0.060593184
bSafety1   0.393600675
bSafety2   0.227362964


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(relInc)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop2/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(relInc)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop2/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
