Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:22:05.83214
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -21.084799
     reciprocal of condition number         : 1.13552e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1231.58
Rho-squared vs equal shares                  :  0.2358 
Adj.Rho-squared vs equal shares              :  0.229 
Rho-squared vs observed shares               :  0.1248 
Adj.Rho-squared vs observed shares           :  0.1184 
AIC                                         :  2485.16 
BIC                                         :  2543.36 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.86 
     pre-estimation                         :  00:00:0.46 
     estimation                             :  00:00:0.11 
     post-estimation                        :  00:00:0.29 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.395935    0.089859      4.4062    0.103325        3.8319
asc_others   -1.591452    0.200377     -7.9423    0.213459       -7.4555
bTInc        -0.005985  4.4023e-04    -13.5945  5.5110e-04      -10.8597
bCost       3.9138e-04    0.002085      0.1877    0.002343        0.1670
bCro          0.615502    0.073257      8.4019    0.071093        8.6577
bWaitEnv1     0.062910    0.098914      0.6360    0.099726        0.6308
bWaitEnv2     0.290291    0.093420      3.1074    0.104788        2.7703
bStop1        0.155569    0.059594      2.6105    0.063478        2.4508
bStop2        0.032454    0.047182      0.6878    0.042701        0.7600
bSafety1      0.384291    0.100440      3.8261    0.099796        3.8508
bSafety2      0.157525    0.110432      1.4264    0.090604        1.7386


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.008075    0.006447   7.097e-06  -9.654e-05  6.1005e-04    0.001697
asc_others    0.006447    0.040151   6.061e-05   3.249e-05    0.002359    0.003837
bTInc        7.097e-06   6.061e-05   1.938e-07   7.192e-08  -1.981e-06  -4.728e-06
bCost       -9.654e-05   3.249e-05   7.192e-08   4.348e-06   1.572e-06  -1.211e-06
bCro        6.1005e-04    0.002359  -1.981e-06   1.572e-06    0.005367 -3.9852e-04
bWaitEnv1     0.001697    0.003837  -4.728e-06  -1.211e-06 -3.9852e-04    0.009784
bWaitEnv2  -4.9727e-04    0.005158  -9.553e-07  -3.131e-05 -8.3493e-04    0.003322
bStop1      4.9790e-04    0.002535   2.469e-06  -8.224e-07 -2.1457e-04  6.8569e-04
bStop2      1.6718e-04    0.002006   1.661e-06  -1.306e-05 -3.4697e-04  4.1846e-04
bSafety1      0.001304    0.008039   3.735e-07  -2.262e-06  3.0360e-04  1.9803e-04
bSafety2     -0.001240    0.007346  -6.239e-07   2.503e-05 -4.2788e-04    0.001094
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -4.9727e-04  4.9790e-04  1.6718e-04    0.001304   -0.001240
asc_others    0.005158    0.002535    0.002006    0.008039    0.007346
bTInc       -9.553e-07   2.469e-06   1.661e-06   3.735e-07  -6.239e-07
bCost       -3.131e-05  -8.224e-07  -1.306e-05  -2.262e-06   2.503e-05
bCro       -8.3493e-04 -2.1457e-04 -3.4697e-04  3.0360e-04 -4.2788e-04
bWaitEnv1     0.003322  6.8569e-04  4.1846e-04  1.9803e-04    0.001094
bWaitEnv2     0.008727  -5.276e-06  5.7909e-04    0.003179    0.003279
bStop1      -5.276e-06    0.003551    0.001771 -4.6217e-04  3.1164e-04
bStop2      5.7909e-04    0.001771    0.002226   7.055e-05  7.7575e-04
bSafety1      0.003179 -4.6217e-04   7.055e-05    0.010088    0.006092
bSafety2      0.003279  3.1164e-04  7.7575e-04    0.006092    0.012195

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.010676    0.009664   9.853e-06 -1.2361e-04    0.001001    0.002604
asc_others    0.009664    0.045565   7.305e-05   6.494e-05    0.003290    0.004012
bTInc        9.853e-06   7.305e-05   3.037e-07   2.205e-07   2.520e-06  -1.625e-06
bCost      -1.2361e-04   6.494e-05   2.205e-07   5.491e-06   3.082e-05  -2.454e-05
bCro          0.001001    0.003290   2.520e-06   3.082e-05    0.005054   -0.001033
bWaitEnv1     0.002604    0.004012  -1.625e-06  -2.454e-05   -0.001033    0.009945
bWaitEnv2     0.001567    0.006091  -5.387e-06  -5.714e-05   -0.001298    0.004976
bStop1        0.001352    0.002248   2.666e-06  -4.461e-05 -4.8229e-04  5.3623e-04
bStop2      8.1756e-04    0.001822   9.614e-07  -4.560e-05 -4.6675e-04  6.3033e-04
bSafety1      0.004350    0.007826  -7.190e-06  -4.385e-05 -2.8708e-04  8.0488e-04
bSafety2   -5.6715e-04    0.004937  -4.825e-06   1.424e-05   -0.001235  5.6787e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.001567    0.001352  8.1756e-04    0.004350 -5.6715e-04
asc_others    0.006091    0.002248    0.001822    0.007826    0.004937
bTInc       -5.387e-06   2.666e-06   9.614e-07  -7.190e-06  -4.825e-06
bCost       -5.714e-05  -4.461e-05  -4.560e-05  -4.385e-05   1.424e-05
bCro         -0.001298 -4.8229e-04 -4.6675e-04 -2.8708e-04   -0.001235
bWaitEnv1     0.004976  5.3623e-04  6.3033e-04  8.0488e-04  5.6787e-04
bWaitEnv2     0.010981   6.653e-05  7.9777e-04    0.004347    0.003907
bStop1       6.653e-05    0.004029    0.001732 -3.7117e-04  4.8988e-04
bStop2      7.9777e-04    0.001732    0.001823  4.0647e-04  7.8915e-04
bSafety1      0.004347 -3.7117e-04  4.0647e-04    0.009959    0.004088
bSafety2      0.003907  4.8988e-04  7.8915e-04    0.004088    0.008209

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.35804    0.179391   -0.515202     0.09267    0.190870
asc_others     0.35804     1.00000    0.687112    0.077763     0.16073    0.193612
bTInc          0.17939     0.68711    1.000000    0.078343    -0.06144   -0.108579
bCost         -0.51520     0.07776    0.078343    1.000000     0.01029   -0.005872
bCro           0.09267     0.16073   -0.061438    0.010288     1.00000   -0.054997
bWaitEnv1      0.19087     0.19361   -0.108579   -0.005872    -0.05500    1.000000
bWaitEnv2     -0.05924     0.27555   -0.023227   -0.160701    -0.12200    0.359463
bStop1         0.09298     0.21226    0.094112   -0.006618    -0.04915    0.116323
bStop2         0.03943     0.21221    0.079983   -0.132786    -0.10038    0.089664
bSafety1       0.14443     0.39943    0.008448   -0.010799     0.04126    0.019933
bSafety2      -0.12491     0.33196   -0.012834    0.108707    -0.05289    0.100117
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     -0.05924    0.092976     0.03943    0.144434    -0.12491
asc_others     0.27555    0.212257     0.21221    0.399435     0.33196
bTInc         -0.02323    0.094112     0.07998    0.008448    -0.01283
bCost         -0.16070   -0.006618    -0.13279   -0.010799     0.10871
bCro          -0.12200   -0.049149    -0.10038    0.041261    -0.05289
bWaitEnv1      0.35946    0.116323     0.08966    0.019933     0.10012
bWaitEnv2      1.00000 -9.4774e-04     0.13138    0.338850     0.31783
bStop1     -9.4774e-04    1.000000     0.62976   -0.077212     0.04735
bStop2         0.13138    0.629757     1.00000    0.014888     0.14889
bSafety1       0.33885   -0.077212     0.01489    1.000000     0.54926
bSafety2       0.31783    0.047353     0.14889    0.549258     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.4382     0.17303    -0.51050     0.13622     0.25269
asc_others     0.43815      1.0000     0.62095     0.12981     0.21682     0.18845
bTInc          0.17303      0.6210     1.00000     0.17077     0.06433    -0.02957
bCost         -0.51050      0.1298     0.17077     1.00000     0.18500    -0.10501
bCro           0.13622      0.2168     0.06433     0.18500     1.00000    -0.14567
bWaitEnv1      0.25269      0.1884    -0.02957    -0.10501    -0.14567     1.00000
bWaitEnv2      0.14474      0.2723    -0.09329    -0.23271    -0.17422     0.47614
bStop1         0.20609      0.1659     0.07622    -0.29988    -0.10687     0.08471
bStop2         0.18530      0.1999     0.04085    -0.45566    -0.15375     0.14802
bSafety1       0.42186      0.3674    -0.13073    -0.18751    -0.04046     0.08087
bSafety2      -0.06058      0.2553    -0.09664     0.06709    -0.19175     0.06285
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.14474     0.20609     0.18530     0.42186    -0.06058
asc_others     0.27232     0.16588     0.19993     0.36739     0.25526
bTInc         -0.09329     0.07622     0.04085    -0.13073    -0.09664
bCost         -0.23271    -0.29988    -0.45566    -0.18751     0.06709
bCro          -0.17422    -0.10687    -0.15375    -0.04046    -0.19175
bWaitEnv1      0.47614     0.08471     0.14802     0.08087     0.06285
bWaitEnv2      1.00000     0.01000     0.17829     0.41567     0.41148
bStop1         0.01000     1.00000     0.63891    -0.05859     0.08518
bStop2         0.17829     0.63891     1.00000     0.09539     0.20397
bSafety1       0.41567    -0.05859     0.09539     1.00000     0.45212
bSafety2       0.41148     0.08518     0.20397     0.45212     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 227           0.0762165
 769           0.0768214
 288           0.1001837
 341           0.1042901
 717           0.1240499
 469           0.1433880
 537           0.1435005
 657           0.1492686
 780           0.1502270
  77           0.1595103
  46           0.1770659
 437           0.1772117
 802           0.1777036
 935           0.1800807
 486           0.1804613
 134           0.1809777
 136           0.1824399
 878           0.1831709
 712           0.1839500
 197           0.1871995

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.395935    0.395935
asc_others       0.000   -1.591452   -1.591452
bTInc            0.000   -0.005985   -0.005985
bCost            0.000  3.9138e-04  3.9138e-04
bCro             0.000    0.615502    0.615502
bWaitEnv1        0.000    0.062910    0.062910
bWaitEnv2        0.000    0.290291    0.290291
bStop1           0.000    0.155569    0.155569
bStop2           0.000    0.032454    0.032454
bSafety1         0.000    0.384291    0.384291
bSafety2         0.000    0.157525    0.157525

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                  Value
asc_metro  0.3959352127
asc_others 1.5914519216
bTInc      0.0059847689
bCost      0.0003913822
bCro       0.6155018141
bWaitEnv1  0.0629102554
bWaitEnv2  0.2902910592
bStop1     0.1555688014
bStop2     0.0324537591
bSafety1   0.3842910646
bSafety2   0.1575254355


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost/relInc*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop2/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost/relInc*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop2/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
