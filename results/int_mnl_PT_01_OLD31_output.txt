Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:32:30.759036
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -20.121275
     reciprocal of condition number         : 7.22598e-06
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1192.36
Rho-squared vs equal shares                  :  0.292 
Adj.Rho-squared vs equal shares              :  0.2855 
Rho-squared vs observed shares               :  0.0515 
Adj.Rho-squared vs observed shares           :  0.0443 
AIC                                         :  2406.73 
BIC                                         :  2465.41 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.71 
     pre-estimation                         :  00:00:0.33 
     estimation                             :  00:00:0.1 
     post-estimation                        :  00:00:0.28 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.529464    0.085894       6.164    0.087054         6.082
asc_others   -2.178704    0.206567     -10.547    0.234547        -9.289
bTInc        -0.005591  8.0305e-04      -6.962  8.6699e-04        -6.449
bCost        -0.011357    0.002911      -3.902    0.002740        -4.144
bCro          0.113463    0.066360       1.710    0.068780         1.650
bWaitEnv1     0.159529    0.088321       1.806    0.093802         1.701
bWaitEnv2     0.380374    0.089798       4.236    0.096813         3.929
bStop1        0.457653    0.100587       4.550    0.100696         4.545
bStop2        0.255755    0.087435       2.925    0.091695         2.789
bSafety1      0.431323    0.090305       4.776    0.089141         4.839
bSafety2      0.300147    0.103889       2.889    0.095717         3.136


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007378    0.002903   1.348e-05 -1.5056e-04   5.279e-05    0.001082
asc_others    0.002903    0.042670   8.216e-05   9.689e-05  5.3798e-04    0.004406
bTInc        1.348e-05   8.216e-05   6.449e-07  -1.047e-09  -1.606e-06  -7.743e-06
bCost      -1.5056e-04   9.689e-05  -1.047e-09   8.471e-06   8.180e-06   1.361e-05
bCro         5.279e-05  5.3798e-04  -1.606e-06   8.180e-06    0.004404 -8.2893e-04
bWaitEnv1     0.001082    0.004406  -7.743e-06   1.361e-05 -8.2893e-04    0.007801
bWaitEnv2  -6.2986e-04    0.005134   7.487e-07  -3.807e-05   -0.001139    0.003029
bStop1      1.7750e-04    0.005622  -7.981e-06   1.480e-05   -0.001175    0.001802
bStop2     -7.4764e-04    0.005404  -5.407e-06   1.397e-05   -0.001252    0.001130
bSafety1      0.001055    0.006444   1.987e-06  -3.738e-06  -6.340e-05  5.2087e-04
bSafety2     -0.001648    0.007650  -4.091e-06   5.019e-05 -8.8203e-04    0.001573
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -6.2986e-04  1.7750e-04 -7.4764e-04    0.001055   -0.001648
asc_others    0.005134    0.005622    0.005404    0.006444    0.007650
bTInc        7.487e-07  -7.981e-06  -5.407e-06   1.987e-06  -4.091e-06
bCost       -3.807e-05   1.480e-05   1.397e-05  -3.738e-06   5.019e-05
bCro         -0.001139   -0.001175   -0.001252  -6.340e-05 -8.8203e-04
bWaitEnv1     0.003029    0.001802    0.001130  5.2087e-04    0.001573
bWaitEnv2     0.008064  5.3613e-04    0.001677    0.002661    0.003327
bStop1      5.3613e-04    0.010118    0.006013 -5.9671e-04    0.001810
bStop2        0.001677    0.006013    0.007645   9.699e-05    0.002367
bSafety1      0.002661 -5.9671e-04   9.699e-05    0.008155    0.005017
bSafety2      0.003327    0.001810    0.002367    0.005017    0.010793

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007578    0.005129   8.891e-06 -1.2448e-04  4.5117e-04    0.002055
asc_others    0.005129    0.055012   8.814e-05  1.6858e-04 -8.9041e-04    0.007931
bTInc        8.891e-06   8.814e-05   7.517e-07   3.936e-07   4.510e-06  -1.118e-05
bCost      -1.2448e-04  1.6858e-04   3.936e-07   7.510e-06   2.184e-05   3.274e-06
bCro        4.5117e-04 -8.9041e-04   4.510e-06   2.184e-05    0.004731   -0.001044
bWaitEnv1     0.002055    0.007931  -1.118e-05   3.274e-06   -0.001044    0.008799
bWaitEnv2   4.8907e-04    0.007611  -5.558e-06  -4.379e-05   -0.001410    0.004719
bStop1        0.001712    0.006634  -1.602e-05  -4.824e-05   -0.002112    0.002740
bStop2      2.4746e-04    0.008622  -1.066e-05  -1.881e-05   -0.002454    0.002423
bSafety1      0.002690    0.008168   4.472e-07  -2.475e-05 -9.5404e-04    0.002269
bSafety2   -7.8288e-04    0.006542  -8.818e-06   1.369e-05   -0.001993    0.002847
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   4.8907e-04    0.001712  2.4746e-04    0.002690 -7.8288e-04
asc_others    0.007611    0.006634    0.008622    0.008168    0.006542
bTInc       -5.558e-06  -1.602e-05  -1.066e-05   4.472e-07  -8.818e-06
bCost       -4.379e-05  -4.824e-05  -1.881e-05  -2.475e-05   1.369e-05
bCro         -0.001410   -0.002112   -0.002454 -9.5404e-04   -0.001993
bWaitEnv1     0.004719    0.002740    0.002423    0.002269    0.002847
bWaitEnv2     0.009373    0.001925    0.003003    0.003564    0.005262
bStop1        0.001925    0.010140    0.006965  4.0202e-04    0.002414
bStop2        0.003003    0.006965    0.008408    0.001399    0.003490
bSafety1      0.003564  4.0202e-04    0.001399    0.007946    0.003949
bSafety2      0.005262    0.002414    0.003490    0.003949    0.009162

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000     0.16359     0.19540    -0.60227    0.009261     0.14266
asc_others    0.163586     1.00000     0.49526     0.16115    0.039247     0.24153
bTInc         0.195395     0.49526     1.00000 -4.4817e-04   -0.030130    -0.10917
bCost        -0.602265     0.16115 -4.4817e-04     1.00000    0.042354     0.05295
bCro          0.009261     0.03925    -0.03013     0.04235    1.000000    -0.14143
bWaitEnv1     0.142658     0.24153    -0.10917     0.05295   -0.141430     1.00000
bWaitEnv2    -0.081661     0.27677     0.01038    -0.14568   -0.191106     0.38197
bStop1        0.020544     0.27059    -0.09881     0.05055   -0.176038     0.20280
bStop2       -0.099551     0.29923    -0.07700     0.05488   -0.215851     0.14627
bSafety1      0.136044     0.34545     0.02739    -0.01422   -0.010579     0.06531
bSafety2     -0.184716     0.35649    -0.04903     0.16598   -0.127940     0.17147
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     -0.08166     0.02054    -0.09955     0.13604    -0.18472
asc_others     0.27677     0.27059     0.29923     0.34545     0.35649
bTInc          0.01038    -0.09881    -0.07700     0.02739    -0.04903
bCost         -0.14568     0.05055     0.05488    -0.01422     0.16598
bCro          -0.19111    -0.17604    -0.21585    -0.01058    -0.12794
bWaitEnv1      0.38197     0.20280     0.14627     0.06531     0.17147
bWaitEnv2      1.00000     0.05936     0.21357     0.32818     0.35668
bStop1         0.05936     1.00000     0.68373    -0.06569     0.17318
bStop2         0.21357     0.68373     1.00000     0.01228     0.26061
bSafety1       0.32818    -0.06569     0.01228     1.00000     0.53474
bSafety2       0.35668     0.17318     0.26061     0.53474     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.25119    0.117796    -0.52179     0.07535     0.25165
asc_others     0.25119     1.00000    0.433414     0.26227    -0.05519     0.36050
bTInc          0.11780     0.43341    1.000000     0.16566     0.07563    -0.13743
bCost         -0.52179     0.26227    0.165665     1.00000     0.11586     0.01274
bCro           0.07535    -0.05519    0.075626     0.11586     1.00000    -0.16177
bWaitEnv1      0.25165     0.36050   -0.137428     0.01274    -0.16177     1.00000
bWaitEnv2      0.05803     0.33516   -0.066214    -0.16505    -0.21178     0.51961
bStop1         0.19529     0.28089   -0.183545    -0.17480    -0.30496     0.29010
bStop2         0.03100     0.40090   -0.134033    -0.07486    -0.38914     0.28169
bSafety1       0.34670     0.39067    0.005787    -0.10134    -0.15561     0.27132
bSafety2      -0.09395     0.29139   -0.106256     0.05220    -0.30277     0.31715
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.05803     0.19529     0.03100    0.346704    -0.09395
asc_others     0.33516     0.28089     0.40090    0.390673     0.29139
bTInc         -0.06621    -0.18355    -0.13403    0.005787    -0.10626
bCost         -0.16505    -0.17480    -0.07486   -0.101336     0.05220
bCro          -0.21178    -0.30496    -0.38914   -0.155605    -0.30277
bWaitEnv1      0.51961     0.29010     0.28169    0.271323     0.31715
bWaitEnv2      1.00000     0.19750     0.33826    0.412968     0.56787
bStop1         0.19750     1.00000     0.75428    0.044787     0.25046
bStop2         0.33826     0.75428     1.00000    0.171108     0.39763
bSafety1       0.41297     0.04479     0.17111    1.000000     0.46287
bSafety2       0.56787     0.25046     0.39763    0.462872     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.02651007
 164          0.06691818
 868          0.08876171
 256          0.09574603
 502          0.10846794
 322          0.11126948
  15          0.12317130
 759          0.14697315
  23          0.16710134
 725          0.16740197
 580          0.17354669
 359          0.17694684
 187          0.17807338
 892          0.17862356
 177          0.17870366
 979          0.18011347
  11          0.18333646
 224          0.18545737
 920          0.18572803
 539          0.19318589

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.529464    0.529464
asc_others       0.000   -2.178704   -2.178704
bTInc            0.000   -0.005591   -0.005591
bCost            0.000   -0.011357   -0.011357
bCro             0.000    0.113463    0.113463
bWaitEnv1        0.000    0.159529    0.159529
bWaitEnv2        0.000    0.380374    0.380374
bStop1           0.000    0.457653    0.457653
bStop2           0.000    0.255755    0.255755
bSafety1         0.000    0.431323    0.431323
bSafety2         0.000    0.300147    0.300147

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.529464068
asc_others 2.178704339
bTInc      0.005590985
bCost      0.011356604
bCro       0.113462778
bWaitEnv1  0.159528897
bWaitEnv2  0.380374499
bStop1     0.457652745
bStop2     0.255755140
bSafety1   0.431323032
bSafety2   0.300146659


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
