Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:33:37.427325
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -19.860079
     reciprocal of condition number         : 7.34819e-06
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1189.71
Rho-squared vs equal shares                  :  0.2936 
Adj.Rho-squared vs equal shares              :  0.2871 
Rho-squared vs observed shares               :  0.0536 
Adj.Rho-squared vs observed shares           :  0.0464 
AIC                                         :  2401.41 
BIC                                         :  2460.1 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:1.07 
     pre-estimation                         :  00:00:0.63 
     estimation                             :  00:00:0.1 
     post-estimation                        :  00:00:0.34 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.516120    0.086687       5.954    0.087956         5.868
asc_others   -2.228022    0.208820     -10.670    0.238640        -9.336
bTInc        -0.006030  8.3278e-04      -7.240  9.0074e-04        -6.694
bCost        -0.011239    0.002914      -3.857    0.002747        -4.091
bCro          0.026217    0.024695       1.062    0.024104         1.088
bWaitEnv1     0.174298    0.087587       1.990    0.093121         1.872
bWaitEnv2     0.393266    0.090338       4.353    0.098198         4.005
bStop1        0.490218    0.099815       4.911    0.099025         4.950
bStop2        0.281850    0.087126       3.235    0.089165         3.161
bSafety1      0.432740    0.090427       4.786    0.090492         4.782
bSafety2      0.320380    0.104277       3.072    0.095577         3.352


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007515    0.003345   1.537e-05 -1.5230e-04  1.3435e-04    0.001105
asc_others    0.003345    0.043606   8.952e-05   8.484e-05  3.5851e-04    0.004437
bTInc        1.537e-05   8.952e-05   6.935e-07  -1.542e-08   1.943e-06  -8.312e-06
bCost      -1.5230e-04   8.484e-05  -1.542e-08   8.490e-06   2.123e-06   1.257e-05
bCro        1.3435e-04  3.5851e-04   1.943e-06   2.123e-06  6.0987e-04 -1.8031e-04
bWaitEnv1     0.001105    0.004437  -8.312e-06   1.257e-05 -1.8031e-04    0.007672
bWaitEnv2  -6.4253e-04    0.005157  -1.022e-06  -4.038e-05 -4.1844e-04    0.002981
bStop1       8.384e-05    0.005424  -1.048e-05   1.654e-05 -2.7413e-04    0.001665
bStop2     -8.5886e-04    0.005293  -7.692e-06   1.566e-05 -3.6569e-04    0.001013
bSafety1      0.001084    0.006458   1.435e-06  -5.609e-06  -8.657e-05  6.0326e-04
bSafety2     -0.001729    0.007459  -6.472e-06   4.944e-05 -3.4751e-04    0.001547
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -6.4253e-04   8.384e-05 -8.5886e-04    0.001084   -0.001729
asc_others    0.005157    0.005424    0.005293    0.006458    0.007459
bTInc       -1.022e-06  -1.048e-05  -7.692e-06   1.435e-06  -6.472e-06
bCost       -4.038e-05   1.654e-05   1.566e-05  -5.609e-06   4.944e-05
bCro       -4.1844e-04 -2.7413e-04 -3.6569e-04  -8.657e-05 -3.4751e-04
bWaitEnv1     0.002981    0.001665    0.001013  6.0326e-04    0.001547
bWaitEnv2     0.008161  4.4570e-04    0.001663    0.002763    0.003401
bStop1      4.4570e-04    0.009963    0.005902 -5.3344e-04    0.001787
bStop2        0.001663    0.005902    0.007591  1.7142e-04    0.002399
bSafety1      0.002763 -5.3344e-04  1.7142e-04    0.008177    0.005063
bSafety2      0.003401    0.001787    0.002399    0.005063    0.010874

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007736    0.005872   1.346e-05 -1.2241e-04  1.1845e-04    0.002166
asc_others    0.005872    0.056949   9.798e-05  1.6712e-04  8.0215e-04    0.008044
bTInc        1.346e-05   9.798e-05   8.113e-07   3.810e-07   4.399e-06  -8.970e-06
bCost      -1.2241e-04  1.6712e-04   3.810e-07   7.548e-06   1.675e-05   5.465e-06
bCro        1.1845e-04  8.0215e-04   4.399e-06   1.675e-05  5.8098e-04 -1.5216e-04
bWaitEnv1     0.002166    0.008044  -8.970e-06   5.465e-06 -1.5216e-04    0.008671
bWaitEnv2   7.0840e-04    0.007621  -3.695e-06  -5.384e-05 -3.3427e-04    0.004645
bStop1        0.001820    0.006019  -1.812e-05  -5.222e-05 -5.0176e-04    0.002513
bStop2      3.9884e-04    0.008275  -1.125e-05  -2.337e-05 -5.4282e-04    0.002134
bSafety1      0.002745    0.008717   1.474e-06  -2.471e-05 -2.4360e-04    0.002312
bSafety2   -6.0182e-04    0.006553  -7.315e-06   5.194e-06 -5.0160e-04    0.002736
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   7.0840e-04    0.001820  3.9884e-04    0.002745 -6.0182e-04
asc_others    0.007621    0.006019    0.008275    0.008717    0.006553
bTInc       -3.695e-06  -1.812e-05  -1.125e-05   1.474e-06  -7.315e-06
bCost       -5.384e-05  -5.222e-05  -2.337e-05  -2.471e-05   5.194e-06
bCro       -3.3427e-04 -5.0176e-04 -5.4282e-04 -2.4360e-04 -5.0160e-04
bWaitEnv1     0.004645    0.002513    0.002134    0.002312    0.002736
bWaitEnv2     0.009643    0.001660    0.002786    0.003743    0.005351
bStop1        0.001660    0.009806    0.006554  3.0835e-04    0.002037
bStop2        0.002786    0.006554    0.007950    0.001402    0.003169
bSafety1      0.003743  3.0835e-04    0.001402    0.008189    0.004094
bSafety2      0.005351    0.002037    0.003169    0.004094    0.009135

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000     0.18478    0.212955   -0.602955     0.06276     0.14554
asc_others    0.184783     1.00000    0.514781    0.139433     0.06952     0.24258
bTInc         0.212955     0.51478    1.000000   -0.006354     0.09447    -0.11396
bCost        -0.602955     0.13943   -0.006354    1.000000     0.02950     0.04926
bCro          0.062759     0.06952    0.094468    0.029502     1.00000    -0.08336
bWaitEnv1     0.145539     0.24258   -0.113958    0.049265    -0.08336     1.00000
bWaitEnv2    -0.082047     0.27338   -0.013584   -0.153401    -0.18756     0.37674
bStop1        0.009690     0.26023   -0.126075    0.056863    -0.11121     0.19046
bStop2       -0.113716     0.29092   -0.106019    0.061696    -0.16996     0.13275
bSafety1      0.138292     0.34202    0.019049   -0.021290    -0.03876     0.07617
bSafety2     -0.191274     0.34256   -0.074529    0.162718    -0.13495     0.16936
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     -0.08205    0.009690    -0.11372     0.13829    -0.19127
asc_others     0.27338    0.260234     0.29092     0.34202     0.34256
bTInc         -0.01358   -0.126075    -0.10602     0.01905    -0.07453
bCost         -0.15340    0.056863     0.06170    -0.02129     0.16272
bCro          -0.18756   -0.111208    -0.16996    -0.03876    -0.13495
bWaitEnv1      0.37674    0.190457     0.13275     0.07617     0.16936
bWaitEnv2      1.00000    0.049429     0.21125     0.33823     0.36100
bStop1         0.04943    1.000000     0.67866    -0.05910     0.17170
bStop2         0.21125    0.678656     1.00000     0.02176     0.26402
bSafety1       0.33823   -0.059101     0.02176     1.00000     0.53696
bSafety2       0.36100    0.171699     0.26402     0.53696     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.2797     0.16983    -0.50658     0.05587     0.26440
asc_others     0.27974      1.0000     0.45580     0.25491     0.13945     0.36198
bTInc          0.16983      0.4558     1.00000     0.15395     0.20260    -0.10694
bCost         -0.50658      0.2549     0.15395     1.00000     0.25288     0.02136
bCro           0.05587      0.1395     0.20260     0.25288     1.00000    -0.06779
bWaitEnv1      0.26440      0.3620    -0.10694     0.02136    -0.06779     1.00000
bWaitEnv2      0.08202      0.3252    -0.04177    -0.19957    -0.14123     0.50802
bStop1         0.20900      0.2547    -0.20313    -0.19196    -0.21022     0.27254
bStop2         0.05086      0.3889    -0.14004    -0.09541    -0.25257     0.25705
bSafety1       0.34486      0.4037     0.01809    -0.09941    -0.11168     0.27442
bSafety2      -0.07159      0.2873    -0.08497     0.01978    -0.21773     0.30744
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.08202     0.20900     0.05086     0.34486    -0.07159
asc_others     0.32522     0.25472     0.38891     0.40366     0.28729
bTInc         -0.04177    -0.20313    -0.14004     0.01809    -0.08497
bCost         -0.19957    -0.19196    -0.09541    -0.09941     0.01978
bCro          -0.14123    -0.21022    -0.25257    -0.11168    -0.21773
bWaitEnv1      0.50802     0.27254     0.25705     0.27442     0.30744
bWaitEnv2      1.00000     0.17075     0.31822     0.42122     0.57018
bStop1         0.17075     1.00000     0.74231     0.03441     0.21522
bStop2         0.31822     0.74231     1.00000     0.17382     0.37191
bSafety1       0.42122     0.03441     0.17382     1.00000     0.47338
bSafety2       0.57018     0.21522     0.37191     0.47338     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.02846265
 164          0.06538670
 868          0.09307432
 322          0.10643708
  15          0.11130900
 759          0.12832066
 256          0.13462490
 359          0.16614759
  11          0.16704425
 979          0.16824710
 502          0.16848386
 449          0.17083515
 920          0.17183157
  23          0.17649922
 886          0.18100074
 187          0.18126388
 580          0.18240549
 646          0.18396716
 888          0.19005859
 620          0.19305894

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.516120    0.516120
asc_others       0.000   -2.228022   -2.228022
bTInc            0.000   -0.006030   -0.006030
bCost            0.000   -0.011239   -0.011239
bCro             0.000    0.026217    0.026217
bWaitEnv1        0.000    0.174298    0.174298
bWaitEnv2        0.000    0.393266    0.393266
bStop1           0.000    0.490218    0.490218
bStop2           0.000    0.281850    0.281850
bSafety1         0.000    0.432740    0.432740
bSafety2         0.000    0.320380    0.320380

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.516120003
asc_others 2.228021929
bTInc      0.006029664
bCost      0.011238810
bCro       0.026216628
bWaitEnv1  0.174297653
bWaitEnv2  0.393266166
bStop1     0.490218436
bStop2     0.281849890
bSafety1   0.432739659
bSafety2   0.320379880


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro/relInc*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro/relInc*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
