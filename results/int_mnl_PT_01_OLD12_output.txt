Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_01
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 06:09:17.996368
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -14.881924
     reciprocal of condition number         : 7.83582e-07
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1227.13
Rho-squared vs equal shares                  :  0.2386 
Adj.Rho-squared vs equal shares              :  0.2318 
Rho-squared vs observed shares               :  0.128 
Adj.Rho-squared vs observed shares           :  0.1216 
AIC                                         :  2476.27 
BIC                                         :  2534.47 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:1 
     pre-estimation                         :  00:00:0.61 
     estimation                             :  00:00:0.08 
     post-estimation                        :  00:00:0.32 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro    -0.132143    0.155321     -0.8508    0.198306       -0.6664
asc_others   -1.008800    0.237164     -4.2536    0.267249       -3.7748
bTInc        -0.005573  4.2751e-04    -13.0356  5.8854e-04       -9.4689
bCost         0.032195    0.007915      4.0677    0.009805        3.2835
bCro          0.628471    0.073712      8.5260    0.070825        8.8735
bWaitEnv1     0.090788    0.099299      0.9143    0.099490        0.9125
bWaitEnv2     0.171568    0.097700      1.7561    0.107644        1.5938
bStop1        0.187261    0.059692      3.1371    0.063522        2.9480
bStop2        0.046522    0.046853      0.9929    0.039582        1.1753
bSafety1      0.409453    0.101246      4.0441    0.099490        4.1155
bSafety2      0.333592    0.122143      2.7312    0.114542        2.9124


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.024125   -0.010357   4.272e-06   -0.001066 -1.7654e-04  2.7305e-04
asc_others   -0.010357    0.056247   6.140e-05    0.001023    0.003237    0.005393
bTInc        4.272e-06   6.140e-05   1.828e-07   2.358e-07  -1.571e-06  -3.858e-06
bCost        -0.001066    0.001023   2.358e-07   6.265e-05   4.870e-05   8.265e-05
bCro       -1.7654e-04    0.003237  -1.571e-06   4.870e-05    0.005433 -3.1769e-04
bWaitEnv1   2.7305e-04    0.005393  -3.858e-06   8.265e-05 -3.1769e-04    0.009860
bWaitEnv2     0.002671    0.001971  -7.952e-07 -2.3057e-04 -9.6941e-04    0.003026
bStop1     -5.0812e-04    0.003359   2.629e-06   5.612e-05 -1.6769e-04  6.2887e-04
bStop2     -7.4909e-04    0.002708   2.045e-06   3.641e-05 -3.2856e-04  3.9492e-04
bSafety1    4.6092e-04    0.009186   7.551e-07   4.931e-05  3.6876e-04  3.9357e-04
bSafety2     -0.007367    0.014010   9.888e-07  3.9419e-04  -9.024e-05    0.001900
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.002671 -5.0812e-04 -7.4909e-04  4.6092e-04   -0.007367
asc_others    0.001971    0.003359    0.002708    0.009186    0.014010
bTInc       -7.952e-07   2.629e-06   2.045e-06   7.551e-07   9.888e-07
bCost      -2.3057e-04   5.612e-05   3.641e-05   4.931e-05  3.9419e-04
bCro       -9.6941e-04 -1.6769e-04 -3.2856e-04  3.6876e-04  -9.024e-05
bWaitEnv1     0.003026  6.2887e-04  3.9492e-04  3.9357e-04    0.001900
bWaitEnv2     0.009545 -2.2130e-04  3.3644e-04    0.003020    0.002195
bStop1     -2.2130e-04    0.003563    0.001724 -3.1824e-04  6.6136e-04
bStop2      3.3644e-04    0.001724    0.002195  2.1482e-04    0.001143
bSafety1      0.003020 -3.1824e-04  2.1482e-04    0.010251    0.006580
bSafety2      0.002195  6.6136e-04    0.001143    0.006580    0.014919

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.039325   -0.016864  -8.302e-06   -0.001736  5.2750e-04  9.6224e-04
asc_others   -0.016864    0.071422  1.0092e-04    0.001541    0.004176    0.005209
bTInc       -8.302e-06  1.0092e-04   3.464e-07   1.309e-06   3.306e-06  -1.798e-07
bCost        -0.001736    0.001541   1.309e-06   9.614e-05   6.527e-05   6.345e-05
bCro        5.2750e-04    0.004176   3.306e-06   6.527e-05    0.005016 -9.7380e-04
bWaitEnv1   9.6224e-04    0.005209  -1.798e-07   6.345e-05 -9.7380e-04    0.009898
bWaitEnv2     0.006743    0.001467  -6.260e-06 -3.6657e-04   -0.001227    0.004355
bStop1     -1.2647e-04    0.003290   4.813e-06   3.259e-05 -3.3918e-04  3.1759e-04
bStop2     -5.2933e-04    0.002674   3.276e-06   1.761e-05 -3.1176e-04  4.0868e-04
bSafety1      0.003546    0.007901  -6.679e-06  -1.907e-05 -2.5707e-04  8.6542e-04
bSafety2     -0.012191    0.016094   4.440e-06  6.7582e-04 -8.3558e-04    0.001578
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.006743 -1.2647e-04 -5.2933e-04    0.003546   -0.012191
asc_others    0.001467    0.003290    0.002674    0.007901    0.016094
bTInc       -6.260e-06   4.813e-06   3.276e-06  -6.679e-06   4.440e-06
bCost      -3.6657e-04   3.259e-05   1.761e-05  -1.907e-05  6.7582e-04
bCro         -0.001227 -3.3918e-04 -3.1176e-04 -2.5707e-04 -8.3558e-04
bWaitEnv1     0.004355  3.1759e-04  4.0868e-04  8.6542e-04    0.001578
bWaitEnv2     0.011587 -3.3574e-04  3.0692e-04    0.003865    0.001367
bStop1     -3.3574e-04    0.004035    0.001496 -2.8356e-04    0.001068
bStop2      3.0692e-04    0.001496    0.001567  3.5640e-04    0.001217
bSafety1      0.003865 -2.8356e-04  3.5640e-04    0.009898    0.004175
bSafety2      0.001367    0.001068    0.001217    0.004175    0.013120

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000    -0.28116     0.06433    -0.86712    -0.01542     0.01770
asc_others    -0.28116     1.00000     0.60562     0.54501     0.18516     0.22899
bTInc          0.06433     0.60562     1.00000     0.06969    -0.04986    -0.09087
bCost         -0.86712     0.54501     0.06969     1.00000     0.08347     0.10516
bCro          -0.01542     0.18516    -0.04986     0.08347     1.00000    -0.04340
bWaitEnv1      0.01770     0.22899    -0.09087     0.10516    -0.04340     1.00000
bWaitEnv2      0.17604     0.08505    -0.01904    -0.29817    -0.13461     0.31192
bStop1        -0.05480     0.23729     0.10303     0.11879    -0.03811     0.10610
bStop2        -0.10294     0.24370     0.10208     0.09818    -0.09514     0.08489
bSafety1       0.02931     0.38258     0.01745     0.06153     0.04941     0.03915
bSafety2      -0.38834     0.48362     0.01894     0.40774    -0.01002     0.15668
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.17604    -0.05480    -0.10294     0.02931    -0.38834
asc_others     0.08505     0.23729     0.24370     0.38258     0.48362
bTInc         -0.01904     0.10303     0.10208     0.01745     0.01894
bCost         -0.29817     0.11879     0.09818     0.06153     0.40774
bCro          -0.13461    -0.03811    -0.09514     0.04941    -0.01002
bWaitEnv1      0.31192     0.10610     0.08489     0.03915     0.15668
bWaitEnv2      1.00000    -0.03795     0.07350     0.30533     0.18398
bStop1        -0.03795     1.00000     0.61626    -0.05266     0.09071
bStop2         0.07350     0.61626     1.00000     0.04529     0.19980
bSafety1       0.30533    -0.05266     0.04529     1.00000     0.53205
bSafety2       0.18398     0.09071     0.19980     0.53205     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000    -0.31821   -0.071135    -0.89291     0.03756    0.048772
asc_others    -0.31821     1.00000    0.641621     0.58816     0.22062    0.195893
bTInc         -0.07114     0.64162    1.000000     0.22691     0.07931   -0.003072
bCost         -0.89291     0.58816    0.226905     1.00000     0.09398    0.065045
bCro           0.03756     0.22062    0.079308     0.09398     1.00000   -0.138197
bWaitEnv1      0.04877     0.19589   -0.003072     0.06505    -0.13820    1.000000
bWaitEnv2      0.31589     0.05099   -0.098805    -0.34731    -0.16097    0.406622
bStop1        -0.01004     0.19380    0.128746     0.05232    -0.07539    0.050253
bStop2        -0.06744     0.25280    0.140634     0.04536    -0.11121    0.103779
bSafety1       0.17975     0.29717   -0.114064    -0.01955    -0.03648    0.087432
bSafety2      -0.53673     0.52575    0.065860     0.60175    -0.10300    0.138489
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.31589    -0.01004    -0.06744     0.17975    -0.53673
asc_others     0.05099     0.19380     0.25280     0.29717     0.52575
bTInc         -0.09881     0.12875     0.14063    -0.11406     0.06586
bCost         -0.34731     0.05232     0.04536    -0.01955     0.60175
bCro          -0.16097    -0.07539    -0.11121    -0.03648    -0.10300
bWaitEnv1      0.40662     0.05025     0.10378     0.08743     0.13849
bWaitEnv2      1.00000    -0.04910     0.07203     0.36087     0.11086
bStop1        -0.04910     1.00000     0.59498    -0.04487     0.14684
bStop2         0.07203     0.59498     1.00000     0.09050     0.26834
bSafety1       0.36087    -0.04487     0.09050     1.00000     0.36637
bSafety2       0.11086     0.14684     0.26834     0.36637     1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 227          0.03270318
 769          0.06865647
 469          0.09664888
 288          0.12817401
 341          0.12820990
 581          0.15317120
 537          0.16013306
 200          0.16726830
 717          0.16868771
 780          0.16923516
 437          0.17025800
 657          0.17772082
 136          0.17945921
 802          0.19039475
 748          0.19157483
  83          0.19837835
  46          0.20253041
 170          0.20328618
 652          0.20369867
 601          0.20542452

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000   -0.132143   -0.132143
asc_others       0.000   -1.008800   -1.008800
bTInc            0.000   -0.005573   -0.005573
bCost            0.000    0.032195    0.032195
bCro             0.000    0.628471    0.628471
bWaitEnv1        0.000    0.090788    0.090788
bWaitEnv2        0.000    0.171568    0.171568
bStop1           0.000    0.187261    0.187261
bStop2           0.000    0.046522    0.046522
bSafety1         0.000    0.409453    0.409453
bSafety2         0.000    0.333592    0.333592

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_01"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.132143071
asc_others 1.008800041
bTInc      0.005572855
bCost      0.032195167
bCro       0.628470618
bWaitEnv1  0.090787691
bWaitEnv2  0.171568226
bStop1     0.187261429
bStop2     0.046521550
bSafety1   0.409452578
bSafety2   0.333591746


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*tc_bus+bCro*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop2/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop2/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
