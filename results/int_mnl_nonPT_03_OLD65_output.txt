Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_nonPT_03
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-14 14:35:14.208228
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -20.610163
     reciprocal of condition number         : 7.60452e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1228.6
Rho-squared vs equal shares                  :  0.2377 
Adj.Rho-squared vs equal shares              :  0.2309 
Rho-squared vs observed shares               :  0.1269 
Adj.Rho-squared vs observed shares           :  0.1205 
AIC                                         :  2479.2 
BIC                                         :  2537.4 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.79 
     pre-estimation                         :  00:00:0.3 
     estimation                             :  00:00:0.1 
     post-estimation                        :  00:00:0.39 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.84066     0.07699     10.9185    0.090458        9.2934
asc_others    -0.91867     0.19385     -4.7391    0.217052       -4.2325
bTInc         -0.01119  9.4077e-04    -11.8903    0.001298       -8.6201
bCost         -0.04097     0.01047     -3.9125    0.012949       -3.1637
bCro           0.60797     0.07477      8.1316    0.071027        8.5597
bWaitEnv1     -0.10703     0.09916     -1.0793    0.099374       -1.0770
bWaitEnv2      0.21836     0.09335      2.3390    0.100170        2.1798
bStop1         0.12220     0.10891      1.1220    0.113239        1.0791
bStop2        -0.27631     0.09319     -2.9651    0.095811       -2.8839
bSafety1       0.45346     0.10062      4.5066    0.099469        4.5588
bSafety2       0.02441     0.11090      0.2201    0.091727        0.2661


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.005928    0.003895  -5.882e-06   9.314e-07  6.7463e-04    0.001754
asc_others    0.003895    0.037576   9.377e-05  9.8537e-04    0.002434    0.005699
bTInc       -5.882e-06   9.377e-05   8.850e-07   4.444e-06  -2.296e-06  -1.397e-06
bCost        9.314e-07  9.8537e-04   4.444e-06  1.0963e-04   2.012e-05   2.301e-05
bCro        6.7463e-04    0.002434  -2.296e-06   2.012e-05    0.005590 -5.6058e-04
bWaitEnv1     0.001754    0.005699  -1.397e-06   2.301e-05 -5.6058e-04    0.009833
bWaitEnv2    -0.001426    0.006116   5.637e-07   5.442e-05 -7.4140e-04    0.003290
bStop1      8.0451e-04    0.006451  -3.881e-06  -2.991e-05 -9.4160e-04    0.001234
bStop2     -8.9988e-04    0.006142   1.434e-06   1.473e-05   -0.001106  9.5176e-04
bSafety1      0.001274    0.007690  -2.686e-06   1.951e-05  4.0124e-04  2.9694e-04
bSafety2   -7.1385e-04    0.008946   2.399e-06   1.393e-05 -3.4194e-04    0.001284
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.001426  8.0451e-04 -8.9988e-04    0.001274 -7.1385e-04
asc_others    0.006116    0.006451    0.006142    0.007690    0.008946
bTInc        5.637e-07  -3.881e-06   1.434e-06  -2.686e-06   2.399e-06
bCost        5.442e-05  -2.991e-05   1.473e-05   1.951e-05   1.393e-05
bCro       -7.4140e-04 -9.4160e-04   -0.001106  4.0124e-04 -3.4194e-04
bWaitEnv1     0.003290    0.001234  9.5176e-04  2.9694e-04    0.001284
bWaitEnv2     0.008715  -4.740e-05    0.001245    0.003172    0.003514
bStop1      -4.740e-05    0.011862    0.006397 -8.3934e-04    0.001421
bStop2        0.001245    0.006397    0.008684   1.846e-05    0.002259
bSafety1      0.003172 -8.3934e-04   1.846e-05    0.010125    0.006009
bSafety2      0.003514    0.001421    0.002259    0.006009    0.012298

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.008183    0.007192  -7.021e-06  -7.167e-05    0.001285    0.001730
asc_others    0.007192    0.047111  1.5410e-04    0.001370  8.6614e-04    0.005908
bTInc       -7.021e-06  1.5410e-04   1.684e-06   9.267e-06  -6.234e-06   1.613e-05
bCost       -7.167e-05    0.001370   9.267e-06  1.6768e-04 -1.0455e-04  1.3624e-04
bCro          0.001285  8.6614e-04  -6.234e-06 -1.0455e-04    0.005045   -0.001083
bWaitEnv1     0.001730    0.005908   1.613e-05  1.3624e-04   -0.001083    0.009875
bWaitEnv2   2.5983e-04    0.007826   4.233e-06  1.9144e-04 -5.8345e-04    0.004586
bStop1        0.001774    0.008980  -2.452e-06  1.2950e-04   -0.001476    0.001765
bStop2       -0.001319    0.008080   1.473e-05  1.4706e-04   -0.001080    0.001229
bSafety1      0.004130    0.008089  -1.504e-05   7.300e-05  -2.813e-05  -7.040e-05
bSafety2    1.6601e-04    0.008376   9.704e-07   6.142e-05   -0.001201  5.8307e-04
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   2.5983e-04    0.001774   -0.001319    0.004130  1.6601e-04
asc_others    0.007826    0.008980    0.008080    0.008089    0.008376
bTInc        4.233e-06  -2.452e-06   1.473e-05  -1.504e-05   9.704e-07
bCost       1.9144e-04  1.2950e-04  1.4706e-04   7.300e-05   6.142e-05
bCro       -5.8345e-04   -0.001476   -0.001080  -2.813e-05   -0.001201
bWaitEnv1     0.004586    0.001765    0.001229  -7.040e-05  5.8307e-04
bWaitEnv2     0.010034 -2.5729e-04  -2.299e-05    0.003282    0.003631
bStop1     -2.5729e-04    0.012823    0.007290 -6.8728e-04    0.003452
bStop2      -2.299e-05    0.007290    0.009180 -9.5029e-04    0.003316
bSafety1      0.003282 -6.8728e-04 -9.5029e-04    0.009894    0.003545
bSafety2      0.003631    0.003452    0.003316    0.003545    0.008414

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     1.000000      0.2610   -0.081204    0.001155     0.11719     0.22973
asc_others    0.260952      1.0000    0.514201    0.485478     0.16794     0.29649
bTInc        -0.081204      0.5142    1.000000    0.451133    -0.03265    -0.01498
bCost         0.001155      0.4855    0.451133    1.000000     0.02570     0.02216
bCro          0.117192      0.1679   -0.032649    0.025701     1.00000    -0.07561
bWaitEnv1     0.229727      0.2965   -0.014979    0.022164    -0.07561     1.00000
bWaitEnv2    -0.198368      0.3380    0.006419    0.055673    -0.10622     0.35536
bStop1        0.095937      0.3055   -0.037878   -0.026230    -0.11563     0.11428
bStop2       -0.125417      0.3400    0.016360    0.015099    -0.15876     0.10300
bSafety1      0.164409      0.3942   -0.028374    0.018515     0.05333     0.02976
bSafety2     -0.083605      0.4161    0.022993    0.011996    -0.04124     0.11677
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro    -0.198368    0.095937   -0.125417    0.164409    -0.08361
asc_others    0.337984    0.305540    0.340015    0.394244     0.41614
bTInc         0.006419   -0.037878    0.016360   -0.028374     0.02299
bCost         0.055673   -0.026230    0.015099    0.018515     0.01200
bCro         -0.106222   -0.115630   -0.158764    0.053334    -0.04124
bWaitEnv1     0.355362    0.114277    0.102995    0.029760     0.11677
bWaitEnv2     1.000000   -0.004662    0.143077    0.337699     0.33942
bStop1       -0.004662    1.000000    0.630235   -0.076587     0.11764
bStop2        0.143077    0.630235    1.000000    0.001969     0.21862
bSafety1      0.337699   -0.076587    0.001969    1.000000     0.53849
bSafety2      0.339421    0.117641    0.218617    0.538488     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.36631   -0.059816    -0.06118    0.199941    0.192480
asc_others     0.36631     1.00000    0.547129     0.48759    0.056183    0.273915
bTInc         -0.05982     0.54713    1.000000     0.55148   -0.067632    0.125049
bCost         -0.06118     0.48759    0.551476     1.00000   -0.113672    0.105874
bCro           0.19994     0.05618   -0.067632    -0.11367    1.000000   -0.153377
bWaitEnv1      0.19248     0.27391    0.125049     0.10587   -0.153377    1.000000
bWaitEnv2      0.02868     0.35995    0.032568     0.14759   -0.082005    0.460669
bStop1         0.17322     0.36535   -0.016685     0.08832   -0.183460    0.156882
bStop2        -0.15220     0.38854    0.118473     0.11854   -0.158726    0.129096
bSafety1       0.45896     0.37465   -0.116533     0.05668   -0.003981   -0.007122
bSafety2       0.02001     0.42070    0.008153     0.05171   -0.184295    0.063966
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     0.028675     0.17322   -0.152204    0.458958    0.020008
asc_others    0.359949     0.36535    0.388541    0.374653    0.420696
bTInc         0.032568    -0.01668    0.118473   -0.116533    0.008153
bCost         0.147586     0.08832    0.118536    0.056676    0.051707
bCro         -0.082005    -0.18346   -0.158726   -0.003981   -0.184295
bWaitEnv1     0.460669     0.15688    0.129096   -0.007122    0.063966
bWaitEnv2     1.000000    -0.02268   -0.002396    0.329390    0.395227
bStop1       -0.022683     1.00000    0.671963   -0.061017    0.332300
bStop2       -0.002396     0.67196    1.000000   -0.099713    0.377311
bSafety1      0.329390    -0.06102   -0.099713    1.000000    0.388582
bSafety2      0.395227     0.33230    0.377311    0.388582    1.000000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 802          0.03912574
 341          0.06612284
 769          0.07003355
 288          0.08041251
 227          0.08649437
 460          0.13708592
 468          0.14413425
 787          0.14754658
 657          0.14938894
 986          0.15115043
 559          0.15428866
 134          0.15908164
 170          0.16760454
 717          0.17480509
 136          0.18117614
 437          0.18398996
 780          0.18637815
 878          0.18692168
 486          0.20391454
 323          0.20838813

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.84066     0.84066
asc_others       0.000    -0.91867    -0.91867
bTInc            0.000    -0.01119    -0.01119
bCost            0.000    -0.04097    -0.04097
bCro             0.000     0.60797     0.60797
bWaitEnv1        0.000    -0.10703    -0.10703
bWaitEnv2        0.000     0.21836     0.21836
bStop1           0.000     0.12220     0.12220
bStop2           0.000    -0.27631    -0.27631
bSafety1         0.000     0.45346     0.45346
bSafety2         0.000     0.02441     0.02441

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_nonPT_03"                                                                                                                        
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.84066420
asc_others 0.91866504
bTInc      0.01118608
bCost      0.04096638
bCro       0.60796853
bWaitEnv1  0.10702704
bWaitEnv2  0.21835582
bStop1     0.12220121
bStop2     0.27631430
bSafety1   0.45346444
bSafety2   0.02440879


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
