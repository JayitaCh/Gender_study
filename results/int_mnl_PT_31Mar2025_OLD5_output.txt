Model run by geojch using Apollo 0.3.5 on R 4.4.2 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_31Mar2025
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-04-19 11:20:09.073533
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -14.405661
     reciprocal of condition number         : 1.92984e-05
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1197.21
Rho-squared vs equal shares                  :  0.2891 
Adj.Rho-squared vs equal shares              :  0.2826 
Rho-squared vs observed shares               :  0.0476 
Adj.Rho-squared vs observed shares           :  0.0405 
AIC                                         :  2416.42 
BIC                                         :  2475.11 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:1.08 
     pre-estimation                         :  00:00:0.57 
     estimation                             :  00:00:0.19 
     post-estimation                        :  00:00:0.32 
Iterations                                  :  10  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.31939    0.099255       3.218    0.096721         3.302
asc_others    -2.63287    0.253717     -10.377    0.293554        -8.969
bTInc         -0.01467    0.002343      -6.263    0.002460        -5.965
bCost         -0.04726    0.014650      -3.226    0.013566        -3.483
bCro           0.15414    0.060659       2.541    0.065489         2.354
bWaitEnv1      0.21074    0.089625       2.351    0.094025         2.241
bWaitEnv2      0.38383    0.088991       4.313    0.096150         3.992
bStop1         0.50263    0.101089       4.972    0.100294         5.012
bStop2         0.30990    0.087288       3.550    0.090690         3.417
bSafety1       0.40364    0.090439       4.463    0.088627         4.554
bSafety2       0.34381    0.103790       3.313    0.093271         3.686


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro     0.009852    0.010730  1.2123e-04 -8.4291e-04 -9.3874e-04
asc_others    0.010730    0.064372  4.2341e-04  1.6245e-04   -0.002277
bTInc       1.2123e-04  4.2341e-04   5.488e-06  -3.403e-06  -4.018e-05
bCost      -8.4291e-04  1.6245e-04  -3.403e-06  2.1462e-04   4.602e-05
bCro       -9.3874e-04   -0.002277  -4.018e-05   4.602e-05    0.003679
bWaitEnv1   4.0154e-04    0.002148  -4.041e-05   8.477e-05 -5.6363e-04
bWaitEnv2  -4.2568e-04    0.005785   7.122e-06 -1.8896e-04 -5.1714e-04
bStop1     -4.2898e-04    0.003540  -3.796e-05   9.327e-05 -7.8589e-04
bStop2       -0.001154    0.003618  -3.080e-05   7.365e-05 -6.3840e-04
bSafety1      0.001361    0.007534   1.585e-05  -2.595e-05  -9.144e-06
bSafety2     -0.002155    0.006075  -2.633e-05  2.8126e-04 -2.6541e-04
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro   4.0154e-04 -4.2568e-04 -4.2898e-04   -0.001154    0.001361
asc_others    0.002148    0.005785    0.003540    0.003618    0.007534
bTInc       -4.041e-05   7.122e-06  -3.796e-05  -3.080e-05   1.585e-05
bCost        8.477e-05 -1.8896e-04   9.327e-05   7.365e-05  -2.595e-05
bCro       -5.6363e-04 -5.1714e-04 -7.8589e-04 -6.3840e-04  -9.144e-06
bWaitEnv1     0.008033    0.002957    0.001965    0.001220  3.8530e-04
bWaitEnv2     0.002957    0.007919  3.2632e-04    0.001407    0.002654
bStop1        0.001965  3.2632e-04    0.010219    0.006069 -6.8912e-04
bStop2        0.001220    0.001407    0.006069    0.007619   3.191e-06
bSafety1    3.8530e-04    0.002654 -6.8912e-04   3.191e-06    0.008179
bSafety2      0.001696    0.003163    0.001857    0.002258    0.004903
              bSafety2
asc_metro    -0.002155
asc_others    0.006075
bTInc       -2.633e-05
bCost       2.8126e-04
bCro       -2.6541e-04
bWaitEnv1     0.001696
bWaitEnv2     0.003163
bStop1        0.001857
bStop2        0.002258
bSafety1      0.004903
bSafety2      0.010772

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro     0.009355    0.014125  1.0157e-04 -5.9785e-04 -8.6136e-04
asc_others    0.014125    0.086174  5.2680e-04  6.7966e-04   -0.007832
bTInc       1.0157e-04  5.2680e-04   6.050e-06   4.237e-06  -5.425e-05
bCost      -5.9785e-04  6.7966e-04   4.237e-06  1.8403e-04  -2.309e-05
bCro       -8.6136e-04   -0.007832  -5.425e-05  -2.309e-05    0.004289
bWaitEnv1     0.001962    0.006799  -2.642e-05  -3.157e-07   -0.001048
bWaitEnv2     0.001240    0.010276   2.499e-05 -1.8834e-04   -0.001445
bStop1        0.001751    0.005642  -3.296e-05 -2.6416e-04   -0.001502
bStop2      6.6932e-04    0.008949  -8.541e-06 -1.1714e-04   -0.002092
bSafety1      0.003225    0.010447   2.922e-05 -1.0746e-04   -0.001215
bSafety2   -5.2944e-04    0.006711  -3.545e-06   7.150e-05   -0.001751
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro     0.001962    0.001240    0.001751  6.6932e-04    0.003225
asc_others    0.006799    0.010276    0.005642    0.008949    0.010447
bTInc       -2.642e-05   2.499e-05  -3.296e-05  -8.541e-06   2.922e-05
bCost       -3.157e-07 -1.8834e-04 -2.6416e-04 -1.1714e-04 -1.0746e-04
bCro         -0.001048   -0.001445   -0.001502   -0.002092   -0.001215
bWaitEnv1     0.008841    0.004621    0.002658    0.002242    0.002078
bWaitEnv2     0.004621    0.009245    0.001543    0.002678    0.003408
bStop1        0.002658    0.001543    0.010059    0.006771  2.0710e-04
bStop2        0.002242    0.002678    0.006771    0.008225    0.001221
bSafety1      0.002078    0.003408  2.0710e-04    0.001221    0.007855
bSafety2      0.002783    0.004859    0.002097    0.003006    0.003629
              bSafety2
asc_metro  -5.2944e-04
asc_others    0.006711
bTInc       -3.545e-06
bCost        7.150e-05
bCro         -0.001751
bWaitEnv1     0.002783
bWaitEnv2     0.004859
bStop1        0.002097
bStop2        0.003006
bSafety1      0.003629
bSafety2      0.008699

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro      1.00000     0.42610     0.52138    -0.57968   -0.155919
asc_others     0.42610     1.00000     0.71237     0.04371   -0.147923
bTInc          0.52138     0.71237     1.00000    -0.09916   -0.282722
bCost         -0.57968     0.04371    -0.09916     1.00000    0.051782
bCro          -0.15592    -0.14792    -0.28272     0.05178    1.000000
bWaitEnv1      0.04514     0.09448    -0.19247     0.06456   -0.103673
bWaitEnv2     -0.04819     0.25622     0.03416    -0.14494   -0.095800
bStop1        -0.04275     0.13803    -0.16030     0.06298   -0.128164
bStop2        -0.13325     0.16335    -0.15063     0.05760   -0.120571
bSafety1       0.15164     0.32836     0.07479    -0.01959   -0.001667
bSafety2      -0.20922     0.23068    -0.10828     0.18497   -0.042157
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro      0.04514    -0.04819    -0.04275    -0.13325    0.151644
asc_others     0.09448     0.25622     0.13803     0.16335    0.328358
bTInc         -0.19247     0.03416    -0.16030    -0.15063    0.074788
bCost          0.06456    -0.14494     0.06298     0.05760   -0.019585
bCro          -0.10367    -0.09580    -0.12816    -0.12057   -0.001667
bWaitEnv1      1.00000     0.37080     0.21688     0.15588    0.047535
bWaitEnv2      0.37080     1.00000     0.03627     0.18113    0.329726
bStop1         0.21688     0.03627     1.00000     0.68778   -0.075376
bStop2         0.15588     0.18113     0.68778     1.00000  4.0428e-04
bSafety1       0.04753     0.32973    -0.07538  4.0428e-04    1.000000
bSafety2       0.18237     0.34246     0.17698     0.24928    0.522317
              bSafety2
asc_metro     -0.20922
asc_others     0.23068
bTInc         -0.10828
bCost          0.18497
bCro          -0.04216
bWaitEnv1      0.18237
bWaitEnv2      0.34246
bStop1         0.17698
bStop2         0.24928
bSafety1       0.52232
bSafety2       1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro
asc_metro      1.00000      0.4975     0.42695    -0.45564    -0.13599
asc_others     0.49748      1.0000     0.72957     0.17067    -0.40738
bTInc          0.42695      0.7296     1.00000     0.12698    -0.33677
bCost         -0.45564      0.1707     0.12698     1.00000    -0.02599
bCro          -0.13599     -0.4074    -0.33677    -0.02599     1.00000
bWaitEnv1      0.21577      0.2463    -0.11425 -2.4748e-04    -0.17023
bWaitEnv2      0.13337      0.3641     0.10565    -0.14439    -0.22948
bStop1         0.18054      0.1916    -0.13360    -0.19415    -0.22872
bStop2         0.07631      0.3362    -0.03829    -0.09521    -0.35221
bSafety1       0.37620      0.4015     0.13402    -0.08937    -0.20937
bSafety2      -0.05869      0.2451    -0.01545     0.05651    -0.28667
             bWaitEnv1   bWaitEnv2      bStop1      bStop2    bSafety1
asc_metro       0.2158      0.1334     0.18054     0.07631     0.37620
asc_others      0.2463      0.3641     0.19164     0.33616     0.40155
bTInc          -0.1143      0.1056    -0.13360    -0.03829     0.13402
bCost      -2.4748e-04     -0.1444    -0.19415    -0.09521    -0.08937
bCro           -0.1702     -0.2295    -0.22872    -0.35221    -0.20937
bWaitEnv1       1.0000      0.5111     0.28186     0.26291     0.24937
bWaitEnv2       0.5111      1.0000     0.16002     0.30713     0.39997
bStop1          0.2819      0.1600     1.00000     0.74446     0.02330
bStop2          0.2629      0.3071     0.74446     1.00000     0.15194
bSafety1        0.2494      0.4000     0.02330     0.15194     1.00000
bSafety2        0.3173      0.5418     0.22418     0.35532     0.43902
              bSafety2
asc_metro     -0.05869
asc_others     0.24512
bTInc         -0.01545
bCost          0.05651
bCro          -0.28667
bWaitEnv1      0.31730
bWaitEnv2      0.54180
bStop1         0.22418
bStop2         0.35532
bSafety1       0.43902
bSafety2       1.00000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.02810533
 164          0.06543848
 502          0.11870416
 256          0.12777478
 868          0.12985534
 322          0.13695452
  15          0.13961713
 759          0.15593369
 979          0.16054584
 892          0.16623829
 177          0.16633136
 888          0.16735425
 580          0.16750565
 224          0.17016850
 725          0.17027431
 359          0.17096729
 187          0.17101917
 539          0.17207479
  23          0.17298781
 448          0.17345817

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.31939     0.31939
asc_others       0.000    -2.63287    -2.63287
bTInc            0.000    -0.01467    -0.01467
bCost            0.000    -0.04726    -0.04726
bCro             0.000     0.15414     0.15414
bWaitEnv1        0.000     0.21074     0.21074
bWaitEnv2        0.000     0.38383     0.38383
bStop1           0.000     0.50263     0.50263
bStop2           0.000     0.30990     0.30990
bSafety1         0.000     0.40364     0.40364
bSafety2         0.000     0.34381     0.34381

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_31Mar2025"                                                                                                                    
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.31939073
asc_others 2.63287249
bTInc      0.01467160
bCost      0.04725629
bCro       0.15413854
bWaitEnv1  0.21074427
bWaitEnv2  0.38383417
bStop1     0.50262593
bStop2     0.30989812
bSafety1   0.40363936
bSafety2   0.34381376


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*relInc*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*relInc*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ## Final formulation
  V = list(
    bus = asc_bus + bTInc*relInc*t_bus + bCost*(0.1/relInc)*tc_bus+bCro*(relInc**2)*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*relInc*t_metro + bCost*(0.1/relInc)*tc_metro+ bCro*(relInc**2)*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+
  #     mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
