Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_PT_04
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 09:13:32.210341
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -20.313715
     reciprocal of condition number         : 7.54414e-06
Number of individuals                       : 511
Number of rows in database                  : 1533
Number of modelled outcomes                 : 1533

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1684.17
LL at equal shares, LL(0)                   : -1684.17
LL at observed shares, LL(C)                : -1257.07
LL(final)                                   : -1193.41
Rho-squared vs equal shares                  :  0.2914 
Adj.Rho-squared vs equal shares              :  0.2849 
Rho-squared vs observed shares               :  0.0506 
Adj.Rho-squared vs observed shares           :  0.0435 
AIC                                         :  2408.81 
BIC                                         :  2467.5 

Estimated parameters                        : 11
Time taken (hh:mm:ss)                       :  00:00:0.74 
     pre-estimation                         :  00:00:0.36 
     estimation                             :  00:00:0.1 
     post-estimation                        :  00:00:0.28 
Iterations                                  :  11  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus       0.000000          NA          NA          NA            NA
asc_metro     0.521737    0.086064       6.062    0.087037         5.994
asc_others   -2.164954    0.204806     -10.571    0.233856        -9.258
bTInc        -0.005761  8.2841e-04      -6.954  8.7937e-04        -6.551
bCost        -0.011262    0.002888      -3.900    0.002623        -4.293
bCro          0.172188    0.075007       2.296    0.081226         2.120
bWaitEnv1     0.151750    0.088303       1.719    0.093277         1.627
bWaitEnv2     0.388812    0.089062       4.366    0.095690         4.063
bStop1        0.452390    0.100451       4.504    0.100513         4.501
bStop2        0.256726    0.086712       2.961    0.091591         2.803
bSafety1      0.439482    0.090366       4.863    0.088377         4.973
bSafety2      0.300252    0.103144       2.911    0.093086         3.226


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1533.00 1533.00 1533.00
Times chosen                      575.00  891.00   67.00
Percentage chosen overall          37.51   58.12    4.37
Percentage chosen when available   37.51   58.12    4.37



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007407    0.002861   1.447e-05 -1.5010e-04 -2.6829e-04    0.001171
asc_others    0.002861    0.041945   8.152e-05   9.612e-05 -2.9580e-04    0.004483
bTInc        1.447e-05   8.152e-05   6.863e-07  -6.975e-09  -1.237e-05  -6.369e-06
bCost      -1.5010e-04   9.612e-05  -6.975e-09   8.339e-06   8.579e-06   1.084e-05
bCro       -2.6829e-04 -2.9580e-04  -1.237e-05   8.579e-06    0.005626 -9.4236e-04
bWaitEnv1     0.001171    0.004483  -6.369e-06   1.084e-05 -9.4236e-04    0.007797
bWaitEnv2  -5.5008e-04    0.005220   1.567e-06  -3.910e-05 -8.6948e-04    0.002984
bStop1      2.3223e-04    0.005694  -6.433e-06   1.397e-05   -0.001284    0.001772
bStop2     -6.1244e-04    0.005496  -3.953e-06   1.063e-05   -0.001187    0.001056
bSafety1      0.001098    0.006428   1.630e-06  -5.931e-06  1.0407e-04  4.7327e-04
bSafety2     -0.001537    0.007857  -2.735e-06   4.763e-05 -6.3571e-04    0.001479
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro  -5.5008e-04  2.3223e-04 -6.1244e-04    0.001098   -0.001537
asc_others    0.005220    0.005694    0.005496    0.006428    0.007857
bTInc        1.567e-06  -6.433e-06  -3.953e-06   1.630e-06  -2.735e-06
bCost       -3.910e-05   1.397e-05   1.063e-05  -5.931e-06   4.763e-05
bCro       -8.6948e-04   -0.001284   -0.001187  1.0407e-04 -6.3571e-04
bWaitEnv1     0.002984    0.001772    0.001056  4.7327e-04    0.001479
bWaitEnv2     0.007932  4.2085e-04    0.001525    0.002631    0.003196
bStop1      4.2085e-04    0.010090    0.005941 -6.3874e-04    0.001722
bStop2        0.001525    0.005941    0.007519   6.218e-05    0.002199
bSafety1      0.002631 -6.3874e-04   6.218e-05    0.008166    0.004980
bSafety2      0.003196    0.001722    0.002199    0.004980    0.010639

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007575    0.005567   8.472e-06 -1.2060e-04  1.4122e-04    0.002370
asc_others    0.005567    0.054689   9.537e-05  1.4542e-04   -0.005162    0.008600
bTInc        8.472e-06   9.537e-05   7.733e-07   4.025e-07  -1.542e-05  -4.555e-06
bCost      -1.2060e-04  1.4542e-04   4.025e-07   6.882e-06   5.539e-07  -3.277e-06
bCro        1.4122e-04   -0.005162  -1.542e-05   5.539e-07    0.006598   -0.001466
bWaitEnv1     0.002370    0.008600  -4.555e-06  -3.277e-06   -0.001466    0.008701
bWaitEnv2   8.0902e-04    0.008437   2.782e-06  -4.155e-05   -0.001720    0.004680
bStop1        0.001863    0.007448  -1.053e-05  -4.791e-05   -0.002369    0.002642
bStop2      5.0202e-04    0.009433  -3.490e-06  -1.868e-05   -0.002964    0.002289
bSafety1      0.003053    0.008653   8.197e-06  -3.166e-05   -0.001304    0.002194
bSafety2   -3.5424e-04    0.007343  -6.588e-07   6.465e-06   -0.002310    0.002645
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro   8.0902e-04    0.001863  5.0202e-04    0.003053 -3.5424e-04
asc_others    0.008437    0.007448    0.009433    0.008653    0.007343
bTInc        2.782e-06  -1.053e-05  -3.490e-06   8.197e-06  -6.588e-07
bCost       -4.155e-05  -4.791e-05  -1.868e-05  -3.166e-05   6.465e-06
bCro         -0.001720   -0.002369   -0.002964   -0.001304   -0.002310
bWaitEnv1     0.004680    0.002642    0.002289    0.002194    0.002645
bWaitEnv2     0.009157    0.001807    0.002844    0.003389    0.004930
bStop1        0.001807    0.010103    0.006943  3.5171e-04    0.002275
bStop2        0.002844    0.006943    0.008389    0.001287    0.003271
bSafety1      0.003389  3.5171e-04    0.001287    0.007810    0.003664
bSafety2      0.004930    0.002275    0.003271    0.003664    0.008665

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000     0.16233    0.203008   -0.603940    -0.04156     0.15406
asc_others     0.16233     1.00000    0.480476    0.162512    -0.01926     0.24788
bTInc          0.20301     0.48048    1.000000   -0.002916    -0.19913    -0.08706
bCost         -0.60394     0.16251   -0.002916    1.000000     0.03961     0.04250
bCro          -0.04156    -0.01926   -0.199125    0.039606     1.00000    -0.14228
bWaitEnv1      0.15406     0.24788   -0.087062    0.042495    -0.14228     1.00000
bWaitEnv2     -0.07176     0.28615    0.021241   -0.152013    -0.13016     0.37946
bStop1         0.02686     0.27677   -0.077305    0.048158    -0.17040     0.19977
bStop2        -0.08207     0.30948   -0.055036    0.042440    -0.18257     0.13788
bSafety1       0.14117     0.34730    0.021779   -0.022728     0.01535     0.05931
bSafety2      -0.17316     0.37193   -0.032009    0.159919    -0.08217     0.16234
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro     -0.07176     0.02686   -0.082066    0.141174    -0.17316
asc_others     0.28615     0.27677    0.309478    0.347303     0.37193
bTInc          0.02124    -0.07731   -0.055036    0.021779    -0.03201
bCost         -0.15201     0.04816    0.042440   -0.022728     0.15992
bCro          -0.13016    -0.17040   -0.182567    0.015354    -0.08217
bWaitEnv1      0.37946     0.19977    0.137878    0.059310     0.16234
bWaitEnv2      1.00000     0.04704    0.197417    0.326913     0.34795
bStop1         0.04704     1.00000    0.682054   -0.070367     0.16616
bStop2         0.19742     0.68205    1.000000    0.007936     0.24583
bSafety1       0.32691    -0.07037    0.007936    1.000000     0.53430
bSafety2       0.34795     0.16616    0.245832    0.534303     1.00000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.2735    0.110695   -0.528161    0.019975     0.29192
asc_others     0.27350      1.0000    0.463737    0.237032   -0.271739     0.39423
bTInc          0.11070      0.4637    1.000000    0.174465   -0.215845    -0.05553
bCost         -0.52816      0.2370    0.174465    1.000000    0.002599    -0.01339
bCro           0.01998     -0.2717   -0.215845    0.002599    1.000000    -0.19344
bWaitEnv1      0.29192      0.3942   -0.055530   -0.013391   -0.193443     1.00000
bWaitEnv2      0.09714      0.3770    0.033063   -0.165499   -0.221288     0.52438
bStop1         0.21292      0.3169   -0.119123   -0.181686   -0.290198     0.28176
bStop2         0.06297      0.4404   -0.043329   -0.077739   -0.398378     0.26791
bSafety1       0.39693      0.4187    0.105477   -0.136539   -0.181720     0.26612
bSafety2      -0.04372      0.3373   -0.008048    0.026473   -0.305478     0.30466
             bWaitEnv2      bStop1      bStop2    bSafety1    bSafety2
asc_metro      0.09714     0.21292     0.06297     0.39693   -0.043723
asc_others     0.37703     0.31686     0.44040     0.41869    0.337303
bTInc          0.03306    -0.11912    -0.04333     0.10548   -0.008048
bCost         -0.16550    -0.18169    -0.07774    -0.13654    0.026473
bCro          -0.22129    -0.29020    -0.39838    -0.18172   -0.305478
bWaitEnv1      0.52438     0.28176     0.26791     0.26612    0.304656
bWaitEnv2      1.00000     0.18785     0.32454     0.40078    0.553507
bStop1         0.18785     1.00000     0.75420     0.03959    0.243167
bStop2         0.32454     0.75420     1.00000     0.15897    0.383678
bSafety1       0.40078     0.03959     0.15897     1.00000    0.445394
bSafety2       0.55351     0.24317     0.38368     0.44539    1.000000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
  58          0.02718722
 164          0.06825196
 322          0.11212643
  15          0.11454508
 868          0.12398923
 502          0.12559221
 256          0.13904605
 580          0.15022918
 892          0.16741543
 979          0.17211019
  47          0.17495601
 539          0.17733075
 886          0.17747682
  23          0.17815767
 187          0.17975523
 224          0.17998362
 920          0.18059285
 759          0.18213339
 620          0.18383518
 501          0.18726150

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000    0.000000    0.000000
asc_metro        0.000    0.521737    0.521737
asc_others       0.000   -2.164954   -2.164954
bTInc            0.000   -0.005761   -0.005761
bCost            0.000   -0.011262   -0.011262
bCro             0.000    0.172188    0.172188
bWaitEnv1        0.000    0.151750    0.151750
bWaitEnv2        0.000    0.388812    0.388812
bStop1           0.000    0.452390    0.452390
bStop2           0.000    0.256726    0.256726
bSafety1         0.000    0.439482    0.439482
bSafety2         0.000    0.300252    0.300252

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_PT_04"                                                                                                                           
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                 Value
asc_metro  0.521737446
asc_others 2.164953928
bTInc      0.005760787
bCost      0.011262458
bCro       0.172187838
bWaitEnv1  0.151750357
bWaitEnv2  0.388812329
bStop1     0.452389588
bStop2     0.256726017
bSafety1   0.439481689
bSafety2   0.300252030


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*relInc*(sboal_bus==2)+
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
      bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*relInc*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
      bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ mCro*(sboal_metro==2) +
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+
  #     mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
  #     bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
  #     bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
