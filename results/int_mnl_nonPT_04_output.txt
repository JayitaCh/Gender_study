Model run by geojch using Apollo 0.3.4 on R 4.4.1 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : int_mnl_nonPT_04
Model description                           : Simple MNL on Gender safety data;
              Model with income and age;
              Considering same cofficient for time and cost
Model run at                                : 2025-01-15 08:00:31.549697
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -24.008184
     reciprocal of condition number         : 8.83444e-06
Number of individuals                       : 489
Number of rows in database                  : 1467
Number of modelled outcomes                 : 1467

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -1611.66
LL at equal shares, LL(0)                   : -1611.66
LL at observed shares, LL(C)                : -1407.23
LL(final)                                   : -1244.99
Rho-squared vs equal shares                  :  0.2275 
Adj.Rho-squared vs equal shares              :  0.2219 
Rho-squared vs observed shares               :  0.1153 
Adj.Rho-squared vs observed shares           :  0.1103 
AIC                                         :  2507.99 
BIC                                         :  2555.6 

Estimated parameters                        : 9
Time taken (hh:mm:ss)                       :  00:00:0.82 
     pre-estimation                         :  00:00:0.53 
     estimation                             :  00:00:0.07 
     post-estimation                        :  00:00:0.22 
Iterations                                  :  9  

Unconstrained optimisation.

Estimates:
              Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_bus        0.00000          NA          NA          NA            NA
asc_metro      0.86612     0.06909     12.5356    0.085312       10.1524
asc_others    -0.82660     0.18716     -4.4166    0.216800       -3.8127
bTInc         -0.01147  9.7139e-04    -11.8101    0.001426       -8.0435
bCost         -0.04426     0.01064     -4.1620    0.013694       -3.2323
bCro           0.59956     0.07322      8.1881    0.071107        8.4317
bWaitEnv1      0.13076     0.07775      1.6819    0.087748        1.4902
bStop1         0.02136     0.04798      0.4452    0.054565        0.3915
bSafety1       0.42955     0.09575      4.4860    0.094140        4.5629
bSafety2       0.07087     0.10708      0.6618    0.089628        0.7907


Overview of choices for MNL model component :
                                     bus   metro  others
Times available                  1467.00 1467.00 1467.00
Times chosen                      414.00  837.00  216.00
Percentage chosen overall          28.22   57.06   14.72
Percentage chosen when available   28.22   57.06   14.72



Classical covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.004774    0.004296  -4.519e-06   1.245e-05  5.9668e-04  2.6219e-04
asc_others    0.004296    0.035027  1.0317e-04    0.001083    0.002885    0.005331
bTInc       -4.519e-06  1.0317e-04   9.436e-07   5.060e-06  -2.847e-06  -9.110e-07
bCost        1.245e-05    0.001083   5.060e-06  1.1311e-04   2.674e-05   3.549e-05
bCro        5.9668e-04    0.002885  -2.847e-06   2.674e-05    0.005362 -6.6308e-04
bWaitEnv1   2.6219e-04    0.005331  -9.110e-07   3.549e-05 -6.6308e-04    0.006045
bStop1     -1.5424e-04    0.001960   2.274e-06   4.369e-05 -2.5363e-04  4.3341e-04
bSafety1      0.002216    0.007369  -5.699e-06  -2.749e-06  4.2696e-04    0.001612
bSafety2    2.2789e-04    0.007647   1.978e-07   5.616e-06 -2.8009e-04    0.002111
                bStop1    bSafety1    bSafety2
asc_metro  -1.5424e-04    0.002216  2.2789e-04
asc_others    0.001960    0.007369    0.007647
bTInc        2.274e-06  -5.699e-06   1.978e-07
bCost        4.369e-05  -2.749e-06   5.616e-06
bCro       -2.5363e-04  4.2696e-04 -2.8009e-04
bWaitEnv1   4.3341e-04    0.001612    0.002111
bStop1        0.002302   1.092e-05  8.7017e-04
bSafety1     1.092e-05    0.009169    0.005471
bSafety2    8.7017e-04    0.005471    0.011466

Robust covariance matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro     0.007278    0.007865  -7.158e-06  -5.204e-05    0.001405    0.001323
asc_others    0.007865    0.047002  1.8466e-04    0.001738    0.002259    0.007045
bTInc       -7.158e-06  1.8466e-04   2.034e-06   1.133e-05  -3.778e-06   4.870e-06
bCost       -5.204e-05    0.001738   1.133e-05  1.8753e-04  -3.104e-05  1.5026e-04
bCro          0.001405    0.002259  -3.778e-06  -3.104e-05    0.005056 -7.4064e-04
bWaitEnv1     0.001323    0.007045   4.870e-06  1.5026e-04 -7.4064e-04    0.007700
bStop1     -3.4426e-04    0.002591  -6.560e-06  1.9325e-04 -3.2372e-04  6.6692e-04
bSafety1      0.004665    0.008443  -1.527e-05   7.795e-05   9.976e-05    0.002109
bSafety2      0.001123    0.007310   8.913e-07  1.5857e-04 -8.0324e-04    0.002406
                bStop1    bSafety1    bSafety2
asc_metro  -3.4426e-04    0.004665    0.001123
asc_others    0.002591    0.008443    0.007310
bTInc       -6.560e-06  -1.527e-05   8.913e-07
bCost       1.9325e-04   7.795e-05  1.5857e-04
bCro       -3.2372e-04   9.976e-05 -8.0324e-04
bWaitEnv1   6.6692e-04    0.002109    0.002406
bStop1        0.002977  4.2249e-04    0.001644
bSafety1    4.2249e-04    0.008862    0.003613
bSafety2      0.001644    0.003613    0.008033

Classical correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.3322   -0.067332    0.016941     0.11794     0.04881
asc_others     0.33220      1.0000    0.567496    0.544220     0.21053     0.36637
bTInc         -0.06733      0.5675    1.000000    0.489767    -0.04003    -0.01206
bCost          0.01694      0.5442    0.489767    1.000000     0.03434     0.04292
bCro           0.11794      0.2105   -0.040030    0.034340     1.00000    -0.11647
bWaitEnv1      0.04881      0.3664   -0.012062    0.042917    -0.11647     1.00000
bStop1        -0.04653      0.2183    0.048781    0.085626    -0.07219     0.11618
bSafety1       0.33502      0.4112   -0.061272   -0.002699     0.06090     0.21651
bSafety2       0.03080      0.3816    0.001902    0.004932    -0.03572     0.25351
                bStop1    bSafety1    bSafety2
asc_metro    -0.046526    0.335023    0.030803
asc_others    0.218266    0.411194    0.381557
bTInc         0.048781   -0.061272    0.001902
bCost         0.085626   -0.002699    0.004932
bCro         -0.072191    0.060895   -0.035722
bWaitEnv1     0.116181    0.216507    0.253507
bStop1        1.000000    0.002377    0.169365
bSafety1      0.002377    1.000000    0.533626
bSafety2      0.169365    0.533626    1.000000

Robust correlation matrix:
             asc_metro  asc_others       bTInc       bCost        bCro   bWaitEnv1
asc_metro      1.00000      0.4252   -0.058825    -0.04455     0.23163     0.17675
asc_others     0.42522      1.0000    0.597180     0.58531     0.14654     0.37031
bTInc         -0.05883      0.5972    1.000000     0.58028    -0.03725     0.03891
bCost         -0.04455      0.5853    0.580285     1.00000    -0.03188     0.12505
bCro           0.23163      0.1465   -0.037252    -0.03188     1.00000    -0.11870
bWaitEnv1      0.17675      0.3703    0.038914     0.12505    -0.11870     1.00000
bStop1        -0.07395      0.2190   -0.084297     0.25862    -0.08343     0.13929
bSafety1       0.58089      0.4137   -0.113752     0.06046     0.01490     0.25535
bSafety2       0.14683      0.3762    0.006972     0.12920    -0.12603     0.30598
                bStop1    bSafety1    bSafety2
asc_metro     -0.07395     0.58089    0.146827
asc_others     0.21904     0.41368    0.376204
bTInc         -0.08430    -0.11375    0.006972
bCost          0.25862     0.06046    0.129197
bCro          -0.08343     0.01490   -0.126034
bWaitEnv1      0.13929     0.25535    0.305979
bStop1         1.00000     0.08225    0.336120
bSafety1       0.08225     1.00000    0.428193
bSafety2       0.33612     0.42819    1.000000

 20 most extreme outliers in terms of lowest average per choice prediction:
  ID Avg prob per choice
 802          0.02740835
 288          0.06125777
 341          0.07452044
 769          0.11583477
 227          0.12317495
 780          0.15949421
 469          0.16012301
 170          0.16145319
 437          0.17369826
 878          0.18446423
 787          0.19004376
 136          0.19080185
 657          0.19446697
 986          0.20007299
 537          0.20214036
  46          0.20487425
 468          0.20688601
 613          0.20918985
 752          0.21156242
 200          0.21248190

Changes in parameter estimates from starting values:
               Initial    Estimate  Difference
asc_bus          0.000     0.00000     0.00000
asc_metro        0.000     0.86612     0.86612
asc_others       0.000    -0.82660    -0.82660
bTInc            0.000    -0.01147    -0.01147
bCost            0.000    -0.04426    -0.04426
bCro             0.000     0.59956     0.59956
bWaitEnv1        0.000     0.13076     0.13076
bStop1           0.000     0.02136     0.02136
bSafety1         0.000     0.42955     0.42955
bSafety2         0.000     0.07087     0.07087

Settings and functions used in model definition:

apollo_control
--------------
                       Value                                                                                                                                     
modelName              "int_mnl_nonPT_04"                                                                                                                        
modelDescr             "Simple MNL on Gender safety data;\n              Model with income and age;\n              Considering same cofficient for time and cost"
indivID                "id"                                                                                                                                      
outputDirectory        "results/"                                                                                                                                
debug                  "FALSE"                                                                                                                                   
nCores                 "1"                                                                                                                                       
workInLogs             "FALSE"                                                                                                                                   
seed                   "13"                                                                                                                                      
mixing                 "FALSE"                                                                                                                                   
HB                     "FALSE"                                                                                                                                   
noValidation           "FALSE"                                                                                                                                   
noDiagnostics          "FALSE"                                                                                                                                   
calculateLLC           "TRUE"                                                                                                                                    
analyticHessian        "FALSE"                                                                                                                                   
memorySaver            "FALSE"                                                                                                                                   
panelData              "TRUE"                                                                                                                                    
analyticGrad           "TRUE"                                                                                                                                    
analyticGrad_manualSet "FALSE"                                                                                                                                   
overridePanel          "FALSE"                                                                                                                                   
preventOverridePanel   "FALSE"                                                                                                                                   
noModification         "FALSE"                                                                                                                                   

Hessian routines attempted
--------------------------
numerical jacobian of LL analytical gradient

Scaling used in computing Hessian
---------------------------------
                Value
asc_metro  0.86611995
asc_others 0.82660030
bTInc      0.01147223
bCost      0.04426345
bCro       0.59955795
bWaitEnv1  0.13076197
bStop1     0.02136097
bSafety1   0.42955099
bSafety2   0.07086674


apollo_probabilities
----------------------
function(apollo_beta, apollo_inputs, 
                              functionality="estimate"){
  ### Initialise
  apollo_attach(apollo_beta, apollo_inputs)
  on.exit(apollo_detach(apollo_beta, apollo_inputs))
  P = list()
  
  ### MNL with modified interactions of travel time and hh income and travel cost and hh income
  
  ### Utility equation for PT users
  # tInc <- relInc^3  
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+      
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +      
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),    
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ mCro*(sboal_metro==2) +      
  #     mWaitEnv1*(swaitenv_metro ==1) + mWaitEnv2*(swaitenv_metro ==2)+      mStop1*(saccstop_metro ==1) + mStop2*(saccstop_metro ==2) +      
  #     mSafety1*(safety_metro==1) + mSafety2*(safety_metro==2),    
  #   others = asc_others)
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*tInc*t_bus + bCost*(0.5/relInc)*tc_bus+bCro*relInc*(sboal_bus==2)+
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*tInc*t_metro + bCost*(0.5/relInc)*tc_metro+ bCro*relInc*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  ### Utility equation for non-PT users
  ### Equations without interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv2*(swaitenv_bus ==2)+
  #     bStop1*(saccstop_bus==1) + bStop2*(saccstop_bus==2) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv2*(swaitenv_metro ==2)+
  #     bStop1*(saccstop_metro ==1) + bStop2*(saccstop_metro ==2) +
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  ### Equations with interaction variables and considering the same coefficients across different modes
  # tInc <- relInc^3
  # V = list(
  #   bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
  #     bStWa1*(saccstop_bus==1)*(swaitenv_bus ==1) + bStWa2*(saccstop_bus==2)*(swaitenv_bus ==1) +bStWa3*(saccstop_bus==3)*(swaitenv_bus ==1) +
  #     bStWa4*(saccstop_bus==1)*(swaitenv_bus ==2) + bStWa5*(saccstop_bus==2)*(swaitenv_bus ==2) +bStWa6*(saccstop_bus==3)*(swaitenv_bus ==2) +
  #     bStWa7*(saccstop_bus==1)*(swaitenv_bus ==3) +bStWa8*(saccstop_bus==2)*(swaitenv_bus ==3) +bStWa9*(saccstop_bus==3)*(swaitenv_bus ==3) +
  #     bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
  #   metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
  #     bStWa1*(saccstop_metro==1)*(swaitenv_metro ==1) + bStWa2*(saccstop_metro==2)*(swaitenv_metro ==1) +bStWa3*(saccstop_metro==3)*(swaitenv_metro ==1) +
  #     bStWa4*(saccstop_metro==1)*(swaitenv_metro ==2) + bStWa5*(saccstop_metro==2)*(swaitenv_metro ==2) +bStWa6*(saccstop_metro==3)*(swaitenv_metro ==2) +
  #     bStWa7*(saccstop_metro==1)*(swaitenv_metro ==3) +bStWa8*(saccstop_metro==2)*(swaitenv_metro ==3) +bStWa9*(saccstop_metro==3)*(swaitenv_metro ==3)+
  #     bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
  #   others = asc_others)
  
  tInc <- relInc^3
  V = list(
    bus = asc_bus + bTInc*log(tInc)*t_bus + bCost*log(relInc**0.5)*tc_bus+bCro*(sboal_bus==2) +
      bWaitEnv1*(swaitenv_bus ==1) + bWaitEnv1*(swaitenv_bus ==2)+
      bStop1/relInc*(saccstop_bus==1) + bStop1/relInc*(saccstop_bus==2) +
      bSafety1*(safety_bus==1) + bSafety2*(safety_bus==2),
    metro = asc_metro + bTInc*log(tInc)*t_metro + bCost*log(relInc**0.5)*tc_metro+ bCro*(sboal_metro==2) +
      bWaitEnv1*(swaitenv_metro ==1) + bWaitEnv1*(swaitenv_metro ==2)+
      bStop1/relInc*(saccstop_metro ==1) + bStop1/relInc*(saccstop_metro ==2) +
      bSafety1*(safety_metro==1) + bSafety2*(safety_metro==2),
    others = asc_others)
  
  
  mnl_settings = list(
    alternatives  = c(bus="Bus", metro="Metro",others="None"),
    avail         = list(bus=av_bus, metro=av_metro,others=av_others),
    choiceVar     = Choice,
    V             = V
  )
  # V = list(
  #   bus = asc_bus + bAT*at_bus + bWT*wt_bus + bTT*tt_bus + bTC*tc_bus,
  #   metro = asc_metro + mAT*at_metro + mWT*wt_metro + mTT*tt_metro + mTC*tc_metro)
  # mnl_settings = list(
  #   alternatives  = c(bus="Bus", metro="Metro",others="None"),
  #   avail         = list(bus=av_bus, metro=av_metro,others=av_others),
  #   choiceVar     = Choice,
  #   V             = V
  # )
  P[['model']] = apollo_mnl(mnl_settings, functionality)
  
  ### Comment out as necessary
  P = apollo_panelProd(P, apollo_inputs, functionality)
  P = apollo_prepareProb(P, apollo_inputs, functionality)
  return(P)
}
